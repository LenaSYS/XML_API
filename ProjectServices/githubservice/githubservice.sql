CREATE TABLE COMMITS(
    repo        VARCHAR(64),
    id          VARCHAR(16),
    space       INTEGER,
    time        INTEGER,
    timestamp   TIMESTAMP,
    message     TEXT,
    author      VARCHAR(64),
    login       VARCHAR(32),
    avatar      VARCHAR(128),
    parents     TEXT,
    PRIMARY KEY(id)
);

CREATE TABLE SECTION(
    filename    VARCHAR(128),
    author      VARCHAR(64),
    commitid    VARCHAR(16),
    message     TEXT,
    timestamp   TIMESTAMP,
    lines       TEXT,
    fullname    VARCHAR(256),
    repo        VARCHAR(64) 
);

CREATE TABLE REPO(
    name      VARCHAR(64),
    url       VARCHAR(128),
    files     TEXT
);

INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","d4f918da","0","0","2017-11-23 13:09:35","Initial commit","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","1b17f724","0","1","2017-11-23 13:12:16","Seed","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__d4f918da__,__space__:__0 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","923892b8","0","2","2017-11-23 14:32:39","Column filter seed and row filter seed","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__1b17f724__,__space__:__1 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","7f057afe","0","3","2017-11-23 15:46:52","Object Oriented Refactoring","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__923892b8__,__space__:__2 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","8adaefb4","0","4","2017-11-23 18:37:01","More Better Fix","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__7f057afe__,__space__:__3 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","a5bb2542","1","5","2017-11-23 19:52:07","Sorting connected up","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__8adaefb4__,__space__:__4 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","e8797f9b","0","6","2017-11-23 20:02:14","Fixed renderCell","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__8adaefb4__,__space__:__4 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","7d8adcee","0","7","2017-11-23 20:11:02","Merge remote-tracking branch origin/master","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__e8797f9b__,__space__:__6 __,__time__:__0__},{__id__:__a5bb2542__,__space__:__5 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","c7e3716e","0","8","2017-11-23 20:50:07","simple sort added","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__7d8adcee__,__space__:__7 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","6241f4e4","0","9","2017-11-23 21:26:19","First / Last Name Demo Support","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__c7e3716e__,__space__:__8 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","53593ef1","0","10","2017-11-24 00:18:59","Added parameterized compare function as a callback","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__6241f4e4__,__space__:__9 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","1bbc48bb","0","11","2017-11-26 20:07:20","Introducing global comparing function","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__53593ef1__,__space__:__10 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","2c6c5b3f","0","12","2017-11-27 09:39:04","resolved conflict","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__1bbc48bb__,__space__:__11 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","baf4b960","0","13","2017-11-27 12:26:46","A new compare function ...","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__2c6c5b3f__,__space__:__12 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","4f99c58a","0","14","2017-11-27 12:32:13","duh!","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__baf4b960__,__space__:__13 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","760d1330","0","15","2017-11-27 13:31:45","Split sortstatus into sortkind and ascending (direction)","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__4f99c58a__,__space__:__14 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","dd98b1a9","0","16","2017-11-27 22:02:45","Default is to show all columns","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__760d1330__,__space__:__15 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","d74e61a6","0","17","2017-11-27 22:06:47","All table cells will have an id","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__dd98b1a9__,__space__:__16 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","4f9d7d01","0","18","2017-11-28 20:23:06","Summing footer first step","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__d74e61a6__,__space__:__17 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","e50aef6a","0","19","2017-11-28 21:10:32","Finalized sum callbacks","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__4f9d7d01__,__space__:__18 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","8f3ee638","0","20","2017-11-29 00:29:11","Row sums","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__e50aef6a__,__space__:__19 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","7de18195","0","21","2017-11-29 10:44:50","Added column heading for row sum column","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__8f3ee638__,__space__:__20 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","9897010b","0","22","2017-11-29 10:54:14","Moved row sum heading into its own variable","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__7de18195__,__space__:__21 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","2ae9af3f","0","23","2017-11-29 12:27:21","Filtered columns is now reflected in footer as well","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__9897010b__,__space__:__22 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","168d999f","0","24","2017-12-07 13:17:27","Starting magic headings","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__2ae9af3f__,__space__:__23 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","f9770547","0","25","2017-12-07 15:05:12","Magic Headings almost in place","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__168d999f__,__space__:__24 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","9c8c0292","0","26","2017-12-07 16:22:18","Bug fix","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__f9770547__,__space__:__25 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","5e5451fa","0","27","2017-12-07 17:17:18","Made all variables private in the SortableTables object and moved the magic heading into each object.","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__9c8c0292__,__space__:__26 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","03bcaf2d","0","28","2017-12-08 14:09:16","Freeze panes inspired by https://pappubahry.com/misc/js_freeze_panes/","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__5e5451fa__,__space__:__27 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","74eff0f1","1","29","2017-12-08 14:14:51","Added freeze pane as parameter to the SortableTable object","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__03bcaf2d__,__space__:__28 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","667201cb","0","30","2017-12-08 14:23:03","Test table","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__03bcaf2d__,__space__:__28 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","a531c12f","0","31","2017-12-08 14:23:13","Merge branch master of https://github.com/HGustavs/SortableTableLibrary","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__667201cb__,__space__:__30 __,__time__:__0__},{__id__:__74eff0f1__,__space__:__29 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","df676b23","0","32","2017-12-08 14:45:04","Test data generator","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__a531c12f__,__space__:__31 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","6d7d475e","1","33","2017-12-08 15:24:44","Bugfix for freeze pane mytable2","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__df676b23__,__space__:__32 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","e97655ca","1","34","2017-12-08 15:35:34","Zebra-style table","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__6d7d475e__,__space__:__33 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","38710494","0","35","2017-12-08 18:39:53","Test Data Functions","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__df676b23__,__space__:__32 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","75d1cf40","0","36","2017-12-08 18:39:56","Merge branch master of https://github.com/HGustavs/SortableTableLibrary","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__38710494__,__space__:__35 __,__time__:__0__},{__id__:__e97655ca__,__space__:__34 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","5263f0e2","0","37","2017-12-09 00:53:33","Test file for non-scroll-dependent magic heading.","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__75d1cf40__,__space__:__36 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","d33bd6a5","0","38","2017-12-09 01:15:12","Test code for copying of table contents and width","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__5263f0e2__,__space__:__37 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","8c0807e9","0","39","2017-12-12 10:50:37","Use update-loop instead of scroll handler","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__d33bd6a5__,__space__:__38 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","83a20d15","0","40","2017-12-15 10:53:39","Updated test data generator to fit previous static test data format","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__8c0807e9__,__space__:__39 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","7fc896b2","0","41","2017-12-15 12:00:38","Changed to same sized sort order arrows","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__83a20d15__,__space__:__40 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","3880fb3c","0","42","2017-12-17 19:06:27","Horizontal Magic Headings","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__7fc896b2__,__space__:__41 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","7bed241b","0","43","2017-12-17 21:36:46","Final vertical only fixed-based magic headings","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__3880fb3c__,__space__:__42 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","2e616a89","0","44","2017-12-19 20:59:45","Vertical magic headings","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__7bed241b__,__space__:__43 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","4c63a05c","0","45","2017-12-20 14:23:30","Both MH visible","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__2e616a89__,__space__:__44 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","65687a14","0","46","2017-12-21 11:25:00","Vertical and Horizontal Independent MH","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__4c63a05c__,__space__:__45 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","3c2a037a","0","47","2017-12-25 12:20:17","Now we handle table heading cells with padding.","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__65687a14__,__space__:__46 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","6346f4ca","0","48","2017-12-25 21:56:12","First release with row highlight. Does not align rows if scrolled to the right","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__3c2a037a__,__space__:__47 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","70d282c7","0","49","2017-12-25 22:05:18","I think this version fixes the alignment problem with the highlight row","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__6346f4ca__,__space__:__48 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","6e1a66b0","0","50","2018-01-31 15:49:18","Callback functionality improved.","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__70d282c7__,__space__:__49 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","ed620e51","0","51","2018-02-02 11:43:18","Row AND column highlighting","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__6e1a66b0__,__space__:__50 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","97a120ce","0","52","2018-02-05 13:37:27","Updated row clicking functionality","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__ed620e51__,__space__:__51 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","6fe3d074","0","53","2018-02-07 14:59:02","Initial editing support","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__97a120ce__,__space__:__52 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","b9d14780","0","54","2018-02-07 15:32:39","Styled the popover input to fit the cell. Controls for the input will be put outside of the cell in focus.","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__6fe3d074__,__space__:__53 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","e5858fbc","0","55","2018-02-07 20:46:41","Added simple update of celldata","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__b9d14780__,__space__:__54 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","51f1b477","0","56","2018-02-07 21:17:40","Added callback functionallity for update of cell","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__e5858fbc__,__space__:__55 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","5beb1469","0","57","2018-02-08 11:03:34","Improved callback solution for updating cell value","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__51f1b477__,__space__:__56 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","21033931","0","58","2018-02-08 20:22:13","Changing internal structure of API","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__5beb1469__,__space__:__57 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","3a96b66b","0","59","2018-02-09 01:07:10","Added an AJAX example and an initial update cell version using the new API","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__21033931__,__space__:__58 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","369b7fed","0","60","2018-02-09 09:06:31","Added support for multiple data tables in db","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__3a96b66b__,__space__:__59 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","21605115","0","61","2018-02-09 10:37:54","Bug fixes","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__369b7fed__,__space__:__60 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","832e1351","0","62","2018-04-04 16:42:18","Minimal example and checks for null callbacks","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__21605115__,__space__:__61 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","e2ccd9e1","0","63","2018-04-04 16:56:19","Embettered magic heading support","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__832e1351__,__space__:__62 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","7877f29a","0","64","2018-04-04 17:23:20","Two-Thirds-working row filter example","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__e2ccd9e1__,__space__:__63 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","44332f3b","0","65","2018-04-04 17:53:45","Added column filter demo","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__7877f29a__,__space__:__64 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","a435133a","0","66","2018-04-04 18:27:00","Seeded simple column sorting example and more advanced column sorting","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__44332f3b__,__space__:__65 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","da5f48dc","0","67","2018-04-05 12:26:38","Highlighting example w borders","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__a435133a__,__space__:__66 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","be575d08","0","68","2018-04-05 13:30:25","Editing demo","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__da5f48dc__,__space__:__67 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","30378491","1","69","2018-05-29 11:19:54","Merging students code","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__be575d08__,__space__:__68 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","8a2a3505","1","70","2018-05-29 12:57:33","Now the database example shows rows and have working sorting.","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__30378491__,__space__:__69 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","f82a5708","1","71","2018-05-29 15:39:31","Fixed icon links","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__8a2a3505__,__space__:__70 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","00751f27","1","72","2018-06-01 10:07:44","partly working db store","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__f82a5708__,__space__:__71 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","93544150","1","73","2018-06-04 10:10:20","Fix currentTable and backward compataible sqlite update statement","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__00751f27__,__space__:__72 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","b2dc8afa","1","74","2018-06-05 10:14:11","Now all examples use the new associative array definition","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__93544150__,__space__:__73 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","17aa32d4","1","75","2018-06-05 10:14:42","Bug fix for storing JSON in DB as text","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__b2dc8afa__,__space__:__74 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","4875d579","1","76","2018-06-08 23:37:55","Corrected example data to adhere to the associative array format","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__17aa32d4__,__space__:__75 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","9bbd38bb","1","77","2018-06-09 00:07:48","CRLF->LF and correcting sortorder","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__4875d579__,__space__:__76 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","bb780c64","1","78","2018-06-09 00:15:11","fixing code that suffered from refactoring","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__9bbd38bb__,__space__:__77 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","fd532245","1","79","2018-06-11 11:27:15","fixed bug in filter rendering","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__bb780c64__,__space__:__78 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","31e02d1a","0","80","2018-06-11 14:14:03","Merge pull request #4 from HGustavs/speedball","Marcus Brohede (his)","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__be575d08__,__space__:__68 __,__time__:__0__},{__id__:__fd532245__,__space__:__79 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","5e9d8d83","0","81","2018-06-11 14:16:32","Auto stash before merge of master and origin/master","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__31e02d1a__,__space__:__80 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","1b9cd209","1","82","2018-06-11 16:18:56","Refactored ... the big NO NO","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__5e9d8d83__,__space__:__81 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","16f43722","1","83","2018-06-12 00:36:14","First try : remake column filter render and a deterministic column rendering using parameter columnOrder","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__1b9cd209__,__space__:__82 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","3b022ace","1","84","2018-06-12 11:32:32","Good taste","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__16f43722__,__space__:__83 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","ca5cb233","1","85","2018-06-12 13:23:31","No works resonable well","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__3b022ace__,__space__:__84 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","62b418a5","0","86","2018-06-12 13:24:22","Merge pull request #5 from HGustavs/collitas","Marcus Brohede (his)","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__5e9d8d83__,__space__:__81 __,__time__:__0__},{__id__:__ca5cb233__,__space__:__85 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","33ddc8fb","0","87","2018-06-13 00:02:57","added working row filter example","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__62b418a5__,__space__:__86 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","77aeac5c","0","88","2018-06-14 14:19:25","Now we handle column names with _ and we put the cell value in the  sortableTable.edit_ structure","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__33ddc8fb__,__space__:__87 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","61f8fdcf","0","89","2018-06-14 14:56:47","*facepalm*","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__77aeac5c__,__space__:__88 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","5d053c52","0","90","2018-06-19 11:36:43","row filter in large example","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__61f8fdcf__,__space__:__89 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","5cd5653d","0","91","2018-06-19 13:41:59","Column filter now render correct names","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__5d053c52__,__space__:__90 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","f02b1627","0","92","2018-06-19 17:02:42","Added row sums","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__5cd5653d__,__space__:__91 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","bcfa312e","0","93","2018-06-19 19:06:55","Bug fix + Added examples for row sums","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__f02b1627__,__space__:__92 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","9bee696d","0","94","2018-06-19 19:12:19","clean up","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__bcfa312e__,__space__:__93 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","581de3ce","0","95","2018-06-19 22:22:57","More clean up","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__9bee696d__,__space__:__94 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","7af6c5e4","0","96","2018-06-19 23:04:36","Now column sums works","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__581de3ce__,__space__:__95 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","3a451591","0","97","2018-06-20 09:54:17","Clean up and bug fix","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__7af6c5e4__,__space__:__96 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","29cc755a","0","98","2018-06-20 10:33:32","Bug fix, now col sum works for row sum columns","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__3a451591__,__space__:__97 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","27325a9b","0","99","2018-06-20 13:28:44","clean up","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__29cc755a__,__space__:__98 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","0bc89c12","0","100","2018-06-20 13:43:40","Added an option to rearrange the columns, including an example","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__27325a9b__,__space__:__99 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","8d43477f","0","101","2018-06-20 16:24:46","clean up","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__0bc89c12__,__space__:__100 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","9573e04d","0","102","2018-07-04 08:22:52","Freeze pane enabled","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__8d43477f__,__space__:__101 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","9d25dffe","0","103","2018-07-04 11:52:31","Bug fix freeze pane","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__9573e04d__,__space__:__102 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","062980ef","0","104","2018-07-04 12:38:11","Rewrote highlight code","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__9d25dffe__,__space__:__103 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","f15da7d0","0","105","2018-07-04 13:00:38","Duh!","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__062980ef__,__space__:__104 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","120241cf","0","106","2018-07-04 17:09:44","Added default rowhighlight functions to sortabletable","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__f15da7d0__,__space__:__105 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","25621922","0","107","2018-07-04 17:10:33","Clean up of dead code","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__120241cf__,__space__:__106 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","a33b5073","0","108","2018-07-05 11:59:46","Added a delimiter","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__25621922__,__space__:__107 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","2ca3e09a","0","109","2018-07-05 12:02:26","Removed unused code","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__a33b5073__,__space__:__108 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","fa5041dd","0","110","2018-07-05 12:03:27","More cleanup","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__2ca3e09a__,__space__:__109 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","be83861b","0","111","2018-07-05 17:34:37","More delimiter updates","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__fa5041dd__,__space__:__110 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","13b0c580","0","112","2018-07-05 20:42:48","bug fix db example","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__be83861b__,__space__:__111 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","4ed91629","0","113","2018-07-19 11:16:54","Simplified and made defaults code more readable","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__13b0c580__,__space__:__112 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","6fb160f0","0","114","2018-07-19 15:21:19","Cleaner byString implementation","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__4ed91629__,__space__:__113 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","e5ec3c4e","0","115","2018-07-19 15:23:07","Even more secure implementation","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__6fb160f0__,__space__:__114 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","4e3c5111","0","116","2018-07-21 19:58:53","Cleanup of byString","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__e5ec3c4e__,__space__:__115 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","c593e014","0","117","2018-07-23 10:33:27","CSS background based highlighting for default row and column highlight","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__4e3c5111__,__space__:__116 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","2dc7390d","0","118","2018-07-23 11:18:57","Orange you happy to see me?","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__c593e014__,__space__:__117 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","4254f9c0","0","119","2018-08-01 14:11:40","Now uses the default highlight","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__2dc7390d__,__space__:__118 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","97719409","0","120","2018-08-01 15:45:01","Fixed MH column width issue and showing MH from top 0px","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__4254f9c0__,__space__:__119 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","ba9242db","0","121","2018-08-07 09:30:10","removed external styling for demo page","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__97719409__,__space__:__120 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","9eae9166","0","122","2018-08-07 09:31:20","magic heading now will include footer when scrolling horizontally","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__ba9242db__,__space__:__121 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","c7f89d45","0","123","2018-08-07 09:56:35","Added internal styling to demo","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__9eae9166__,__space__:__122 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","4d594058","0","124","2018-08-07 09:57:26","Fixed highlighting when magic heading is in play","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__c7f89d45__,__space__:__123 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","d0552a74","0","125","2018-08-07 10:04:26","Replaced complex external css with simplified internal css","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__4d594058__,__space__:__124 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","3982d034","0","126","2018-08-07 13:03:00","Made the examples for row summing simpler","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__d0552a74__,__space__:__125 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","ef4cf705","0","127","2018-08-07 13:06:53","Showing the JSON in the table. Better?","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__3982d034__,__space__:__126 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","fc4fd2db","0","128","2018-08-07 13:52:11","Bugfix, now highlight works regardless of if we have magic headings or not","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__ef4cf705__,__space__:__127 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","4ce73f4d","0","129","2018-08-07 13:52:41","Fixed adv highlight example","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__fc4fd2db__,__space__:__128 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","c7c1f0cd","0","130","2018-08-15 06:30:37","Added support for readOnlyColumns","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__4ce73f4d__,__space__:__129 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","e973fc30","0","131","2018-08-22 10:12:45","Bugfix","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__c7c1f0cd__,__space__:__130 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","8ec3c13d","0","132","2018-09-04 20:11:28","Changed how read-only cells are implemented","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__e973fc30__,__space__:__131 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","6cf2819d","0","133","2018-09-04 21:00:13","Deprecated readOnlyColumns config","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__8ec3c13d__,__space__:__132 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","ff162add","0","134","2018-10-16 13:04:32","Sorting fix","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__6cf2819d__,__space__:__133 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","793603b2","0","135","2018-10-23 19:48:45","Updated with col highlight ...","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__ff162add__,__space__:__134 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","e07b702d","0","136","2018-10-23 20:05:02","Embettering handling of magic headings","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__793603b2__,__space__:__135 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","a16baf8d","0","137","2018-10-23 23:10:36","Changed to css classes for additional speed","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__e07b702d__,__space__:__136 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","3c3a2ed4","0","138","2018-10-23 23:19:16","Easy reading demo and tooltips on headings","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__a16baf8d__,__space__:__137 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","46176820","0","139","2018-10-23 23:31:47","Readability of gnarly delimiter code","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__3c3a2ed4__,__space__:__138 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","f8042993","0","140","2018-10-23 23:35:06","Minor adjustment of unused func","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__46176820__,__space__:__139 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","608a094a","0","141","2018-10-23 23:54:47","Removed some un-necessary code","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__f8042993__,__space__:__140 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","a14daa50","0","142","2018-10-24 00:11:03","LeFunc","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__608a094a__,__space__:__141 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","dff4e870","0","143","2018-10-24 00:19:07","Color change","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__a14daa50__,__space__:__142 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","5857ae27","0","144","2018-10-24 13:18:04","Update sortableTable.js","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__dff4e870__,__space__:__143 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","c7c92346","0","145","2018-10-25 08:21:59","Improved magic headings","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__5857ae27__,__space__:__144 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","880b1545","0","146","2018-10-28 10:04:47","Typo fix","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__c7c92346__,__space__:__145 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","7ec088b2","1","147","2018-11-07 12:16:19","gah","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__880b1545__,__space__:__146 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","f7d0b844","0","148","2018-11-09 17:59:57","Added export feature","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__880b1545__,__space__:__146 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","ed5529f5","1","149","2019-01-11 17:04:11","more readable","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__7ec088b2__,__space__:__147 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","085d469a","1","150","2019-01-11 17:04:20","Merge remote-tracking branch origin/master","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__ed5529f5__,__space__:__149 __,__time__:__1__},{__id__:__f7d0b844__,__space__:__148 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","1864ceb8","0","151","2019-02-05 10:22:37","Embettered icons","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__f7d0b844__,__space__:__148 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","0d154a35","0","152","2019-02-05 10:22:41","Merge branch master of https://github.com/HGustavs/SortableTableLibrary","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__1864ceb8__,__space__:__151 __,__time__:__0__},{__id__:__085d469a__,__space__:__150 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","9da2e98e","0","153","2019-02-05 11:40:08","Fixed regex match bug and added in-place svg icons","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__0d154a35__,__space__:__152 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","e8624cd2","0","154","2019-02-05 11:59:05","Fix of demo and remaining icons","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__9da2e98e__,__space__:__153 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","7c844f5f","1","155","2019-08-21 10:13:02","Added simple pagination and pre/post render callbacks","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__e8624cd2__,__space__:__154 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","cedf945a","1","156","2019-08-21 10:17:42","missed some css","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__7c844f5f__,__space__:__155 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","b3bba246","0","157","2019-08-21 10:18:16","Merge branch add-simple-pagination","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__e8624cd2__,__space__:__154 __,__time__:__0__},{__id__:__cedf945a__,__space__:__156 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","6e242373","0","158","2019-08-29 11:02:46","Nearly finished email function","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__b3bba246__,__space__:__157 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","a5dff894","0","159","2019-08-29 12:04:19","Completed visible email functionality.","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__6e242373__,__space__:__158 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","d39107dc","0","160","2019-08-29 12:12:04","Fixing postFiltering callback","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__a5dff894__,__space__:__159 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","bc406bae","0","161","2019-08-29 12:57:44","Fixed refactoring problem...","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__d39107dc__,__space__:__160 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("sortabletable","0ccba180","0","162","2019-12-10 21:43:12","Prevents adding multiple copies of the same tableid","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__bc406bae__,__space__:__161 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","5409d46d","0","0","2018-12-17 14:31:18","Initial commit","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","b9ae5c75","0","1","2018-12-17 14:32:39","Seed","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__5409d46d__,__space__:__0 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","fda6ae11","0","2","2018-12-17 22:49:04","Better date / time handling and adding lunch field","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__b9ae5c75__,__space__:__1 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","6a44817e","0","3","2018-12-17 23:01:08","Styling","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__fda6ae11__,__space__:__2 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","a36ce2d1","0","4","2018-12-20 10:29:46","Create synchhistory.php","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__6a44817e__,__space__:__3 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","8f3fe28c","0","5","2018-12-20 12:37:47","Christmas Seasonal JS","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__a36ce2d1__,__space__:__4 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","39b9d6d1","0","6","2019-02-03 11:21:02","Update showsched.php","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__8f3fe28c__,__space__:__5 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","0b98fdba","0","7","2019-02-10 20:16:18","Admin interface seed","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__39b9d6d1__,__space__:__6 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","111718a4","0","8","2019-02-11 19:00:16","Partial bug fix for swedish characters in item title","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__0b98fdba__,__space__:__7 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","a77f4901","0","9","2019-02-11 19:12:40","Moved editing interface to better location","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__111718a4__,__space__:__8 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","e9215167","0","10","2019-02-11 19:35:01","Urldecode fix","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__a77f4901__,__space__:__9 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","eda21934","0","11","2019-03-07 13:03:12","Doctype","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__e9215167__,__space__:__10 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","ee6c7dcd","0","12","2019-03-13 12:43:34","Added index and fixed same day update bug.","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__eda21934__,__space__:__11 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","5110abea","0","13","2019-03-19 01:51:32","Benämning coloring added","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__ee6c7dcd__,__space__:__12 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","f6fe7bca","0","14","2019-03-19 02:22:21","de alerting","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__5110abea__,__space__:__13 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","ed1dff95","1","15","2019-03-19 15:37:22","Bugfix. Comments and activity is now written to DB from admin form.","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__f6fe7bca__,__space__:__14 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","80e1f119","1","16","2019-03-19 15:38:41","Added comment to calender printout","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__ed1dff95__,__space__:__15 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","9dc01742","1","17","2019-03-19 15:56:33","Improved table with current data","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__80e1f119__,__space__:__16 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","4faf06f3","0","18","2019-03-20 20:01:25","color fix","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__f6fe7bca__,__space__:__14 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","4c15dc28","0","19","2019-03-20 20:01:29","Merge branch master of https://github.com/HGustavs/SchedSYS","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__4faf06f3__,__space__:__18 __,__time__:__0__},{__id__:__9dc01742__,__space__:__17 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","b1c652ea","0","20","2019-11-20 15:19:51","Includes unique identifier for bookings","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__4c15dc28__,__space__:__19 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","25e20a60","0","21","2019-11-20 16:44:18","Will merge with a google calendar over secrete ical link","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__b1c652ea__,__space__:__20 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","16e6171a","0","22","2019-11-21 11:47:53","Added config file","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__25e20a60__,__space__:__21 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","9bd2a682","0","23","2019-11-21 13:21:08","Made SchedSYS use a service paradigm","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__16e6171a__,__space__:__22 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","5d083d73","0","24","2019-11-21 13:47:11","Prettier date output","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__9bd2a682__,__space__:__23 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","745ab1b0","0","25","2019-11-22 13:18:21","A first take on new sync ... has (at least) issues with moving bookings to past","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__5d083d73__,__space__:__24 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","a792eda1","0","26","2019-11-27 15:40:20","Fixed broken file","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__745ab1b0__,__space__:__25 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","f3869863","0","27","2020-02-12 11:46:47","Seed of new xml export from time-edit.","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__a792eda1__,__space__:__26 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","f3f0bed3","0","28","2020-02-12 11:53:43","Update json_export_xml.php","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__f3869863__,__space__:__27 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","898c4a6c","0","29","2020-02-12 22:21:11","Update showsched.js","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__f3f0bed3__,__space__:__28 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","4352c006","0","30","2020-02-13 16:46:19","Seed of new services","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__898c4a6c__,__space__:__29 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","563b73d3","1","31","2020-02-13 20:50:26","Update showsched.js","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__4352c006__,__space__:__30 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","85b7cf55","0","32","2020-02-13 21:10:05","When finding a new entry, we start by adding a blank entry that we fill out with what we parse","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__4352c006__,__space__:__30 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","eeb84b25","0","33","2020-02-13 21:10:13","Merge remote-tracking branch origin/master","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__85b7cf55__,__space__:__32 __,__time__:__0__},{__id__:__563b73d3__,__space__:__31 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","08757fb8","0","34","2020-02-13 21:24:52","Update json_export_ical.php","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__eeb84b25__,__space__:__33 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","15173d85","0","35","2020-02-13 21:38:37","Removed datadump and added showsched_demo","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__08757fb8__,__space__:__34 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","af6423ac","0","36","2020-02-13 21:39:59","duuuh","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__15173d85__,__space__:__35 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","8562f24d","1","37","2020-02-13 21:41:48","Added FAB","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__08757fb8__,__space__:__34 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","ae1db520","1","38","2020-02-13 21:41:54","Merge remote-tracking branch origin/master","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__8562f24d__,__space__:__37 __,__time__:__1__},{__id__:__af6423ac__,__space__:__36 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","b83f7e2d","1","39","2020-02-13 21:42:44","Added FAB button","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__ae1db520__,__space__:__38 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","60b06df3","1","40","2020-02-13 21:46:06","Moved FAB to demo","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__b83f7e2d__,__space__:__39 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","7a62d0e6","0","41","2020-02-13 21:56:49","initial click handling","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__af6423ac__,__space__:__36 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","a8f71c63","1","42","2020-02-13 21:59:01","Forgot to move CSS for FAB","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__60b06df3__,__space__:__40 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","bcc3805e","0","43","2020-02-13 22:01:35","Merge branch master of https://github.com/HGustavs/SchedSYS","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__7a62d0e6__,__space__:__41 __,__time__:__0__},{__id__:__60b06df3__,__space__:__40 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","92b40567","0","44","2020-02-13 22:02:07","Merge branch master of https://github.com/HGustavs/SchedSYS","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__bcc3805e__,__space__:__43 __,__time__:__0__},{__id__:__a8f71c63__,__space__:__42 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","a5f2dc1f","0","45","2020-02-13 22:10:16","fab 5","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__92b40567__,__space__:__44 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","975f29e4","0","46","2020-02-13 22:18:58","drag and drop i Y","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__a5f2dc1f__,__space__:__45 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","4170bb34","0","47","2020-02-13 22:25:37","mousemove","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__975f29e4__,__space__:__46 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","b7338679","0","48","2020-02-13 22:28:02","30 min grid Y","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__4170bb34__,__space__:__47 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","c39d1e65","0","49","2020-02-13 22:41:17","X movement also","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__b7338679__,__space__:__48 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","c1f7f6d9","0","50","2020-02-13 22:48:43","added id and immovable ical","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__c39d1e65__,__space__:__49 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","4b025b51","1","51","2020-02-13 22:50:14","Added options pane connected to the FAB","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__c1f7f6d9__,__space__:__50 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","5f42ae0d","0","52","2020-02-13 22:52:11","classing of ical element","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__c1f7f6d9__,__space__:__50 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","487ba3a9","0","53","2020-02-13 22:54:38","both","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__5f42ae0d__,__space__:__52 __,__time__:__0__},{__id__:__4b025b51__,__space__:__51 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","f1e38ee3","0","54","2020-02-13 23:16:03","Highlight when moving reservation and diff between ical and timeedit reseravations","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__487ba3a9__,__space__:__53 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","f828080f","0","55","2020-02-13 23:36:24","Hide ical now works in options dialog","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__f1e38ee3__,__space__:__54 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","b26a47e1","0","56","2020-02-14 07:54:51","Updated slide-in-pane","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__f828080f__,__space__:__55 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","781ce7d8","0","57","2020-02-16 20:47:45","Seed of showcourses with zoom","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__b26a47e1__,__space__:__56 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","e86a609f","0","58","2020-02-17 10:25:14","Data and fixes","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__781ce7d8__,__space__:__57 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","e8b50dbb","0","59","2020-02-17 10:41:50","minor change","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__e86a609f__,__space__:__58 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","3f2ca884","2","60","2020-02-18 23:30:04","Added use of config file","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__b26a47e1__,__space__:__56 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","87381586","1","61","2020-02-19 00:27:18","Added some WEBUG data and a simple console logger for the requirements","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__e8b50dbb__,__space__:__59 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","cd1c5a61","1","62","2020-02-19 10:12:58","Added highlighting for course requirements","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__87381586__,__space__:__61 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","235a2b98","1","63","2020-02-19 11:45:28","All courses for WEBUG have been added. Minor CSS changes to courses","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__cd1c5a61__,__space__:__62 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","87b3a7de","0","64","2020-02-19 22:20:12","Canvas seed","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__e8b50dbb__,__space__:__59 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","f6fd0a96","0","65","2020-02-19 22:22:40","Merge branch master of https://github.com/HGustavs/SchedSYS","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__87b3a7de__,__space__:__64 __,__time__:__0__},{__id__:__235a2b98__,__space__:__63 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","119e33b0","0","66","2020-02-19 23:04:17","Seed of recursive progression","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__f6fd0a96__,__space__:__65 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","f6672198","0","67","2020-02-20 08:50:20","added requirements log","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__119e33b0__,__space__:__66 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","226f1f5c","0","68","2020-02-20 09:11:40","recursive highlighting","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__f6672198__,__space__:__67 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","f64468c9","0","69","2020-02-20 09:27:35","modified highlight","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__226f1f5c__,__space__:__68 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","42018758","1","70","2020-02-20 09:35:23","Fix data error","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__f64468c9__,__space__:__69 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","da9c20ef","0","71","2020-02-20 10:04:16","drawing arrows","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__f64468c9__,__space__:__69 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","77bff0cf","0","72","2020-02-20 10:04:19","Merge branch master of https://github.com/HGustavs/SchedSYS","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__da9c20ef__,__space__:__71 __,__time__:__0__},{__id__:__42018758__,__space__:__70 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","2400af20","0","73","2020-02-21 10:10:04","optimized recursion","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__77bff0cf__,__space__:__72 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","f1dfbd8d","0","74","2020-02-21 10:11:37","split data to separate file","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__2400af20__,__space__:__73 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","875ead0a","0","75","2020-02-21 10:17:48","moved data to separate file for simpler reading of code","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__f1dfbd8d__,__space__:__74 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","2904732a","0","76","2020-02-21 10:18:36","embetterified zooming","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__875ead0a__,__space__:__75 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","a119875f","0","77","2020-02-21 10:20:36","spring cleaning","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__2904732a__,__space__:__76 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","555525aa","0","78","2020-02-21 21:22:18","clarification","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__a119875f__,__space__:__77 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","bfc3872a","0","79","2020-02-21 21:45:00","clear drawing buckets","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__555525aa__,__space__:__78 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","310a99e9","0","80","2020-02-21 23:43:00","adding minor","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__bfc3872a__,__space__:__79 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","4941fe4a","0","81","2020-02-22 13:57:01","vertical and horizontal arrows (unsorted)","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__310a99e9__,__space__:__80 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","0be2b59b","0","82","2020-02-22 22:05:32","Side assignment for arrows","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__4941fe4a__,__space__:__81 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","fb0e0e8b","0","83","2020-02-22 22:11:55","removed console logs","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__0be2b59b__,__space__:__82 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","5360db9e","0","84","2020-02-22 22:26:58","fixed recursion crash","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__fb0e0e8b__,__space__:__83 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","b60a457c","0","85","2020-02-22 23:17:31","Connector sorting for top only","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__5360db9e__,__space__:__84 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","f6d40f10","0","86","2020-02-22 23:42:32","Fixed sorting criteria for endpoints","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__b60a457c__,__space__:__85 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","11ec6da3","0","87","2020-02-23 00:20:27","fixed sort and removed cruft","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__f6d40f10__,__space__:__86 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","62228f3a","0","88","2020-02-23 22:59:14","Better arrow sorting","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__11ec6da3__,__space__:__87 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","c296f108","0","89","2020-02-24 01:48:27","block duplicate arrows and simpler sorting","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__62228f3a__,__space__:__88 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","50cd33b0","1","90","2020-02-24 08:58:49","Clear selected/highlighted courses when clicking a new course","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__c296f108__,__space__:__89 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","a2bf1983","0","91","2020-02-24 09:51:21","minor cleanup","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__c296f108__,__space__:__89 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","19c84434","0","92","2020-02-24 09:56:52","Added scrolling for arrows","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__a2bf1983__,__space__:__91 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","3a33c99d","0","93","2020-02-24 10:03:34","Merged course clearing","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__19c84434__,__space__:__92 __,__time__:__0__},{__id__:__50cd33b0__,__space__:__90 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","a445a6f0","0","94","2020-02-24 10:04:37","Minor highlighting fix","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__3a33c99d__,__space__:__93 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","5d73c15e","0","95","2020-02-24 13:54:58","Added link to ical/xml converter.","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__a445a6f0__,__space__:__94 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","5fbf965f","1","96","2020-02-24 14:20:43","Opt for showing full req recursion or not","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__a445a6f0__,__space__:__94 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","086b85ff","1","97","2020-02-24 14:22:55","minor usability fix","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__5fbf965f__,__space__:__96 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","cbd3eec7","0","98","2020-02-24 21:48:01","seed of config service","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__5d73c15e__,__space__:__95 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","cd80b610","0","99","2020-02-24 22:55:29","read data for schedule config","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__cbd3eec7__,__space__:__98 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","5671c257","0","100","2020-02-24 22:55:37","Merge branch master of https://github.com/HGustavs/SchedSYS","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__cd80b610__,__space__:__99 __,__time__:__0__},{__id__:__086b85ff__,__space__:__97 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","77f02730","0","101","2020-02-24 23:17:53","Pane hiding icon","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__5671c257__,__space__:__100 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","72f00bfc","0","102","2020-02-24 23:25:45","Styling fix","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__77f02730__,__space__:__101 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","3c698ef4","0","103","2020-02-25 11:49:38","Schedule conf seed","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__72f00bfc__,__space__:__102 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","6c6f313c","0","104","2020-02-25 13:05:48","Conf synch seed","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__3c698ef4__,__space__:__103 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","d1427c3c","0","105","2020-02-25 21:26:33","Seed of config","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__6c6f313c__,__space__:__104 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","226d3154","0","106","2020-02-25 22:03:50","Service call","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__d1427c3c__,__space__:__105 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","47441696","1","107","2020-02-26 13:10:04","mofo","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__226d3154__,__space__:__106 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","dabbd770","0","108","2020-02-26 13:13:18","hulk","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__226d3154__,__space__:__106 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","bdee0329","0","109","2020-02-26 14:24:00","Merge branch master of https://github.com/HGustavs/SchedSYS","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__dabbd770__,__space__:__108 __,__time__:__0__},{__id__:__47441696__,__space__:__107 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","57f7c7e0","0","110","2020-02-26 14:24:13","Table design for config","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__bdee0329__,__space__:__109 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","c709cdf1","0","111","2020-02-26 14:42:01","Service architecture for config","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__57f7c7e0__,__space__:__110 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","d0fb9081","0","112","2020-02-26 16:58:06","Update services added","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__c709cdf1__,__space__:__111 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","264939ec","0","113","2020-02-27 13:24:25","Synchronization of calendars and schedules","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__d0fb9081__,__space__:__112 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","2b1a66f2","0","114","2020-02-27 15:29:01","Login fix","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__264939ec__,__space__:__113 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","c21f7799","0","115","2020-02-27 15:33:09","minor fix","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__2b1a66f2__,__space__:__114 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","946d7e56","0","116","2020-02-27 15:34:18","Update adminlogin.php","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__c21f7799__,__space__:__115 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","ce73f2b0","0","117","2020-02-28 12:44:22","Booking functionality seed","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__946d7e56__,__space__:__116 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","3f57844d","0","118","2020-02-28 12:49:11","Click event seed for booking","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__ce73f2b0__,__space__:__117 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","04c45de5","0","119","2020-02-28 13:14:55","Booking interface","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__3f57844d__,__space__:__118 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","27dcd610","0","120","2020-02-28 14:45:07","Booking interface and service","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__04c45de5__,__space__:__119 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","799a24e8","0","121","2020-02-28 14:59:31","Fix of service","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__27dcd610__,__space__:__120 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","24d8599c","0","122","2020-03-02 17:46:00","A crude fix to avoid overwriting if comment changed by SchedSYS ... we should aim higher","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__799a24e8__,__space__:__121 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","305ac6aa","0","123","2020-03-02 22:41:11","Revert A crude fix to avoid overwriting if comment changed by SchedSYS ... we should aim higher","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__24d8599c__,__space__:__122 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","62ef5932","0","124","2020-03-02 22:46:21","Booking support through comment changing","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__305ac6aa__,__space__:__123 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","9351d4f3","0","125","2020-03-04 15:37:49","Styling fix for Exjobbshandledning","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__62ef5932__,__space__:__124 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","2eae0e67","0","126","2020-03-05 12:34:20","Added a name to sign service","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__9351d4f3__,__space__:__125 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","28036efa","0","127","2020-03-05 12:36:56","Minor bugfix","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__2eae0e67__,__space__:__126 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","9c2c603c","0","128","2020-03-05 14:49:02","Names or signatures debacle","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__28036efa__,__space__:__127 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","4aa1d537","0","129","2020-03-05 17:05:05","Timeedit bug fix","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__9c2c603c__,__space__:__128 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","55bfab02","0","130","2020-03-05 17:29:12","embettering data contents","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__4aa1d537__,__space__:__129 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","356e6fdd","0","131","2020-03-09 09:05:45","Making it work ... when not admin","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__55bfab02__,__space__:__130 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","7c40dc0e","0","132","2020-03-09 13:10:34","A draft for controlling how to update a booking ... admin can override user can cancel meeting from same device as booking was made","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__356e6fdd__,__space__:__131 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","953c08d4","0","133","2020-03-09 16:29:19","Added booking label to show which time slot is being booked","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__7c40dc0e__,__space__:__132 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","a640ab03","0","134","2020-03-17 15:50:41","Fix for signatures","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__953c08d4__,__space__:__133 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","75002a90","0","135","2020-03-19 12:47:48","Smarter sync and new styling","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__a640ab03__,__space__:__134 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","fc38e151","0","136","2020-03-20 09:12:11","Removed signature bug in history data","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__75002a90__,__space__:__135 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","010c366e","0","137","2020-03-25 17:17:07","Now supports deleted future events","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__fc38e151__,__space__:__136 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","4dee5e88","0","138","2020-03-25 17:27:05","Forgot to remove debug...","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__010c366e__,__space__:__137 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SchedSYS","c257b2f2","0","139","2020-03-25 17:37:57","Supports activity Distans and adds space between items in Kommentar","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__4dee5e88__,__space__:__138 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("shaker.js","da63c144","0","0","2015-04-27 11:09:02","Initial commit","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("shaker.js","e94ee00a","0","1","2015-04-27 11:09:16","Create README.md","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__da63c144__,__space__:__0 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("shaker.js","40f8698c","0","2","2015-04-27 11:09:46","Create shaker.js","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__e94ee00a__,__space__:__1 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("shaker.js","90a07757","0","3","2015-04-27 11:10:51","Update LICENSE","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__40f8698c__,__space__:__2 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("shaker.js","72db4a67","0","4","2015-04-27 12:42:05","Updated example with tilt Events","HGustavs","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__90a07757__,__space__:__3 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("shaker.js","53253c82","0","5","2015-04-27 20:45:05","Orientation events update. Car Example added.","HGustavs","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__72db4a67__,__space__:__4 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("shaker.js","7f975ed9","0","6","2015-04-27 20:51:07","Mini-fix.","HGustavs","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__53253c82__,__space__:__5 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("shaker.js","eb1225f5","0","7","2015-04-27 21:40:57","shaker fix and ball example.","HGustavs","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__7f975ed9__,__space__:__6 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("shaker.js","8640dc51","0","8","2015-04-27 22:48:07","Removed cruft from examples","HGustavs","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__eb1225f5__,__space__:__7 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("shaker.js","e7c504b6","0","9","2015-04-27 22:48:48","Further cruft removal.","HGustavs","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__8640dc51__,__space__:__8 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("shaker.js","5af7cc6d","0","10","2015-04-27 23:04:37","Orientation and example bug fixes.","HGustavs","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__e7c504b6__,__space__:__9 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("shaker.js","a866a606","0","11","2015-04-28 11:59:36","Text printing example and shaker fix.","HGustavs","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__5af7cc6d__,__space__:__10 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("shaker.js","1188d735","0","12","2015-04-28 13:09:25","Compass Example","HGustavs","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__a866a606__,__space__:__11 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("shaker.js","2a8362fe","0","13","2015-04-29 23:33:56","Gyro example","HGustavs","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__1188d735__,__space__:__12 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("shaker.js","93b3e26b","0","14","2015-04-29 23:49:24","Bouncy Ball with Friction","HGustavs","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__2a8362fe__,__space__:__13 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("shaker.js","38e9a53b","0","15","2015-05-02 00:07:20","Bug fixes and Orientation Event Support","HGustavs","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__93b3e26b__,__space__:__14 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("shaker.js","3d242626","0","16","2015-05-02 11:26:34","Cruft-removal and New example","HGustavs","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__38e9a53b__,__space__:__15 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("shaker.js","74dc3a11","2","17","2015-05-05 15:32:27","Moved orientation examples into a suitable folder.","a97marbr","mbrohede","https://avatars1.githubusercontent.com/u/7021013?s=64&v=4","[{__id__:__3d242626__,__space__:__16 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("shaker.js","c5d9f809","2","18","2015-05-05 15:34:28","Moved SVG-images to follow suit ...","a97marbr","mbrohede","https://avatars1.githubusercontent.com/u/7021013?s=64&v=4","[{__id__:__74dc3a11__,__space__:__17 __,__time__:__2__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("shaker.js","1682ef7c","2","19","2015-05-05 16:06:20","Reindented and added comments.","a97marbr","mbrohede","https://avatars1.githubusercontent.com/u/7021013?s=64&v=4","[{__id__:__c5d9f809__,__space__:__18 __,__time__:__2__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("shaker.js","8ac5bb7a","2","20","2015-05-05 16:15:46","Reindented and added usage information.","a97marbr","mbrohede","https://avatars1.githubusercontent.com/u/7021013?s=64&v=4","[{__id__:__1682ef7c__,__space__:__19 __,__time__:__2__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("shaker.js","5a928cf2","2","21","2015-05-05 17:07:54","Moved the various examples to the correct folders.","a97marbr","mbrohede","https://avatars1.githubusercontent.com/u/7021013?s=64&v=4","[{__id__:__8ac5bb7a__,__space__:__20 __,__time__:__2__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("shaker.js","ee25bd7c","0","22","2015-05-06 12:41:17","Merge pull request #3 from HGustavs/mb-refactor-order","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__3d242626__,__space__:__16 __,__time__:__0__},{__id__:__5a928cf2__,__space__:__21 __,__time__:__2__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("shaker.js","109f751e","1","23","2015-05-06 15:01:57","Added two examples where shake is used.","a97marbr","mbrohede","https://avatars1.githubusercontent.com/u/7021013?s=64&v=4","[{__id__:__ee25bd7c__,__space__:__22 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("shaker.js","098d18f3","0","24","2015-05-06 17:43:55","Merge pull request #4 from HGustavs/mb-add-shake-examples","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__ee25bd7c__,__space__:__22 __,__time__:__0__},{__id__:__109f751e__,__space__:__23 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("shaker.js","24dad0e5","2","25","2015-05-06 22:52:33","Changed properties to camelCase","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__098d18f3__,__space__:__24 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("shaker.js","efabbaf7","0","26","2020-02-27 15:28:40","Updated?","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__098d18f3__,__space__:__24 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("shaker.js","f9a4081a","0","27","2020-03-03 08:07:56","Shows a button that if pressed activates motion sensor and device orientation sensor on iPhone ios 13+","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__efabbaf7__,__space__:__26 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("shaker.js","32f9ee79","0","28","2020-03-03 08:09:26","Revert Shows a button that if pressed activates motion sensor and device orientation sensor on iPhone ios 13+","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__f9a4081a__,__space__:__27 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("shaker.js","9fc72018","0","29","2020-03-03 08:13:04","Shows a button that if pressed enables motion sensor and orientation sensor on IOS 13+","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__32f9ee79__,__space__:__28 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("shaker.js","12bdcde6","0","30","2020-03-03 16:02:42","Bug fix and a more obtrusive turn on sensors button","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__9fc72018__,__space__:__29 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","009f16bc","0","0","2019-02-19 18:30:17","Initial commit","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","e09d81f2","0","1","2019-02-19 18:55:38","Seed","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__009f16bc__,__space__:__0 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","d56b7e83","0","2","2019-02-19 19:16:12","Basic survey creation","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__e09d81f2__,__space__:__1 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","7fa99949","0","3","2019-02-19 19:39:34","Initial forms","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__d56b7e83__,__space__:__2 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","b113ba01","0","4","2019-02-19 19:42:14","Create .gitignore","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__7fa99949__,__space__:__3 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","115cb599","1","5","2019-02-19 19:44:12","Delete surveydata.db","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__b113ba01__,__space__:__4 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","fd02dbdf","1","6","2019-02-19 19:44:25","Delete scheduledata.db","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__115cb599__,__space__:__5 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","adb7a647","0","7","2019-02-19 19:48:49","Survey admin new survey","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__b113ba01__,__space__:__4 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","e7ab4676","0","8","2019-02-19 19:49:53","Merge branch master of https://github.com/HGustavs/SurveySYS","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__adb7a647__,__space__:__7 __,__time__:__0__},{__id__:__fd02dbdf__,__space__:__6 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","87a146d5","0","9","2019-02-19 19:52:46","New survey start","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__e7ab4676__,__space__:__8 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","d7540739","0","10","2019-02-19 20:32:08","Basic survey creation code","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__87a146d5__,__space__:__9 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","8e787ece","0","11","2019-02-19 22:34:51","Editsurvey session seed","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__d7540739__,__space__:__10 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","5715a134","0","12","2019-02-19 22:37:41","Edit survey moved to separate file","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__8e787ece__,__space__:__11 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","8d312d87","0","13","2019-02-19 23:46:46","Edit survey login code","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__5715a134__,__space__:__12 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","062d601a","0","14","2019-02-20 11:11:15","Login and Survey table definintions","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__8d312d87__,__space__:__13 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","d5e7cfc6","0","15","2019-02-20 18:53:18","Forms for working with items incl item creation interface","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__062d601a__,__space__:__14 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","3195bc36","0","16","2019-02-20 19:32:28","Creation of new survey items","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__d5e7cfc6__,__space__:__15 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","fac6696a","0","17","2019-02-20 20:14:47","Type editing","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__3195bc36__,__space__:__16 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","0f37bc3f","0","18","2019-02-20 22:44:21","More editing and styling fix","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__fac6696a__,__space__:__17 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","b942741b","0","19","2019-02-20 23:57:33","Prepared editing and added survey preview","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__0f37bc3f__,__space__:__18 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","7933949a","0","20","2019-02-21 22:22:40","doSurvey and saveSurvey seed","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__b942741b__,__space__:__19 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","9f847dff","0","21","2019-02-22 22:46:41","ID exploding and saving of surveys","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__7933949a__,__space__:__20 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","30568509","0","22","2019-02-23 13:23:52","Basic swapping of survey items","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__9f847dff__,__space__:__21 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","307e9296","0","23","2019-02-24 21:59:28","Swapping and deleting implementation","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__30568509__,__space__:__22 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","d2d495c4","0","24","2019-02-25 09:38:27","Update editSurvey.php","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__307e9296__,__space__:__23 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","3430b4c6","1","25","2019-02-25 10:34:08","Edit survey fields","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__d2d495c4__,__space__:__24 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","c53c20c5","1","26","2019-02-25 10:38:13","Better error message","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__3430b4c6__,__space__:__25 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","dbf57028","1","27","2019-02-25 11:34:16","Changed save survey tbl","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__c53c20c5__,__space__:__26 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","557b4d03","0","28","2019-02-25 12:16:54","Random user hash for detecting multiple posts","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__d2d495c4__,__space__:__24 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","d7e8c4ac","0","29","2019-02-25 12:16:57","Merge branch master of https://github.com/HGustavs/SurveySYS","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__557b4d03__,__space__:__28 __,__time__:__0__},{__id__:__dbf57028__,__space__:__27 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","54f2a4b0","0","30","2019-02-25 13:35:12","minor ui fixes","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__d7e8c4ac__,__space__:__29 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","9ff8ce34","0","31","2019-02-25 15:41:32","csv export is too legit to quit","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__54f2a4b0__,__space__:__30 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","d54aa216","1","32","2019-02-25 15:42:11","Survey styling","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__54f2a4b0__,__space__:__30 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","f8089291","1","33","2019-02-25 15:42:22","Merge remote-tracking branch origin/master","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__d54aa216__,__space__:__32 __,__time__:__1__},{__id__:__9ff8ce34__,__space__:__31 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","2a54dd99","0","34","2019-02-25 15:56:38","csv headings fix","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__9ff8ce34__,__space__:__31 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","b695d166","0","35","2019-02-25 15:57:30","Merge branch master of https://github.com/HGustavs/SurveySYS","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__2a54dd99__,__space__:__34 __,__time__:__0__},{__id__:__f8089291__,__space__:__33 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","c27e6766","2","36","2019-02-26 10:54:04","Correct # labels depending on item type","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__b695d166__,__space__:__35 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","3f8bcd1b","0","37","2019-02-26 12:51:51","svg chart export initial functionality","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__b695d166__,__space__:__35 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","7a553fbd","0","38","2019-02-26 12:51:54","Merge branch master of https://github.com/HGustavs/SurveySYS","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__3f8bcd1b__,__space__:__37 __,__time__:__0__},{__id__:__c27e6766__,__space__:__36 __,__time__:__2__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","7b04c83c","0","39","2019-02-28 11:05:26","Untested standard deviation code...","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__7a553fbd__,__space__:__38 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","b7f2ace5","1","40","2019-03-01 13:03:52","Code for updating survey description + bugfix","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__7a553fbd__,__space__:__38 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","a801c7d1","1","41","2019-03-01 14:45:54","Bugfixar","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__b7f2ace5__,__space__:__40 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","20cdda41","0","42","2019-03-01 14:58:09","Merge branch Update-survey-description","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__7b04c83c__,__space__:__39 __,__time__:__0__},{__id__:__a801c7d1__,__space__:__41 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","d3662278","0","43","2019-03-02 02:08:49","Fixxes for svf export","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__20cdda41__,__space__:__42 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","adbee6a2","0","44","2019-03-02 20:11:11","Added logoff button","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__d3662278__,__space__:__43 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","8fc3eeea","0","45","2019-03-04 15:04:11","Changed coloring and bugfixed qoutes in questions","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__adbee6a2__,__space__:__44 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","af0a694b","0","46","2019-03-07 20:30:38","Better response joining through use of item identifiers","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__8fc3eeea__,__space__:__45 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","c3870318","0","47","2019-03-07 21:23:13","Per device csv","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__af0a694b__,__space__:__46 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","34e3a862","0","48","2019-03-07 21:54:20","Scatter plot option","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__c3870318__,__space__:__47 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","58ffbff4","0","49","2019-03-07 23:05:59","Resphash for response tracking added","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__34e3a862__,__space__:__48 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","38096db5","1","50","2019-03-08 12:31:45","Added seamless adding of response hash + bugfix for csv values","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__58ffbff4__,__space__:__49 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","d2d71b7e","1","51","2019-03-08 12:44:34","fixed scatter column one column off bugg","Marcus Brohede","a97marbr","https://avatars0.githubusercontent.com/u/4948661?s=64&v=4","[{__id__:__38096db5__,__space__:__50 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","f6d77c48","0","52","2019-03-08 12:51:18","Fix for login problems if database is deleted","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__58ffbff4__,__space__:__49 __,__time__:__0__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","ddc0f684","0","53","2019-03-08 12:52:38","Merge branch master of https://github.com/HGustavs/SurveySYS","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__f6d77c48__,__space__:__52 __,__time__:__0__},{__id__:__d2d71b7e__,__space__:__51 __,__time__:__1__}]");
INSERT INTO COMMITS(repo,id,space,time,timestamp,message,author,login,avatar,parents) VALUES("SurveySYS","905bd2fb","0","54","2019-03-08 13:10:53","Removed alter table code to fixdb","Henrik Gustavsson","HGustavs","https://avatars1.githubusercontent.com/u/6978801?s=64&v=4","[{__id__:__ddc0f684__,__space__:__53 __,__time__:__0__}]");



INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","168d999f","Starting magic headings","2017-12-07T12:17:27Z","sortableTable.js","SortableTableLibrary","[{__row__:__1__,__code__:__\/\/ Keep track of Currently active Table and all sortable tables__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","30378491","Merging students code","2018-05-29T09:19:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__2__,__code__:__var sortableTable = {__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","3a96b66b","Added an AJAX example and an initial update cell version using the ne","2018-02-09T00:07:10Z","sortableTable.js","SortableTableLibrary","[{__row__:__3__,__code__:__    currentTable:null,    __},{__row__:__4__,__code__:__    sortableTables:[],    __},{__row__:__5__,__code__:__    edit_rowno:-1,__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","00751f27","partly working db store","2018-06-01T08:07:44Z","sortableTable.js","SortableTableLibrary","[{__row__:__6__,__code__:__    edit_rowid:null,    __},{__row__:__7__,__code__:__    edit_row:null,__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","3a96b66b","Added an AJAX example and an initial update cell version using the ne","2018-02-09T00:07:10Z","sortableTable.js","SortableTableLibrary","[{__row__:__8__,__code__:__    edit_columnno:-1,    __},{__row__:__9__,__code__:__    edit_columnname:null,__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","832e1351","Minimal example and checks for null callbacks","2018-04-04T14:42:18Z","sortableTable.js","SortableTableLibrary","[{__row__:__10__,__code__:__    edit_tableid:null,__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","21033931","Changing internal structure of API","2018-02-08T19:22:13Z","sortableTable.js","SortableTableLibrary","[{__row__:__11__,__code__:__}__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","168d999f","Starting magic headings","2017-12-07T12:17:27Z","sortableTable.js","SortableTableLibrary","[{__row__:__12__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","a33b5073","Added a delimiter","2018-07-05T09:59:46Z","sortableTable.js","SortableTableLibrary","[{__row__:__13__,__code__:__varDELIMITER=_;    __},{__row__:__14__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","6fb160f0","Cleaner byString implementation","2018-07-19T13:21:19Z","sortableTable.js","SortableTableLibrary","[{__row__:__15__,__code__:__functionbyString(inpobj,paramstr){__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","4e3c5111","Cleanup of byString","2018-07-21T17:58:53Z","sortableTable.js","SortableTableLibrary","[{__row__:__16__,__code__:__\t\tparams=paramstr.split(.);    __},{__row__:__17__,__code__:__return inpobj[params[1]];__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","6fb160f0","Cleaner byString implementation","2018-07-19T13:21:19Z","sortableTable.js","SortableTableLibrary","[{__row__:__18__,__code__:__}    __},{__row__:__19__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","4ed91629","Simplified and made defaults code more readable","2018-07-19T09:16:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__20__,__code__:__functionsearchKeyUp(e)    __},{__row__:__21__,__code__:__{__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","30378491","Merging students code","2018-05-29T09:19:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__22__,__code__:__\/\/ look for window.event in case event isn't passed in    __},{__row__:__23__,__code__:__    e = e ||window.event;    __},{__row__:__24__,__code__:__if (e.keyCode==13) {    __},{__row__:__25__,__code__:__document.getElementById('searchbutton').click();    __},{__row__:__26__,__code__:__returnfalse;    __},{__row__:__27__,__code__:__    }    __},{__row__:__28__,__code__:__returntrue;    __},{__row__:__29__,__code__:__}    __},{__row__:__30__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","4ed91629","Simplified and made defaults code more readable","2018-07-19T09:16:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__31__,__code__:__functionkeypressHandler(event)    __},{__row__:__32__,__code__:__{__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","a14daa50","LeFunc","2018-10-23T22:11:03Z","sortableTable.js","SortableTableLibrary","[{__row__:__33__,__code__:__if (event.keyCode==13) updateCellInternal();    __},{__row__:__34__,__code__:__if (event.keyCode==27) clearUpdateCellInternal();__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","e5858fbc","Added simple update of celldata","2018-02-07T19:46:41Z","sortableTable.js","SortableTableLibrary","[{__row__:__35__,__code__:__}    __},{__row__:__36__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","4ed91629","Simplified and made defaults code more readable","2018-07-19T09:16:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__37__,__code__:__functiondefaultRowFilter()    __},{__row__:__38__,__code__:__{__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","30378491","Merging students code","2018-05-29T09:19:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__39__,__code__:__returntrue;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","832e1351","Minimal example and checks for null callbacks","2018-04-04T14:42:18Z","sortableTable.js","SortableTableLibrary","[{__row__:__40__,__code__:__}    __},{__row__:__41__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","1bbc48bb","Introducing global comparing function","2017-11-26T19:07:20Z","sortableTable.js","SortableTableLibrary","[{__row__:__42__,__code__:__\/\/ Global sorting function global__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","4ed91629","Simplified and made defaults code more readable","2018-07-19T09:16:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__43__,__code__:__functionsortableInternalSort(a,b)    __},{__row__:__44__,__code__:__{__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","30378491","Merging students code","2018-05-29T09:19:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__45__,__code__:__var ret =0;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","5d053c52","row filter in large example","2018-06-19T09:36:43Z","sortableTable.js","SortableTableLibrary","[{__row__:__46__,__code__:__\/\/var colname = sortableTable.currentTable.getKeyByValue();    __},{__row__:__47__,__code__:__var colname =sortableTable.currentTable.getSortcolumn();    __},{__row__:__48__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","ff162add","Sorting fix","2018-10-16T11:04:32Z","sortableTable.js","SortableTableLibrary","[{__row__:__49__,__code__:__if ((sortableTable.currentTable.sortkind%2)==0) {__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","30378491","Merging students code","2018-05-29T09:19:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__50__,__code__:__\t\tret =compare(a[colname],b[colname]);    __},{__row__:__51__,__code__:__\t} else {    __},{__row__:__52__,__code__:__\t\tret =compare(b[colname],a[colname]);    __},{__row__:__53__,__code__:__\t}    __},{__row__:__54__,__code__:__return ret;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","1bbc48bb","Introducing global comparing function","2017-11-26T19:07:20Z","sortableTable.js","SortableTableLibrary","[{__row__:__55__,__code__:__}__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","1b17f724","Seed","2017-11-23T12:12:16Z","sortableTable.js","SortableTableLibrary","[{__row__:__56__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","7c844f5f","Added simple pagination and pre/post render callbacks","2019-08-21T08:13:02Z","sortableTable.js","SortableTableLibrary","[{__row__:__57__,__code__:__changePage=function(tblid,p)    __},{__row__:__58__,__code__:__{    __},{__row__:__59__,__code__:__amp;lt;sortableTable.sortableTables.length; i++) {    __},{__row__:__60__,__code__:__let t=sortableTable.sortableTables[i];    __},{__row__:__61__,__code__:__if (t.tableid== tblid) {    __},{__row__:__62__,__code__:__if(typeof(p)===undefined)p=1;    __},{__row__:__63__,__code__:__t.selectedPage=p;    __},{__row__:__64__,__code__:__t.renderTable();    __},{__row__:__65__,__code__:__        }    __},{__row__:__66__,__code__:__    }    __},{__row__:__67__,__code__:__}    __},{__row__:__68__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","4ed91629","Simplified and made defaults code more readable","2018-07-19T09:16:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__69__,__code__:__functionclearUpdateCellInternal()    __},{__row__:__70__,__code__:__{__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","30378491","Merging students code","2018-05-29T09:19:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__71__,__code__:__sortableTable.edit_rowno=-1;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","77aeac5c","Now we handle column names with and we put the cell value in the ","2018-06-14T12:19:25Z","sortableTable.js","SortableTableLibrary","[{__row__:__72__,__code__:__sortableTable.edit_rowid=null;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","30378491","Merging students code","2018-05-29T09:19:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__73__,__code__:__sortableTable.edit_columnno=-1;    __},{__row__:__74__,__code__:__sortableTable.edit_columnname=null;    __},{__row__:__75__,__code__:__sortableTable.edit_tableid=null;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","77aeac5c","Now we handle column names with and we put the cell value in the ","2018-06-14T12:19:25Z","sortableTable.js","SortableTableLibrary","[{__row__:__76__,__code__:__sortableTable.edit_celldata=null;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","30378491","Merging students code","2018-05-29T09:19:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__77__,__code__:__document.getElementById('editpopover').style.display=none;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","21033931","Changing internal structure of API","2018-02-08T19:22:13Z","sortableTable.js","SortableTableLibrary","[{__row__:__78__,__code__:__}__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","30378491","Merging students code","2018-05-29T09:19:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__79__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","4ed91629","Simplified and made defaults code more readable","2018-07-19T09:16:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__80__,__code__:__functionupdateCellInternal()    __},{__row__:__81__,__code__:__{__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","30378491","Merging students code","2018-05-29T09:19:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__82__,__code__:__amp;lt;sortableTable.sortableTables.length; i++) {    __},{__row__:__83__,__code__:__if (sortableTable.sortableTables[i].tableid==sortableTable.edit_tableid) {__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","3a96b66b","Added an AJAX example and an initial update cell version using the ne","2018-02-09T00:07:10Z","sortableTable.js","SortableTableLibrary","[{__row__:__84__,__code__:__sortableTable.sortableTables[i].updateCell();__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","21033931","Changing internal structure of API","2018-02-08T19:22:13Z","sortableTable.js","SortableTableLibrary","[{__row__:__85__,__code__:__        }    __},{__row__:__86__,__code__:__    }__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","3a96b66b","Added an AJAX example and an initial update cell version using the ne","2018-02-09T00:07:10Z","sortableTable.js","SortableTableLibrary","[{__row__:__87__,__code__:__clearUpdateCellInternal();__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","21033931","Changing internal structure of API","2018-02-08T19:22:13Z","sortableTable.js","SortableTableLibrary","[{__row__:__88__,__code__:__}    __},{__row__:__89__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","6e1a66b0","Callback functionality improved.","2018-01-31T14:49:18Z","sortableTable.js","SortableTableLibrary","[{__row__:__90__,__code__:__\/\/ clickedInternal__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","4ed91629","Simplified and made defaults code more readable","2018-07-19T09:16:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__91__,__code__:__functionclickedInternal(event,clickdobj)    __},{__row__:__92__,__code__:__{__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","be83861b","More delimiter updates","2018-07-05T15:34:37Z","sortableTable.js","SortableTableLibrary","[{__row__:__93__,__code__:__let clickedTbl=event.target.closest(table).id.substring(0,event.target.closest(table).id.indexOf(DELIMITER+tbl));__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","93544150","Fix currentTable and backward compataible sqlite update statement","2018-06-04T08:10:20Z","sortableTable.js","SortableTableLibrary","[{__row__:__94__,__code__:__let active=null;    __},{__row__:__95__,__code__:__amp;lt;sortableTable.sortableTables.length;i++){    __},{__row__:__96__,__code__:__if(sortableTable.sortableTables[i].tableid==clickedTbl){    __},{__row__:__97__,__code__:__          active=sortableTable.sortableTables[i];    __},{__row__:__98__,__code__:__break;    __},{__row__:__99__,__code__:__      }    __},{__row__:__100__,__code__:__  }    __},{__row__:__101__,__code__:__sortableTable.currentTable=active;    __},{__row__:__102__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","30378491","Merging students code","2018-05-29T09:19:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__103__,__code__:__if (sortableTable.currentTable.showEditCell!=null) {    __},{__row__:__104__,__code__:__var cellelement =event.target.closest(td);__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","77aeac5c","Now we handle column names with and we put the cell value in the ","2018-06-14T12:19:25Z","sortableTable.js","SortableTableLibrary","[{__row__:__105__,__code__:__var rowelement =event.target.closest(tr);__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","9da2e98e","Fixed regex match bug and added in-place svg icons","2019-02-05T10:40:08Z","sortableTable.js","SortableTableLibrary","[{__row__:__106__,__code__:__var match=cellelement.id.split(DELIMITER);    __},{__row__:__107__,__code__:__var rowno = match[0].substr(1);__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","77aeac5c","Now we handle column names with  and we put the cell value in the ","2018-06-14T12:19:25Z","sortableTable.js","SortableTableLibrary","[{__row__:__108__,__code__:__var columnno =null; \/\/ Not used anymore__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","9da2e98e","Fixed regex match bug and added in-place svg icons","2019-02-05T10:40:08Z","sortableTable.js","SortableTableLibrary","[{__row__:__109__,__code__:__var tableid = match[1];    __},{__row__:__110__,__code__:__var columnname=match[2]__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","6cf2819d","Deprecated readOnlyColumns config","2018-09-04T19:00:13Z","sortableTable.js","SortableTableLibrary","[{__row__:__111__,__code__:__var str =;     __},{__row__:__112__,__code__:__var rowdata =sortableTable.currentTable.getRow(rowno);     __},{__row__:__113__,__code__:__var coldata = rowdata[columnname];     __},{__row__:__114__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","8ec3c13d","Changed how read-only cells are implemented","2018-09-04T18:11:28Z","sortableTable.js","SortableTableLibrary","[{__row__:__115__,__code__:__sortableTable.edit_rowno= rowno;    __},{__row__:__116__,__code__:__sortableTable.edit_row= rowdata;    __},{__row__:__117__,__code__:__sortableTable.edit_columnno= columnno;    __},{__row__:__118__,__code__:__sortableTable.edit_columnname= columnname;    __},{__row__:__119__,__code__:__sortableTable.edit_tableid= tableid;    __},{__row__:__120__,__code__:__sortableTable.edit_celldata= coldata;    __},{__row__:__121__,__code__:__var estr=sortableTable.currentTable.showEditCell(coldata,rowno,rowelement,cellelement,columnname,columnno,rowdata,coldata,tableid);    __},{__row__:__122__,__code__:__if(estr!==false){__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","e8624cd2","Fix of demo and remaining icons","2019-02-05T10:59:05Z","sortableTable.js","SortableTableLibrary","[{__row__:__123__,__code__:__amp;gt;;    __},{__row__:__124__,__code__:__      str+= estr;    __},{__row__:__125__,__code__:__amp;gt;;    __},{__row__:__126__,__code__:__amp;gt;;    __},{__row__:__127__,__code__:__amp;gt;;    __},{__row__:__128__,__code__:__amp;gt;;    __},{__row__:__129__,__code__:__amp;gt;;    __},{__row__:__130__,__code__:__amp;gt;;    __},{__row__:__131__,__code__:__amp;gt;;    __},{__row__:__132__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","c7c1f0cd","Added support for readOnlyColumns","2018-08-15T13:30:37Z","sortableTable.js","SortableTableLibrary","[{__row__:__133__,__code__:__var lmnt =cellelement.getBoundingClientRect();    __},{__row__:__134__,__code__:__var popoverelement =document.getElementById(editpopover);    __},{__row__:__135__,__code__:__    __},{__row__:__136__,__code__:__popoverelement.innerHTML= str;    __},{__row__:__137__,__code__:__var popoveredit =document.getElementById(popoveredit);    __},{__row__:__138__,__code__:__var xscroll =window.pageXOffset;    __},{__row__:__139__,__code__:__var yscroll =window.pageYOffset;    __},{__row__:__140__,__code__:__    __},{__row__:__141__,__code__:__popoverelement.style.left=Math.round(lmnt.left+xscroll)+px;    __},{__row__:__142__,__code__:__popoverelement.style.top=Math.round(lmnt.top+yscroll)+px;    __},{__row__:__143__,__code__:__popoverelement.style.minHeight= (Math.round(lmnt.height)-5)+px;    __},{__row__:__144__,__code__:__popoverelement.style.maxWidth=fit-content;    __},{__row__:__145__,__code__:__popoverelement.style.display=flex;      __},{__row__:__146__,__code__:__    }__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","30378491","Merging students code","2018-05-29T09:19:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__147__,__code__:__\t}__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","6e1a66b0","Callback functionality improved.","2018-01-31T14:49:18Z","sortableTable.js","SortableTableLibrary","[{__row__:__148__,__code__:__}    __},{__row__:__149__,__code__:__    __},{__row__:__150__,__code__:__\/\/ We call all highlights in order to allow hover of non-active tables__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","4ed91629","Simplified and made defaults code more readable","2018-07-19T09:16:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__151__,__code__:__functionrowHighlightInternal(event,row)    __},{__row__:__152__,__code__:__{__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","a33b5073","Added a delimiter","2018-07-05T09:59:46Z","sortableTable.js","SortableTableLibrary","[{__row__:__153__,__code__:__var arr =row.id.split(DELIMITER);__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","30378491","Merging students code","2018-05-29T09:19:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__154__,__code__:__var rowno =parseInt(arr[1]);__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","a33b5073","Added a delimiter","2018-07-05T09:59:46Z","sortableTable.js","SortableTableLibrary","[{__row__:__155__,__code__:__var centerel =event.target.closest(td);    __},{__row__:__156__,__code__:__amp;lt;sortableTable.sortableTables.length; i++) {    __},{__row__:__157__,__code__:__if (sortableTable.sortableTables[i].highlightRow!=null) {    __},{__row__:__158__,__code__:__sortableTable.sortableTables[i].highlightRow(row.id,rowno,centerel.className,centerel);    __},{__row__:__159__,__code__:__        }__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","30378491","Merging students code","2018-05-29T09:19:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__160__,__code__:__    }__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","6346f4ca","First release with row highlight. Does not align rows if scrolled to ","2017-12-25T20:56:12Z","sortableTable.js","SortableTableLibrary","[{__row__:__161__,__code__:__}    __},{__row__:__162__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","6e1a66b0","Callback functionality improved.","2018-01-31T14:49:18Z","sortableTable.js","SortableTableLibrary","[{__row__:__163__,__code__:__\/\/ We call all deHighlights in order to allow hover of non-active tables__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","4ed91629","Simplified and made defaults code more readable","2018-07-19T09:16:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__164__,__code__:__functionrowDeHighlightInternal(event,row)    __},{__row__:__165__,__code__:__{__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","a33b5073","Added a delimiter","2018-07-05T09:59:46Z","sortableTable.js","SortableTableLibrary","[{__row__:__166__,__code__:__var arr =row.id.split(DELIMITER);    __},{__row__:__167__,__code__:__var rowno =parseInt(arr[1]);    __},{__row__:__168__,__code__:__var centerel =event.target.closest(td);    __},{__row__:__169__,__code__:__amp;lt;sortableTable.sortableTables.length; i++) {    __},{__row__:__170__,__code__:__if (sortableTable.sortableTables[i].deHighlightRow!=null) {    __},{__row__:__171__,__code__:__sortableTable.sortableTables[i].deHighlightRow(row.id,rowno,centerel.className,centerel);    __},{__row__:__172__,__code__:__    \t\t}__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","30378491","Merging students code","2018-05-29T09:19:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__173__,__code__:__    }__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","6346f4ca","First release with row highlight. Does not align rows if scrolled to ","2017-12-25T20:56:12Z","sortableTable.js","SortableTableLibrary","[{__row__:__174__,__code__:__}__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","33ddc8fb","added working row filter example","2018-06-12T22:02:57Z","sortableTable.js","SortableTableLibrary","[{__row__:__175__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","c593e014","CSS background based highlighting for default row and column highlight","2018-07-23T08:33:27Z","sortableTable.js","SortableTableLibrary","[{__row__:__176__,__code__:__\/\/ https:\/\/stackoverflow.com\/questions\/13708590\/css-gradient-colour-stops-from-end-in-pixels    __},{__row__:__177__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","4ed91629","Simplified and made defaults code more readable","2018-07-19T09:16:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__178__,__code__:__functiondefaultRowHighlightOn(rowid,rowno,colclass,centerel)__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","fc4fd2db","Bugfix, now highlight works regardless of if we have magic headings o","2018-08-07T11:52:11Z","sortableTable.js","SortableTableLibrary","[{__row__:__179__,__code__:__{    __}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","4d594058","Fixed highlighting when magic heading is in play","2018-08-07T07:57:26Z","sortableTable.js","SortableTableLibrary","[{__row__:__180__,__code__:__    rowid=rowid.replace(DELIMITER+mhv,);__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","a16baf8d","Changed to css classes for additional speed","2018-10-23T21:10:36Z","sortableTable.js","SortableTableLibrary","[{__row__:__181__,__code__:__document.getElementById(rowid).classList.add(highrowSortable);__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","fc4fd2db","Bugfix, now highlight works regardless of if we have magic headings o","2018-08-07T11:52:11Z","sortableTable.js","SortableTableLibrary","[{__row__:__182__,__code__:__if(this.hasMagicHeadings){__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","a16baf8d","Changed to css classes for additional speed","2018-10-23T21:10:36Z","sortableTable.js","SortableTableLibrary","[{__row__:__183__,__code__:__document.getElementById(rowid+DELIMITER+mhv).classList.add(highrowSortable);__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","fc4fd2db","Bugfix, now highlight works regardless of if we have magic headings o","2018-08-07T11:52:11Z","sortableTable.js","SortableTableLibrary","[{__row__:__184__,__code__:__    }__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","c593e014","CSS background based highlighting for default row and column highlight","2018-07-23T08:33:27Z","sortableTable.js","SortableTableLibrary","[{__row__:__185__,__code__:__    __},{__row__:__186__,__code__:__\t\tcolElements=document.getElementsByClassName(colclass);    __},{__row__:__187__,__code__:__amp;lt;colElements.length; i++) {__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","a16baf8d","Changed to css classes for additional speed","2018-10-23T21:10:36Z","sortableTable.js","SortableTableLibrary","[{__row__:__188__,__code__:__    \t\tcolElements[i].classList.add(highcolSortable);__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","c593e014","CSS background based highlighting for default row and column highlight","2018-07-23T08:33:27Z","sortableTable.js","SortableTableLibrary","[{__row__:__189__,__code__:__\t\t}__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","793603b2","Updated with col highlight ...","2018-10-23T17:48:45Z","sortableTable.js","SortableTableLibrary","[{__row__:__190__,__code__:__    __},{__row__:__191__,__code__:__\t\tcolElements=document.getElementsByClassName(colclass+th);    __},{__row__:__192__,__code__:__amp;lt;colElements.length; i++) {__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","a16baf8d","Changed to css classes for additional speed","2018-10-23T21:10:36Z","sortableTable.js","SortableTableLibrary","[{__row__:__193__,__code__:__\t\t\t\tcolElements[i].classList.add(highcolSortableHead);__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","793603b2","Updated with col highlight ...","2018-10-23T17:48:45Z","sortableTable.js","SortableTableLibrary","[{__row__:__194__,__code__:__\t\t}__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","c593e014","CSS background based highlighting for default row and column highlight","2018-07-23T08:33:27Z","sortableTable.js","SortableTableLibrary","[{__row__:__195__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","a16baf8d","Changed to css classes for additional speed","2018-10-23T21:10:36Z","sortableTable.js","SortableTableLibrary","[{__row__:__196__,__code__:__centerel.classList.add(highcellSortable);__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","120241cf","Added default rowhighlight functions to sortabletable","2018-07-04T15:09:44Z","sortableTable.js","SortableTableLibrary","[{__row__:__197__,__code__:__}    __},{__row__:__198__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","4ed91629","Simplified and made defaults code more readable","2018-07-19T09:16:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__199__,__code__:__functiondefaultRowHighlightOff(rowid,rowno,colclass,centerel)    __},{__row__:__200__,__code__:__{__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","4d594058","Fixed highlighting when magic heading is in play","2018-08-07T07:57:26Z","sortableTable.js","SortableTableLibrary","[{__row__:__201__,__code__:__    rowid=rowid.replace(DELIMITER+mhv,);__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","a16baf8d","Changed to css classes for additional speed","2018-10-23T21:10:36Z","sortableTable.js","SortableTableLibrary","[{__row__:__202__,__code__:__document.getElementById(rowid).classList.remove(highrowSortable);__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","fc4fd2db","Bugfix, now highlight works regardless of if we have magic headings o","2018-08-07T11:52:11Z","sortableTable.js","SortableTableLibrary","[{__row__:__203__,__code__:__if(this.hasMagicHeadings){__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","a16baf8d","Changed to css classes for additional speed","2018-10-23T21:10:36Z","sortableTable.js","SortableTableLibrary","[{__row__:__204__,__code__:__document.getElementById(rowid+DELIMITER+mhv).classList.remove(highrowSortable);__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","fc4fd2db","Bugfix, now highlight works regardless of if we have magic headings o","2018-08-07T11:52:11Z","sortableTable.js","SortableTableLibrary","[{__row__:__205__,__code__:__    }__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","c593e014","CSS background based highlighting for default row and column highlight","2018-07-23T08:33:27Z","sortableTable.js","SortableTableLibrary","[{__row__:__206__,__code__:__    __},{__row__:__207__,__code__:__\t\tcolElements=document.getElementsByClassName(colclass);    __},{__row__:__208__,__code__:__amp;lt;colElements.length; i++) {__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","a16baf8d","Changed to css classes for additional speed","2018-10-23T21:10:36Z","sortableTable.js","SortableTableLibrary","[{__row__:__209__,__code__:__    \t\tcolElements[i].classList.remove(highcolSortable);__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","c593e014","CSS background based highlighting for default row and column highlight","2018-07-23T08:33:27Z","sortableTable.js","SortableTableLibrary","[{__row__:__210__,__code__:__\t\t} __}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","793603b2","Updated with col highlight ...","2018-10-23T17:48:45Z","sortableTable.js","SortableTableLibrary","[{__row__:__211__,__code__:__    __},{__row__:__212__,__code__:__\t\tcolElements=document.getElementsByClassName(colclass+th);    __},{__row__:__213__,__code__:__amp;lt;colElements.length; i++) {__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","a16baf8d","Changed to css classes for additional speed","2018-10-23T21:10:36Z","sortableTable.js","SortableTableLibrary","[{__row__:__214__,__code__:__\t\t\t\tcolElements[i].classList.remove(highcolSortableHead);__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","793603b2","Updated with col highlight ...","2018-10-23T17:48:45Z","sortableTable.js","SortableTableLibrary","[{__row__:__215__,__code__:__\t\t}\t__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","c593e014","CSS background based highlighting for default row and column highlight","2018-07-23T08:33:27Z","sortableTable.js","SortableTableLibrary","[{__row__:__216__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","a16baf8d","Changed to css classes for additional speed","2018-10-23T21:10:36Z","sortableTable.js","SortableTableLibrary","[{__row__:__217__,__code__:__centerel.classList.remove(highcellSortable);__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","120241cf","Added default rowhighlight functions to sortabletable","2018-07-04T15:09:44Z","sortableTable.js","SortableTableLibrary","[{__row__:__218__,__code__:__}    __},{__row__:__219__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","4ed91629","Simplified and made defaults code more readable","2018-07-19T09:16:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__220__,__code__:__\/\/ Checks if parameter has been defined and returns default if not    __},{__row__:__221__,__code__:__functiongetparam(param,def)    __},{__row__:__222__,__code__:__{    __},{__row__:__223__,__code__:__if(typeof param ===undefined){    __},{__row__:__224__,__code__:__return def;    __},{__row__:__225__,__code__:__\t\t}    __},{__row__:__226__,__code__:__return param;    __},{__row__:__227__,__code__:__}__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","120241cf","Added default rowhighlight functions to sortabletable","2018-07-04T15:09:44Z","sortableTable.js","SortableTableLibrary","[{__row__:__228__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","1b9cd209","Refactored ... the big NO NO","2018-06-11T14:18:56Z","sortableTable.js","SortableTableLibrary","[{__row__:__229__,__code__:__functionSortableTable(param)    __},{__row__:__230__,__code__:__{    __},{__row__:__231__,__code__:__\/\/------------==========########### Fenced paramters ###########==========------------    __}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","4ed91629","Simplified and made defaults code more readable","2018-07-19T09:16:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__232__,__code__:__    __},{__row__:__233__,__code__:__var tbl =getparam(param.data,{tblhead:{},tblbody:[],tblfoot:{}});    __},{__row__:__234__,__code__:__this.tableid=getparam(param.tableElementId,UNK);    __},{__row__:__235__,__code__:__var filterid =getparam(param.filterElementId,UNK);\t    __},{__row__:__236__,__code__:__var caption =getparam(param.tableCaption,UNK);    __},{__row__:__237__,__code__:__var renderCell =getparam(param.renderCellCallback,null);__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","f7d0b844","Added export feature","2018-11-09T16:59:57Z","sortableTable.js","SortableTableLibrary","[{__row__:__238__,__code__:__var exportCell =getparam(param.exportCellCallback,null);    __},{__row__:__239__,__code__:__var exportColumnHeading =getparam(param.exportColumnHeadingCallback,null);__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","4ed91629","Simplified and made defaults code more readable","2018-07-19T09:16:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__240__,__code__:__var renderSortOptions =getparam(param.renderSortOptionsCallback,null);    __},{__row__:__241__,__code__:__var renderColumnFilter =getparam(param.renderColumnFilterCallback,null);    __},{__row__:__242__,__code__:__var rowFilter =getparam(param.rowFilterCallback,defaultRowFilter);    __},{__row__:__243__,__code__:__var columnOrder =getparam(param.columnOrder,[]);    __},{__row__:__244__,__code__:__var colsumList =getparam(param.columnSum,[]);    __},{__row__:__245__,__code__:__var rowsumList =getparam(param.rowSum,[]);    __},{__row__:__246__,__code__:__var sumFunc =getparam(param.columnSumCallback,null);    __},{__row__:__247__,__code__:__var freezePaneIndex =getparam(param.freezePaneIndex,-1);__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","6e242373","Nearly finished email function","2019-08-29T09:02:46Z","sortableTable.js","SortableTableLibrary","[{__row__:__248__,__code__:__var emailColumn =getparam(param.emailColumn, null);\t    __},{__row__:__249__,__code__:__this.hasRowHighlight=getparam(param.hasRowHighlight,false);__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","4ed91629","Simplified and made defaults code more readable","2018-07-19T09:16:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__250__,__code__:__this.highlightRow=getparam(param.rowHighlightOnCallback,defaultRowHighlightOn);    __},{__row__:__251__,__code__:__this.deHighlightRow=getparam(param.rowHighlightOffCallback,defaultRowHighlightOff);    __},{__row__:__252__,__code__:__this.showEditCell=getparam(param.displayCellEditCallback,null);    __},{__row__:__253__,__code__:__this.updateCell=getparam(param.updateCellCallback,null);    __},{__row__:__254__,__code__:__this.hasMagicHeadings=getparam(param.hasMagicHeadings,false);    __},{__row__:__255__,__code__:__this.hasCounter=getparam(param.hasCounterColumn,false);__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","7c844f5f","Added simple pagination and pre/post render callbacks","2019-08-21T08:13:02Z","sortableTable.js","SortableTableLibrary","[{__row__:__256__,__code__:__this.rowsPerPage=getparam(param.rowsPerPage,0);    __},{__row__:__257__,__code__:__this.selectedPage=1;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","d39107dc","Fixing postFiltering callback","2019-08-29T10:12:04Z","sortableTable.js","SortableTableLibrary","[{__row__:__258__,__code__:__this.postFilterCallback=getparam(param.postFilterCallback,null);__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","7c844f5f","Added simple pagination and pre/post render callbacks","2019-08-21T08:13:02Z","sortableTable.js","SortableTableLibrary","[{__row__:__259__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","4ed91629","Simplified and made defaults code more readable","2018-07-19T09:16:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__260__,__code__:__\/\/ Prepare head and order with columns from rowsum list    __},{__row__:__261__,__code__:__amp;lt;rowsumList.length;i++){__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","5cd5653d","Column filter now render correct names","2018-06-19T11:41:59Z","sortableTable.js","SortableTableLibrary","[{__row__:__262__,__code__:__tbl.tblhead[rowsumList[i][0]['id']]=rowsumList[i][0]['name'];    __},{__row__:__263__,__code__:__columnOrder.push(rowsumList[i][0]['id']);    __},{__row__:__264__,__code__:__    }    __},{__row__:__265__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","1b9cd209","Refactored ... the big NO NO","2018-06-11T14:18:56Z","sortableTable.js","SortableTableLibrary","[{__row__:__266__,__code__:__\/\/------------==========########### Private member variables ###########==========------------        __}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","9bbd38bb","CRLF LF and correcting sortorder","2018-06-08T22:07:48Z","sortableTable.js","SortableTableLibrary","[{__row__:__267__,__code__:__var result =0;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","16f43722","First try : remake column filter render and a deterministic column re","2018-06-11T22:36:14Z","sortableTable.js","SortableTableLibrary","[{__row__:__268__,__code__:__var columnfilter = [];__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","9bbd38bb","CRLF-LF and correcting sortorder","2018-06-08T22:07:48Z","sortableTable.js","SortableTableLibrary","[{__row__:__269__,__code__:__var sortcolumn =UNK;    __},{__row__:__270__,__code__:__var sortkind =-1;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","e973fc30","Bugfix","2018-08-22T08:12:45Z","sortableTable.js","SortableTableLibrary","[{__row__:__271__,__code__:__var windowWidth=window.innerWidth;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","6e242373","Nearly finished email function","2019-08-29T09:02:46Z","sortableTable.js","SortableTableLibrary","[{__row__:__272__,__code__:__    __},{__row__:__273__,__code__:__\/\/all visible rows will be stored to this array    __},{__row__:__274__,__code__:__var filteredRows = []; \t__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","1b9cd209","Refactored ... the big NO NO","2018-06-11T14:18:56Z","sortableTable.js","SortableTableLibrary","[{__row__:__275__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","9bbd38bb","CRLF LF and correcting sortorder","2018-06-08T22:07:48Z","sortableTable.js","SortableTableLibrary","[{__row__:__276__,__code__:__\/\/ Keeps track of the last picked sorting order    __},{__row__:__277__,__code__:__var tableSort;    __},{__row__:__278__,__code__:__var colSort;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","5cd5653d","Column filter now render correct names","2018-06-19T11:41:59Z","sortableTable.js","SortableTableLibrary","[{__row__:__279__,__code__:__var reverseSort;    __}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","7ec088b2","gah","2018-11-07T11:16:19Z","sortableTable.js","SortableTableLibrary","[{__row__:__280__,__code__:__\/\/var freezePane = freezePane;    __},{__row__:__281__,__code__:__\/\/var freezePaneArr = [];__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","97719409","Fixed MH column width issue and showing MH from top 0px","2018-08-01T13:45:01Z","sortableTable.js","SortableTableLibrary","[{__row__:__282__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","608a094a","Removed some un-necessary code","2018-10-23T21:54:47Z","sortableTable.js","SortableTableLibrary","[{__row__:__283__,__code__:__\/\/ Local variables that contain html code for main table and local variable that contains magic headings table    __},{__row__:__284__,__code__:__var str =, mhstr =, mhvstr =,  mhfstr =;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","30378491","Merging students code","2018-05-29T09:19:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__285__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","0ccba180","Prevents adding multiple copies of the same tableid","2019-12-10T20:43:12Z","sortableTable.js","SortableTableLibrary","[{__row__:__286__,__code__:__\/\/ Check if we already have this tableid if so ... splice (replace) else push (add)    __},{__row__:__287__,__code__:__let isNewTable=true;    __},{__row__:__288__,__code__:__amp;lt;sortableTable.sortableTables.length;i++){    __},{__row__:__289__,__code__:__let tmptbl=sortableTable.sortableTables[i];    __},{__row__:__290__,__code__:__if(tmptbl.tableid===this.tableid){    __},{__row__:__291__,__code__:__            isNewTable=false;    __},{__row__:__292__,__code__:__sortableTable.sortableTables.splice(i,1,this);    __},{__row__:__293__,__code__:__break;    __},{__row__:__294__,__code__:__        }    __},{__row__:__295__,__code__:__    }    __},{__row__:__296__,__code__:__if(isNewTable){    __},{__row__:__297__,__code__:__sortableTable.sortableTables.push(this);    __},{__row__:__298__,__code__:__    }__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","30378491","Merging students code","2018-05-29T09:19:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__299__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","9bbd38bb","CRLF-LF and correcting sortorder","2018-06-08T22:07:48Z","sortableTable.js","SortableTableLibrary","[{__row__:__300__,__code__:__this.getRow=function(rowno) {    __},{__row__:__301__,__code__:__returntbl.tblbody[rowno];    __},{__row__:__302__,__code__:__    }__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","30378491","Merging students code","2018-05-29T09:19:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__303__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","ed5529f5","more readable","2019-01-11T16:04:11Z","sortableTable.js","SortableTableLibrary","[{__row__:__304__,__code__:__this.renderTable=function() {__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","ff162add","Sorting fix","2018-10-16T11:04:32Z","sortableTable.js","SortableTableLibrary","[{__row__:__305__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","9bbd38bb","CRLFF and correcting sortorder","2018-06-08T22:07:48Z","sortableTable.js","SortableTableLibrary","[{__row__:__306__,__code__:__this.rowIndex=1;    __},{__row__:__307__,__code__:__\/\/ Local variable that contains html code for main table and local variable that contains magic headings table__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","be83861b","More delimiter updates","2018-07-05T15:34:37Z","sortableTable.js","SortableTableLibrary","[{__row__:__308__,__code__:__amp;gt;;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","9eae9166","magic heading now will include footer when scrolling horizontally","2018-08-07T07:31:20Z","sortableTable.js","SortableTableLibrary","[{__row__:__309__,__code__:__amp;gt;;    __},{__row__:__310__,__code__:__amp;gt;;    __},{__row__:__311__,__code__:__amp;gt;;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","9bbd38bb","CRLF-LF and correcting sortorder","2018-06-08T22:07:48Z","sortableTable.js","SortableTableLibrary","[{__row__:__312__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","16f43722","First try : remake column filter render and a deterministic column re","2018-06-11T22:36:14Z","sortableTable.js","SortableTableLibrary","[{__row__:__313__,__code__:__\/\/ Local variable that contains summing array__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","9bbd38bb","CRLFLF and correcting sortorder","2018-06-08T22:07:48Z","sortableTable.js","SortableTableLibrary","[{__row__:__314__,__code__:__var sumContent = [];    __},{__row__:__315__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","16f43722","First try : remake column filter render and a deterministic column re","2018-06-11T22:36:14Z","sortableTable.js","SortableTableLibrary","[{__row__:__316__,__code__:__\/\/ Assign currently active table    __},{__row__:__317__,__code__:__sortableTable.currentTable=this;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","be83861b","More delimiter updates","2018-07-05T15:34:37Z","sortableTable.js","SortableTableLibrary","[{__row__:__318__,__code__:__if(localStorage.getItem(this.tableid+DELIMITER+filtercolnames)===null){__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","5d053c52","row filter in large example","2018-06-19T09:36:43Z","sortableTable.js","SortableTableLibrary","[{__row__:__319__,__code__:__          columnfilter=[];    __},{__row__:__320__,__code__:__      }else{__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","be83861b","More delimiter updates","2018-07-05T15:34:37Z","sortableTable.js","SortableTableLibrary","[{__row__:__321__,__code__:__          columnfilter =JSON.parse(localStorage.getItem(this.tableid+DELIMITER+filtercolnames));__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","5d053c52","row filter in large example","2018-06-19T09:36:43Z","sortableTable.js","SortableTableLibrary","[{__row__:__322__,__code__:__      }    \t__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","3b022ace","Good taste","2018-06-12T09:32:32Z","sortableTable.js","SortableTableLibrary","[{__row__:__323__,__code__:__var filterstr=;    __},{__row__:__324__,__code__:__var columnOrderIdx;    __},{__row__:__325__,__code__:__amp;lt;columnOrder.length;columnOrderIdx++){    __},{__row__:__326__,__code__:__if(!(columnfilter[columnOrderIdx]===null||columnfilter[columnOrderIdx]===columnOrder[columnOrderIdx])){    __},{__row__:__327__,__code__:__break;    __},{__row__:__328__,__code__:__          }__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","5cd5653d","Column filter now render correct names","2018-06-19T11:41:59Z","sortableTable.js","SortableTableLibrary","[{__row__:__329__,__code__:__if (renderColumnFilter !=null) filterstr +=renderColumnFilter(columnOrder[columnOrderIdx],columnfilter[columnOrderIdx],tbl.tblhead[columnOrder[columnOrderIdx]]);__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","3b022ace","Good taste","2018-06-12T09:32:32Z","sortableTable.js","SortableTableLibrary","[{__row__:__330__,__code__:__      }              __},{__row__:__331__,__code__:__    __},{__row__:__332__,__code__:__amp;lt;columnOrder.length;columnOrderIdx++){    __},{__row__:__333__,__code__:__          columnfilter[columnOrderIdx]=columnOrder[columnOrderIdx];__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","5cd5653d","Column filter now render correct names","2018-06-19T11:41:59Z","sortableTable.js","SortableTableLibrary","[{__row__:__334__,__code__:__if (renderColumnFilter !=null) filterstr +=renderColumnFilter(columnOrder[columnOrderIdx],columnfilter[columnOrderIdx],tbl.tblhead[columnOrder[columnOrderIdx]]);__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","3b022ace","Good taste","2018-06-12T09:32:32Z","sortableTable.js","SortableTableLibrary","[{__row__:__335__,__code__:__      }__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","be83861b","More delimiter updates","2018-07-05T15:34:37Z","sortableTable.js","SortableTableLibrary","[{__row__:__336__,__code__:__localStorage.setItem(this.tableid+DELIMITER+filtercolnames,JSON.stringify(columnfilter));__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","ff162add","Sorting fix","2018-10-16T11:04:32Z","sortableTable.js","SortableTableLibrary","[{__row__:__337__,__code__:__    __},{__row__:__338__,__code__:__\/\/ Retrieve sort column from local storage if we have one    __},{__row__:__339__,__code__:__if(localStorage.getItem(this.tableid+DELIMITER+sortcol)!==null){    __},{__row__:__340__,__code__:__var tmpsortcolumn =localStorage.getItem(this.tableid+DELIMITER+sortcol);    __},{__row__:__341__,__code__:__    __},{__row__:__342__,__code__:__\/\/ Check that the sorting column is visible, if not, clear it.    __},{__row__:__343__,__code__:__    __},{__row__:__344__,__code__:__amp;gt;-1){    __},{__row__:__345__,__code__:__\t\t\t\t\t\t\tsortcolumn=tmpsortcolumn;    __},{__row__:__346__,__code__:__\t\t\t\t\t\t\tsortkind=parseInt(localStorage.getItem(this.tableid+DELIMITER+sortkind));    __},{__row__:__347__,__code__:__\t\t\t\t\t}else{    __},{__row__:__348__,__code__:__\t\t\t\t\t\t\tsortcolumn=UNK;    __},{__row__:__349__,__code__:__\t\t\t\t\t\t\tsortkind=-1;    __},{__row__:__350__,__code__:__\t\t\t\t\t}    __},{__row__:__351__,__code__:__      }       __},{__row__:__352__,__code__:__    __},{__row__:__353__,__code__:__\/\/ Sort the body of the table again    __},{__row__:__354__,__code__:__tbl.tblbody.sort(sortableInternalSort);    __},{__row__:__355__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","16f43722","First try : remake column filter render and a deterministic column re","2018-06-11T22:36:14Z","sortableTable.js","SortableTableLibrary","[{__row__:__356__,__code__:__if (renderColumnFilter !=null) {    __},{__row__:__357__,__code__:__document.getElementById(filterid).innerHTML= filterstr;    __},{__row__:__358__,__code__:__    \t}__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","30378491","Merging students code","2018-05-29T09:19:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__359__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","9d25dffe","Bug fix freeze pane","2018-07-04T09:52:31Z","sortableTable.js","SortableTableLibrary","[{__row__:__360__,__code__:__if(caption!==UNK){    __},{__row__:__361__,__code__:__amp;gt;;      __},{__row__:__362__,__code__:__      }    \t__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","30378491","Merging students code","2018-05-29T09:19:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__363__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","9bbd38bb","CRLFLF and correcting sortorder","2018-06-08T22:07:48Z","sortableTable.js","SortableTableLibrary","[{__row__:__364__,__code__:__\/\/ Make headings Clean Contains headings using only A-Z a-z 0-9 ... move to function removes lines of code and removes redundant code\/data!?__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","be83861b","More delimiter updates","2018-07-05T15:34:37Z","sortableTable.js","SortableTableLibrary","[{__row__:__365__,__code__:__amp;gt;;    __},{__row__:__366__,__code__:__amp;gt;;    __},{__row__:__367__,__code__:__amp;gt;;    __},{__row__:__368__,__code__:__amp;gt;;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","1b17f724","Seed","2017-11-23T12:12:16Z","sortableTable.js","SortableTableLibrary","[{__row__:__369__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","46176820","Readability of gnarly delimiter code","2018-10-23T21:31:47Z","sortableTable.js","SortableTableLibrary","[{__row__:__370__,__code__:__var deli=DELIMITER+this.tableid+DELIMITER;    __},{__row__:__371__,__code__:__var delitbl=deli+tbl+DELIMITER;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","1bbc48bb","Introducing global comparing function","2017-11-26T19:07:20Z","sortableTable.js","SortableTableLibrary","[{__row__:__372__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","9bbd38bb","CRLFLF and correcting sortorder","2018-06-08T22:07:48Z","sortableTable.js","SortableTableLibrary","[{__row__:__373__,__code__:__\/\/ Add Column for counter if the sortabletable should have a counter column.    __},{__row__:__374__,__code__:__if(this.hasCounter) {__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","46176820","Readability of gnarly delimiter code","2018-10-23T21:31:47Z","sortableTable.js","SortableTableLibrary","[{__row__:__375__,__code__:__amp;gt;;    __},{__row__:__376__,__code__:__amp;gt;;    __},{__row__:__377__,__code__:__amp;gt;;    __},{__row__:__378__,__code__:__amp;gt;;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","9bbd38bb","CRLFLF and correcting sortorder","2018-06-08T22:07:48Z","sortableTable.js","SortableTableLibrary","[{__row__:__379__,__code__:__      }__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","a33b5073","Added a delimiter","2018-07-05T09:59:46Z","sortableTable.js","SortableTableLibrary","[{__row__:__380__,__code__:__amp;lt;columnOrder.length;columnOrderIdx++){    __},{__row__:__381__,__code__:__var colname=columnOrder[columnOrderIdx];    __},{__row__:__382__,__code__:__var col=tbl.tblhead[colname];    __},{__row__:__383__,__code__:__    __},{__row__:__384__,__code__:__if (columnfilter[columnOrderIdx] !==null) {    __},{__row__:__385__,__code__:__if (renderSortOptions !==null) {__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","ff162add","Sorting fix","2018-10-16T11:04:32Z","sortableTable.js","SortableTableLibrary","[{__row__:__386__,__code__:__amp;lt; freezePaneIndex) {    __},{__row__:__387__,__code__:__if (colname == sortcolumn){__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","46176820","Readability of gnarly delimiter code","2018-10-23T21:31:47Z","sortableTable.js","SortableTableLibrary","[{__row__:__388__,__code__:__amp;gt;;    __},{__row__:__389__,__code__:__amp;gt;;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","ff162add","Sorting fix","2018-10-16T11:04:32Z","sortableTable.js","SortableTableLibrary","[{__row__:__390__,__code__:__\t\t\t\t\t\t\t\t\t\t\t\t} else {__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","46176820","Readability of gnarly delimiter code","2018-10-23T21:31:47Z","sortableTable.js","SortableTableLibrary","[{__row__:__391__,__code__:__amp;gt;;    __},{__row__:__392__,__code__:__amp;gt;;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","ff162add","Sorting fix","2018-10-16T11:04:32Z","sortableTable.js","SortableTableLibrary","[{__row__:__393__,__code__:__\t\t\t\t\t\t\t\t\t\t\t\t}    __},{__row__:__394__,__code__:__\t\t\t\t\t\t\t\t\t}    __},{__row__:__395__,__code__:__if (colname == sortcolumn) {__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","46176820","Readability of gnarly delimiter code","2018-10-23T21:31:47Z","sortableTable.js","SortableTableLibrary","[{__row__:__396__,__code__:__amp;gt;;    __},{__row__:__397__,__code__:__amp;gt;;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","ff162add","Sorting fix","2018-10-16T11:04:32Z","sortableTable.js","SortableTableLibrary","[{__row__:__398__,__code__:__\t\t\t\t\t\t\t\t\t} else {__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","46176820","Readability of gnarly delimiter code","2018-10-23T21:31:47Z","sortableTable.js","SortableTableLibrary","[{__row__:__399__,__code__:__amp;gt;;    __},{__row__:__400__,__code__:__amp;gt;;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","ff162add","Sorting fix","2018-10-16T11:04:32Z","sortableTable.js","SortableTableLibrary","[{__row__:__401__,__code__:__\t\t\t\t\t\t\t\t\t}__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","a33b5073","Added a delimiter","2018-07-05T09:59:46Z","sortableTable.js","SortableTableLibrary","[{__row__:__402__,__code__:__        \t\t\t} else {    __},{__row__:__403__,__code__:__amp;lt; freezePaneIndex) {                        __},{__row__:__404__,__code__:__if (colname == sortcolumn){__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","46176820","Readability of gnarly delimiter code","2018-10-23T21:31:47Z","sortableTable.js","SortableTableLibrary","[{__row__:__405__,__code__:__amp;gt;;    __},{__row__:__406__,__code__:__amp;gt;;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","a33b5073","Added a delimiter","2018-07-05T09:59:46Z","sortableTable.js","SortableTableLibrary","[{__row__:__407__,__code__:__          \t\t\t\t \t} else {__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","46176820","Readability of gnarly delimiter code","2018-10-23T21:31:47Z","sortableTable.js","SortableTableLibrary","[{__row__:__408__,__code__:__amp;gt;;    __},{__row__:__409__,__code__:__amp;gt;;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","a33b5073","Added a delimiter","2018-07-05T09:59:46Z","sortableTable.js","SortableTableLibrary","[{__row__:__410__,__code__:__          \t\t\t\t \t}    __},{__row__:__411__,__code__:__          \t\t\t\t}    __},{__row__:__412__,__code__:__if (col !=move) {__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","46176820","Readability of gnarly delimiter code","2018-10-23T21:31:47Z","sortableTable.js","SortableTableLibrary","[{__row__:__413__,__code__:__amp;gt;;    __},{__row__:__414__,__code__:__amp;gt;;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","a33b5073","Added a delimiter","2018-07-05T09:59:46Z","sortableTable.js","SortableTableLibrary","[{__row__:__415__,__code__:__          \t\t\t\t}    __},{__row__:__416__,__code__:__        \t\t\t}    __},{__row__:__417__,__code__:__          }    __},{__row__:__418__,__code__:__    \t}    __},{__row__:__419__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","9bbd38bb","CRLFLF and correcting sortorder","2018-06-08T22:07:48Z","sortableTable.js","SortableTableLibrary","[{__row__:__420__,__code__:__amp;gt;;    __},{__row__:__421__,__code__:__amp;gt;;    __},{__row__:__422__,__code__:__amp;gt;;    __},{__row__:__423__,__code__:__    __},{__row__:__424__,__code__:__\/\/ Render table body__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","be83861b","More delimiter updates","2018-07-05T15:34:37Z","sortableTable.js","SortableTableLibrary","[{__row__:__425__,__code__:__amp;gt;;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","7c844f5f","Added simple pagination and pre/post render callbacks","2019-08-21T08:13:02Z","sortableTable.js","SortableTableLibrary","[{__row__:__426__,__code__:__amp;gt;;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","6e242373","Nearly finished email function","2019-08-29T09:02:46Z","sortableTable.js","SortableTableLibrary","[{__row__:__427__,__code__:__      filteredRows=[];__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","9bbd38bb","CRLFLF and correcting sortorder","2018-06-08T22:07:48Z","sortableTable.js","SortableTableLibrary","[{__row__:__428__,__code__:__amp;lt;tbl.tblbody.length; i++) {    __},{__row__:__429__,__code__:__var row =tbl.tblbody[i];    __},{__row__:__430__,__code__:__if (rowFilter(row)) {__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","6e242373","Nearly finished email function","2019-08-29T09:02:46Z","sortableTable.js","SortableTableLibrary","[{__row__:__431__,__code__:__filteredRows.push(row);    __},{__row__:__432__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","bc406bae","Fixed refactoring problem...","2019-08-29T10:57:44Z","sortableTable.js","SortableTableLibrary","[{__row__:__433__,__code__:__amp;gt;((this.selectedPage-1)*this.rowsPerPage))){__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","7c844f5f","Added simple pagination and pre/post render callbacks","2019-08-21T08:13:02Z","sortableTable.js","SortableTableLibrary","[{__row__:__434__,__code__:__amp;lt;tr id='+this.tableid+DELIMITER+i+'    __},{__row__:__435__,__code__:__if (this.hasRowHighlight) str+= onmouseover='rowHighlightInternal(event,this)' onmouseout='rowDeHighlightInternal(event,this)';    __},{__row__:__436__,__code__:__amp;gt;;    __},{__row__:__437__,__code__:__amp;gt;;    __},{__row__:__438__,__code__:__    __},{__row__:__439__,__code__:__amp;gt;_counter can be used to style the counterText    __},{__row__:__440__,__code__:__if(this.hasCounter) {    __},{__row__:__441__,__code__:__amp;gt;;    __},{__row__:__442__,__code__:__amp;gt;;    __},{__row__:__443__,__code__:__                }    __},{__row__:__444__,__code__:__                result++;    __},{__row__:__445__,__code__:__amp;lt;columnOrder.length;columnOrderIdx++){    __},{__row__:__446__,__code__:__if (columnfilter[columnOrderIdx] !==null) {    __},{__row__:__447__,__code__:__\/\/ check if this column is a row-sum column    __},{__row__:__448__,__code__:__amp;lt;rowsumList.length;j++){                          __},{__row__:__449__,__code__:__amp;gt;-1) {    __},{__row__:__450__,__code__:__tbl.tblbody[i][columnOrder[columnOrderIdx]]=0;    __},{__row__:__451__,__code__:__amp;lt;rowsumList[j].length;k++){                                    __},{__row__:__452__,__code__:__if (typeof(tbl.tblbody[i][rowsumList[j][k].substring(0,rowsumList[j][k].indexOf('.'))])==='object'){    __},{__row__:__453__,__code__:__tbl.tblbody[i][columnOrder[columnOrderIdx]]+=parseFloat(byString(tbl.tblbody[i][rowsumList[j][k].substring(0,rowsumList[j][k].indexOf('.'))],rowsumList[j][k]));    __},{__row__:__454__,__code__:__                                  }else{    __},{__row__:__455__,__code__:__tbl.tblbody[i][columnOrder[columnOrderIdx]]+=parseFloat(tbl.tblbody[i][rowsumList[j][k]]);    __},{__row__:__456__,__code__:__                                  }     __},{__row__:__457__,__code__:__    __},{__row__:__458__,__code__:__                              }                  \t\t\t\t\t\t    __},{__row__:__459__,__code__:__                          }    __},{__row__:__460__,__code__:__                      }    __},{__row__:__461__,__code__:__    __},{__row__:__462__,__code__:__\/\/ This condition is true if column is in summing list and in that case perform the sum like a BOSS    __},{__row__:__463__,__code__:__amp;gt;-1) {    __},{__row__:__464__,__code__:__if (typeof(sumContent[columnOrder[columnOrderIdx]]) ==undefined) sumContent[columnOrder[columnOrderIdx]]=0;    __},{__row__:__465__,__code__:__                          sumContent[columnOrder[columnOrderIdx]]+=sumFunc(columnOrder[columnOrderIdx],tbl.tblbody[i][columnOrder[columnOrderIdx]],row);    __},{__row__:__466__,__code__:__                      }    __},{__row__:__467__,__code__:__    __},{__row__:__468__,__code__:__var cellid =r+i+deli+columnOrder[columnOrderIdx];    __},{__row__:__469__,__code__:__amp;gt;;      __},{__row__:__470__,__code__:__amp;lt;freezePaneIndex){    __},{__row__:__471__,__code__:__amp;gt;;      __},{__row__:__472__,__code__:__                      }    __},{__row__:__473__,__code__:__                  }__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","16f43722","First try : remake column filter render and a deterministic column re","2018-06-11T22:36:14Z","sortableTable.js","SortableTableLibrary","[{__row__:__474__,__code__:__              }__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","7c844f5f","Added simple pagination and pre/post render callbacks","2019-08-21T08:13:02Z","sortableTable.js","SortableTableLibrary","[{__row__:__475__,__code__:__amp;gt;;    __},{__row__:__476__,__code__:__amp;gt;;    __},{__row__:__477__,__code__:__            }__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","9bbd38bb","CRLFLF and correcting sortorder","2018-06-08T22:07:48Z","sortableTable.js","SortableTableLibrary","[{__row__:__478__,__code__:__          }    __},{__row__:__479__,__code__:__    \t}__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","d39107dc","Fixing postFiltering callback","2019-08-29T10:12:04Z","sortableTable.js","SortableTableLibrary","[{__row__:__480__,__code__:__    __},{__row__:__481__,__code__:__\/\/ Must be directly after the filtering!    __},{__row__:__482__,__code__:__if(this.postFilterCallback!==null)this.postFilterCallback(tbl.tblbody.length,filteredRows.length);    __},{__row__:__483__,__code__:__    __},{__row__:__484__,__code__:__amp;gt;;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","9eae9166","magic heading now will include footer when scrolling horizontally","2018-08-07T07:31:20Z","sortableTable.js","SortableTableLibrary","[{__row__:__485__,__code__:__amp;gt;;    __},{__row__:__486__,__code__:__amp;gt;;    __},{__row__:__487__,__code__:__amp;gt;;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","3a451591","Clean up and bug fix","2018-06-20T07:54:17Z","sortableTable.js","SortableTableLibrary","[{__row__:__488__,__code__:__amp;gt;;    __},{__row__:__489__,__code__:__amp;gt;;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","7af6c5e4","Now column sums works","2018-06-19T21:04:36Z","sortableTable.js","SortableTableLibrary","[{__row__:__490__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","3a451591","Clean up and bug fix","2018-06-20T07:54:17Z","sortableTable.js","SortableTableLibrary","[{__row__:__491__,__code__:__if(this.hasCounter) {    __},{__row__:__492__,__code__:__amp;gt;;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","9eae9166","magic heading now will include footer when scrolling horizontally","2018-08-07T07:31:20Z","sortableTable.js","SortableTableLibrary","[{__row__:__493__,__code__:__amp;gt;;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","3a451591","Clean up and bug fix","2018-06-20T07:54:17Z","sortableTable.js","SortableTableLibrary","[{__row__:__494__,__code__:__      }    __},{__row__:__495__,__code__:__amp;lt;columnOrder.length;columnOrderIdx++){    __},{__row__:__496__,__code__:__if (columnfilter[columnOrderIdx] !==null) {    __},{__row__:__497__,__code__:__if (typeof(sumContent[columnOrder[columnOrderIdx]])!=='undefined') {__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","9eae9166","magic heading now will include footer when scrolling horizontally","2018-08-07T07:31:20Z","sortableTable.js","SortableTableLibrary","[{__row__:__498__,__code__:__amp;gt;;    __},{__row__:__499__,__code__:__amp;lt; freezePaneIndex) {    __},{__row__:__500__,__code__:__amp;gt;;                      __},{__row__:__501__,__code__:__                  }__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","3a451591","Clean up and bug fix","2018-06-20T07:54:17Z","sortableTable.js","SortableTableLibrary","[{__row__:__502__,__code__:__              }else{    __},{__row__:__503__,__code__:__amp;gt;;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","9eae9166","magic heading now will include footer when scrolling horizontally","2018-08-07T07:31:20Z","sortableTable.js","SortableTableLibrary","[{__row__:__504__,__code__:__amp;lt; freezePaneIndex) {    __},{__row__:__505__,__code__:__amp;gt;;    __},{__row__:__506__,__code__:__                  }__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","3a451591","Clean up and bug fix","2018-06-20T07:54:17Z","sortableTable.js","SortableTableLibrary","[{__row__:__507__,__code__:__              }              __},{__row__:__508__,__code__:__          }    __},{__row__:__509__,__code__:__      }__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","9bbd38bb","CRLFLF and correcting sortorder","2018-06-08T22:07:48Z","sortableTable.js","SortableTableLibrary","[{__row__:__510__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","3a451591","Clean up and bug fix","2018-06-20T07:54:17Z","sortableTable.js","SortableTableLibrary","[{__row__:__511__,__code__:__amp;gt;;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","9eae9166","magic heading now will include footer when scrolling horizontally","2018-08-07T07:31:20Z","sortableTable.js","SortableTableLibrary","[{__row__:__512__,__code__:__amp;gt;;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","9bbd38bb","CRLFLF and correcting sortorder","2018-06-08T22:07:48Z","sortableTable.js","SortableTableLibrary","[{__row__:__513__,__code__:__amp;gt;;    __},{__row__:__514__,__code__:__amp;gt;;    __},{__row__:__515__,__code__:__    __},{__row__:__516__,__code__:__this.magicHeader();__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","7c844f5f","Added simple pagination and pre/post render callbacks","2019-08-21T08:13:02Z","sortableTable.js","SortableTableLibrary","[{__row__:__517__,__code__:__freezePaneHandler();    __},{__row__:__518__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","9bbd38bb","CRLFLF and correcting sortorder","2018-06-08T22:07:48Z","sortableTable.js","SortableTableLibrary","[{__row__:__519__,__code__:__    }__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","1b17f724","Seed","2017-11-23T12:12:16Z","sortableTable.js","SortableTableLibrary","[{__row__:__520__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","9bbd38bb","CRLFLF and correcting sortorder","2018-06-08T22:07:48Z","sortableTable.js","SortableTableLibrary","[{__row__:__521__,__code__:__this.toggleColumn=function(colname,col) {    __},{__row__:__522__,__code__:__\/\/ Assign currently active table    __},{__row__:__523__,__code__:__sortableTable.currentTable=this;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","16f43722","First try : remake column filter render and a deterministic column re","2018-06-11T22:36:14Z","sortableTable.js","SortableTableLibrary","[{__row__:__524__,__code__:__amp;lt;columnOrder.length;idx++){    __},{__row__:__525__,__code__:__if(columnOrder[idx]===colname){    __},{__row__:__526__,__code__:__if(columnfilter[idx]){    __},{__row__:__527__,__code__:__                  columnfilter[idx]=null;    __},{__row__:__528__,__code__:__              }else{    __},{__row__:__529__,__code__:__                  columnfilter[idx]=columnOrder[idx];    __},{__row__:__530__,__code__:__              }    __},{__row__:__531__,__code__:__          }    __},{__row__:__532__,__code__:__      }__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","be83861b","More delimiter updates","2018-07-05T15:34:37Z","sortableTable.js","SortableTableLibrary","[{__row__:__533__,__code__:__localStorage.setItem(this.tableid+DELIMITER+filtercolnames, JSON.stringify(columnfilter));__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","30378491","Merging students code","2018-05-29T09:19:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__534__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","ed5529f5","more readable","2019-01-11T16:04:11Z","sortableTable.js","SortableTableLibrary","[{__row__:__535__,__code__:__this.renderTable();__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","9bbd38bb","CRLFLF and correcting sortorder","2018-06-08T22:07:48Z","sortableTable.js","SortableTableLibrary","[{__row__:__536__,__code__:__    }__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","30378491","Merging students code","2018-05-29T09:19:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__537__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","9bbd38bb","CRLFLF and correcting sortorder","2018-06-08T22:07:48Z","sortableTable.js","SortableTableLibrary","[{__row__:__538__,__code__:__this.toggleSortStatus=function(col,kind) {    __},{__row__:__539__,__code__:__\/\/ Assign currently active table    __},{__row__:__540__,__code__:__sortableTable.currentTable=this;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","30378491","Merging students code","2018-05-29T09:19:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__541__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","ff162add","Sorting fix","2018-10-16T11:04:32Z","sortableTable.js","SortableTableLibrary","[{__row__:__542__,__code__:__\/\/ Save column name to local storage!    __},{__row__:__543__,__code__:__localStorage.setItem(this.tableid+DELIMITER+sortcol,col);    __},{__row__:__544__,__code__:__localStorage.setItem(this.tableid+DELIMITER+sortkind,kind);    __},{__row__:__545__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","9bbd38bb","CRLFLF and correcting sortorder","2018-06-08T22:07:48Z","sortableTable.js","SortableTableLibrary","[{__row__:__546__,__code__:__    \tsortcolumn = col;    __},{__row__:__547__,__code__:__    \tsortkind = kind;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","ff162add","Sorting fix","2018-10-16T11:04:32Z","sortableTable.js","SortableTableLibrary","[{__row__:__548__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","ed5529f5","more readable","2019-01-11T16:04:11Z","sortableTable.js","SortableTableLibrary","[{__row__:__549__,__code__:__this.renderTable();__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","30378491","Merging students code","2018-05-29T09:19:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__550__,__code__:__    }__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","83a20d15","Updated test data generator to fit previous static test data format","2017-12-15T09:53:39Z","sortableTable.js","SortableTableLibrary","[{__row__:__551__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","9bbd38bb","CRLFLF and correcting sortorder","2018-06-08T22:07:48Z","sortableTable.js","SortableTableLibrary","[{__row__:__552__,__code__:__this.getKeyByValue=function() {    __},{__row__:__553__,__code__:__amp;gt;tbl.tblhead[key] === sortcolumn);__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","30378491","Merging students code","2018-05-29T09:19:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__554__,__code__:__    }    __},{__row__:__555__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","27325a9b","clean up","2018-06-20T11:28:44Z","sortableTable.js","SortableTableLibrary","[{__row__:__556__,__code__:__this.getSortcolumn=function() {    __},{__row__:__557__,__code__:__return sortcolumn;    __},{__row__:__558__,__code__:__    }__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","30378491","Merging students code","2018-05-29T09:19:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__559__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","27325a9b","clean up","2018-06-20T11:28:44Z","sortableTable.js","SortableTableLibrary","[{__row__:__560__,__code__:__this.getSortkind=function() {    __},{__row__:__561__,__code__:__return sortkind;    __},{__row__:__562__,__code__:__    }__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","30378491","Merging students code","2018-05-29T09:19:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__563__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","9bbd38bb","CRLFLF and correcting sortorder","2018-06-08T22:07:48Z","sortableTable.js","SortableTableLibrary","[{__row__:__564__,__code__:__this.magicHeader=function() {    __},{__row__:__565__,__code__:__\/\/ Assign table and magic headings table(s)__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","e07b702d","Embettering handling of magic headings","2018-10-23T18:05:02Z","sortableTable.js","SortableTableLibrary","[{__row__:__566__,__code__:__\/\/this.hasMagicHeadings=false;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","793603b2","Updated with col highlight ...","2018-10-23T17:48:45Z","sortableTable.js","SortableTableLibrary","[{__row__:__567__,__code__:__if (this.hasMagicHeadings) {__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","97719409","Fixed MH column width issue and showing MH from top 0px","2018-08-01T13:45:01Z","sortableTable.js","SortableTableLibrary","[{__row__:__568__,__code__:__document.getElementById(this.tableid).innerHTML= str+mhstr+mhvstr+mhfstr;          __}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","be83861b","More delimiter updates","2018-07-05T15:34:37Z","sortableTable.js","SortableTableLibrary","[{__row__:__569__,__code__:__document.getElementById(this.tableid+DELIMITER+tbl+DELIMITER+mh).style.width=document.getElementById(this.tableid+DELIMITER+tbl).getBoundingClientRect().width+px;    __},{__row__:__570__,__code__:__document.getElementById(this.tableid+DELIMITER+tbl+DELIMITER+mh).style.boxSizing=border-box;    __},{__row__:__571__,__code__:__      \t\tchildren=document.getElementById(this.tableid+DELIMITER+tbl).getElementsByTagName('TH');__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","ca5cb233","No works resonable well","2018-06-12T11:23:31Z","sortableTable.js","SortableTableLibrary","[{__row__:__572__,__code__:__amp;lt;children.length; i++) {__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","be83861b","More delimiter updates","2018-07-05T15:34:37Z","sortableTable.js","SortableTableLibrary","[{__row__:__573__,__code__:__document.getElementById(children[i].id+DELIMITER+mh).style.width= children[i].getBoundingClientRect().width+px;    __},{__row__:__574__,__code__:__document.getElementById(children[i].id+DELIMITER+mh).style.boxSizing=border-box;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","ca5cb233","No works resonable well","2018-06-12T11:23:31Z","sortableTable.js","SortableTableLibrary","[{__row__:__575__,__code__:__      \t\t}__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","9bbd38bb","CRLFLF and correcting sortorder","2018-06-08T22:07:48Z","sortableTable.js","SortableTableLibrary","[{__row__:__576__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","be83861b","More delimiter updates","2018-07-05T15:34:37Z","sortableTable.js","SortableTableLibrary","[{__row__:__577__,__code__:__document.getElementById(this.tableid+DELIMITER+tbl+DELIMITER+mhf).style.width=Math.round(document.getElementById(this.tableid+DELIMITER+tbl+DELIMITER+mhv).getBoundingClientRect().width)+px;    __},{__row__:__578__,__code__:__document.getElementById(this.tableid+DELIMITER+tbl+DELIMITER+mhf).style.boxSizing=border-box;    __},{__row__:__579__,__code__:__      \t\tchildren=document.getElementById(this.tableid+DELIMITER+tbl+DELIMITER+mhv).getElementsByTagName('TH');__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","9bbd38bb","CRLFLF and correcting sortorder","2018-06-08T22:07:48Z","sortableTable.js","SortableTableLibrary","[{__row__:__580__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","ca5cb233","No works resonable well","2018-06-12T11:23:31Z","sortableTable.js","SortableTableLibrary","[{__row__:__581__,__code__:__amp;lt;children.length; i++) {    __},{__row__:__582__,__code__:__document.getElementById(children[i].id.slice(0, -1)+f).style.width= children[i].getBoundingClientRect().width+px;    __},{__row__:__583__,__code__:__document.getElementById(children[i].id.slice(0, -1)+f).style.boxSizing=border-box;    __},{__row__:__584__,__code__:__      \t\t}__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","be83861b","More delimiter updates","2018-07-05T15:34:37Z","sortableTable.js","SortableTableLibrary","[{__row__:__585__,__code__:__document.getElementById(this.tableid+DELIMITER+tblhead_mh).style.height=Math.round(document.getElementById(this.tableid+DELIMITER+tblhead).getBoundingClientRect().height)+px;    __},{__row__:__586__,__code__:__document.getElementById(this.tableid+DELIMITER+tblhead_mhv).style.height=Math.round(document.getElementById(this.tableid+DELIMITER+tblhead).getBoundingClientRect().height)+px;    __},{__row__:__587__,__code__:__document.getElementById(this.tableid+DELIMITER+tblhead_mhf).style.height=Math.round(document.getElementById(this.tableid+DELIMITER+tblhead).getBoundingClientRect().height)+px;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","793603b2","Updated with col highlight ...","2018-10-23T17:48:45Z","sortableTable.js","SortableTableLibrary","[{__row__:__588__,__code__:__\t\t\t} else {__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","ca5cb233","No works resonable well","2018-06-12T11:23:31Z","sortableTable.js","SortableTableLibrary","[{__row__:__589__,__code__:__document.getElementById(this.tableid).innerHTML= str;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","9bbd38bb","CRLFLF and correcting sortorder","2018-06-08T22:07:48Z","sortableTable.js","SortableTableLibrary","[{__row__:__590__,__code__:__    \t}    __},{__row__:__591__,__code__:__    __},{__row__:__592__,__code__:__if (tableSort !=null) {__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","ca5cb233","No works resonable well","2018-06-12T11:23:31Z","sortableTable.js","SortableTableLibrary","[{__row__:__593__,__code__:__sortTable(tableSort, colSort, reverseSort);__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","7c844f5f","Added simple pagination and pre/post render callbacks","2019-08-21T08:13:02Z","sortableTable.js","SortableTableLibrary","[{__row__:__594__,__code__:__      }    __},{__row__:__595__,__code__:__    __},{__row__:__596__,__code__:__amp;gt;0){    __},{__row__:__597__,__code__:__this.renderPagination();    __},{__row__:__598__,__code__:__      }        \t\t__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","30378491","Merging students code","2018-05-29T09:19:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__599__,__code__:__    }    __},{__row__:__600__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","c7c92346","Improved magic headings","2018-10-25T06:21:59Z","sortableTable.js","SortableTableLibrary","[{__row__:__601__,__code__:__setInterval(freezePaneHandler,30);__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","9bbd38bb","CRLFLF and correcting sortorder","2018-06-08T22:07:48Z","sortableTable.js","SortableTableLibrary","[{__row__:__602__,__code__:__functionfreezePaneHandler() {__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","27325a9b","clean up","2018-06-20T11:28:44Z","sortableTable.js","SortableTableLibrary","[{__row__:__603__,__code__:__\/\/ Hide magic headings and find minimum overdraft    __},{__row__:__604__,__code__:__amp;lt;sortableTable.sortableTables.length; i++) {    __},{__row__:__605__,__code__:__var table =sortableTable.sortableTables[i];    __},{__row__:__606__,__code__:__if (table.hasMagicHeadings) {__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","ed5529f5","more readable","2019-01-11T16:04:11Z","sortableTable.js","SortableTableLibrary","[{__row__:__607__,__code__:__if (window.innerWidth!= windowWidth){windowWidth=window.innerWidth;table.renderTable()}__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","be83861b","More delimiter updates","2018-07-05T15:34:37Z","sortableTable.js","SortableTableLibrary","[{__row__:__608__,__code__:__if (document.getElementById(table.tableid+DELIMITER+tbl) !=null) {    __},{__row__:__609__,__code__:__var thetab =document.getElementById(table.tableid+DELIMITER+tbl).getBoundingClientRect();__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","7ec088b2","gah","2018-11-07T11:16:19Z","sortableTable.js","SortableTableLibrary","[{__row__:__610__,__code__:__var thetabhead =document.getElementById(table.tableid+DELIMITER+tblhead).getBoundingClientRect();__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","27325a9b","clean up","2018-06-20T11:28:44Z","sortableTable.js","SortableTableLibrary","[{__row__:__611__,__code__:__\/\/ If top is negative and top+height is positive draw mh otherwise hide    __},{__row__:__612__,__code__:__\/\/ Vertical__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","97719409","Fixed MH column width issue and showing MH from top 0px","2018-08-01T13:45:01Z","sortableTable.js","SortableTableLibrary","[{__row__:__613__,__code__:__amp;gt;0) {__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","be83861b","More delimiter updates","2018-07-05T15:34:37Z","sortableTable.js","SortableTableLibrary","[{__row__:__614__,__code__:__document.getElementById(table.tableid+DELIMITER+tbl+DELIMITER+mh).style.left=thetab.left+px;    __},{__row__:__615__,__code__:__document.getElementById(table.tableid+DELIMITER+tbl+DELIMITER+mh).style.display=table;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","27325a9b","clean up","2018-06-20T11:28:44Z","sortableTable.js","SortableTableLibrary","[{__row__:__616__,__code__:__            \t\t\t\t}    __},{__row__:__617__,__code__:__else {__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","be83861b","More delimiter updates","2018-07-05T15:34:37Z","sortableTable.js","SortableTableLibrary","[{__row__:__618__,__code__:__document.getElementById(table.tableid+DELIMITER+tbl+DELIMITER+mh).style.display=none;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","27325a9b","clean up","2018-06-20T11:28:44Z","sortableTable.js","SortableTableLibrary","[{__row__:__619__,__code__:__            \t\t\t\t}    __},{__row__:__620__,__code__:__\/\/ Horizontal    __},{__row__:__621__,__code__:__amp;gt;0) {__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","be83861b","More delimiter updates","2018-07-05T15:34:37Z","sortableTable.js","SortableTableLibrary","[{__row__:__622__,__code__:__document.getElementById(table.tableid+DELIMITER+tbl+DELIMITER+mhv).style.top=thetabhead.top+px;    __},{__row__:__623__,__code__:__document.getElementById(table.tableid+DELIMITER+tbl+DELIMITER+mhv).style.display=table;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","27325a9b","clean up","2018-06-20T11:28:44Z","sortableTable.js","SortableTableLibrary","[{__row__:__624__,__code__:__            \t\t\t\t}    __},{__row__:__625__,__code__:__else {__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","be83861b","More delimiter updates","2018-07-05T15:34:37Z","sortableTable.js","SortableTableLibrary","[{__row__:__626__,__code__:__document.getElementById(table.tableid+DELIMITER+tbl+DELIMITER+mhv).style.display=none;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","27325a9b","clean up","2018-06-20T11:28:44Z","sortableTable.js","SortableTableLibrary","[{__row__:__627__,__code__:__            \t\t\t\t}    __},{__row__:__628__,__code__:__    __},{__row__:__629__,__code__:__\/\/ Fixed    __},{__row__:__630__,__code__:__amp;gt;0) {__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","be83861b","More delimiter updates","2018-07-05T15:34:37Z","sortableTable.js","SortableTableLibrary","[{__row__:__631__,__code__:__document.getElementById(table.tableid+DELIMITER+tbl+DELIMITER+mhf).style.display=table;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","27325a9b","clean up","2018-06-20T11:28:44Z","sortableTable.js","SortableTableLibrary","[{__row__:__632__,__code__:__            \t\t\t\t}    __},{__row__:__633__,__code__:__else {__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","be83861b","More delimiter updates","2018-07-05T15:34:37Z","sortableTable.js","SortableTableLibrary","[{__row__:__634__,__code__:__document.getElementById(table.tableid+DELIMITER+tbl+DELIMITER+mhf).style.display=none;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","27325a9b","clean up","2018-06-20T11:28:44Z","sortableTable.js","SortableTableLibrary","[{__row__:__635__,__code__:__            \t\t\t\t}__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","5857ae27","Update sortableTable.js","2018-10-24T11:18:04Z","sortableTable.js","SortableTableLibrary","[{__row__:__636__,__code__:__var srctbl=document.getElementById(table.tableid+DELIMITER+body).children;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","c7c92346","Improved magic headings","2018-10-25T06:21:59Z","sortableTable.js","SortableTableLibrary","[{__row__:__637__,__code__:__var desttbl=document.getElementById(table.tableid+DELIMITER+mhvbody).children;    __},{__row__:__638__,__code__:__amp;lt;srctbl.length;j++){    __},{__row__:__639__,__code__:__                        desttbl[j].style.height=srctbl[j].getBoundingClientRect().height+px;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","5857ae27","Update sortableTable.js","2018-10-24T11:18:04Z","sortableTable.js","SortableTableLibrary","[{__row__:__640__,__code__:__\t\t\t\t\t\t\t\t\t\t}    __},{__row__:__641__,__code__:__    __},{__row__:__642__,__code__:__\t\t\t\t\t\t\t\t}__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","27325a9b","clean up","2018-06-20T11:28:44Z","sortableTable.js","SortableTableLibrary","[{__row__:__643__,__code__:__        \t\t}    __},{__row__:__644__,__code__:__      \t}    __},{__row__:__645__,__code__:__    }__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","5857ae27","Update sortableTable.js","2018-10-24T11:18:04Z","sortableTable.js","SortableTableLibrary","[{__row__:__646__,__code__:__    __},{__row__:__647__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","27325a9b","clean up","2018-06-20T11:28:44Z","sortableTable.js","SortableTableLibrary","[{__row__:__648__,__code__:__this.updateCell=function() {    __},{__row__:__649__,__code__:__tbl.tblbody[sortableTable.edit_rowno][sortableTable.edit_columnname] =updateCellCallback(sortableTable.edit_rowno,null,sortableTable.edit_columnname,sortableTable.edit_tableid,null,sortableTable.edit_rowid);__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","ed5529f5","more readable","2019-01-11T16:04:11Z","sortableTable.js","SortableTableLibrary","[{__row__:__650__,__code__:__this.renderTable();__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","30378491","Merging students code","2018-05-29T09:19:54Z","sortableTable.js","SortableTableLibrary","[{__row__:__651__,__code__:__    }__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","9bbd38bb","CRLFLF and correcting sortorder","2018-06-08T22:07:48Z","sortableTable.js","SortableTableLibrary","[{__row__:__652__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","0bc89c12","Added an option to rearrange the columns, including an example","2018-06-20T11:43:40Z","sortableTable.js","SortableTableLibrary","[{__row__:__653__,__code__:__this.getColumnOrder=function(){    __},{__row__:__654__,__code__:__return columnOrder;    __},{__row__:__655__,__code__:__    }__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","9bbd38bb","CRLFLF and correcting sortorder","2018-06-08T22:07:48Z","sortableTable.js","SortableTableLibrary","[{__row__:__656__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","0bc89c12","Added an option to rearrange the columns, including an example","2018-06-20T11:43:40Z","sortableTable.js","SortableTableLibrary","[{__row__:__657__,__code__:__this.reorderColumns=function(newOrderList){            __},{__row__:__658__,__code__:__if(Array.isArray(newOrderList)){    __},{__row__:__659__,__code__:__            columnOrder=newOrderList;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","ed5529f5","more readable","2019-01-11T16:04:11Z","sortableTable.js","SortableTableLibrary","[{__row__:__660__,__code__:__this.renderTable();          __}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","0bc89c12","Added an option to rearrange the columns, including an example","2018-06-20T11:43:40Z","sortableTable.js","SortableTableLibrary","[{__row__:__661__,__code__:__        }__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","27325a9b","clean up","2018-06-20T11:28:44Z","sortableTable.js","SortableTableLibrary","[{__row__:__662__,__code__:__    }__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","f7d0b844","Added export feature","2018-11-09T16:59:57Z","sortableTable.js","SortableTableLibrary","[{__row__:__663__,__code__:__    __},{__row__:__664__,__code__:__this.export=function(format)    __},{__row__:__665__,__code__:__    {    __},{__row__:__666__,__code__:__var str=;    __},{__row__:__667__,__code__:__amp;lt;columnOrder.length;k++){    __},{__row__:__668__,__code__:__if(k!==0)str+=,;    __},{__row__:__669__,__code__:__            str+=exportColumnHeading(format,tbl.tblhead[columnOrder[k]],columnOrder[k]);    __},{__row__:__670__,__code__:__        }    __},{__row__:__671__,__code__:__        str+=n;            __},{__row__:__672__,__code__:__amp;lt;tbl.tblbody.length; i++) {    __},{__row__:__673__,__code__:__let row=tbl.tblbody[i];    __},{__row__:__674__,__code__:__amp;lt;columnOrder.length;k++){                    __},{__row__:__675__,__code__:__let colname=columnOrder[k];    __},{__row__:__676__,__code__:__if(k!==0)str+=,;    __},{__row__:__677__,__code__:__                str+=exportCell(format,row[colname],colname);    __},{__row__:__678__,__code__:__            }    __},{__row__:__679__,__code__:__            str+=n;    __},{__row__:__680__,__code__:__          }    __},{__row__:__681__,__code__:__return str;    __},{__row__:__682__,__code__:__    }__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","7c844f5f","Added simple pagination and pre/post render callbacks","2019-08-21T08:13:02Z","sortableTable.js","SortableTableLibrary","[{__row__:__683__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","6e242373","Nearly finished email function","2019-08-29T09:02:46Z","sortableTable.js","SortableTableLibrary","[{__row__:__684__,__code__:__\/\/ Mail input subject and body    __},{__row__:__685__,__code__:__this.mail=function(subjectline,bodytext) {    __},{__row__:__686__,__code__:__    __},{__row__:__687__,__code__:__if(emailColumn!=null){    __},{__row__:__688__,__code__:__var filteredUsernames =;    __},{__row__:__689__,__code__:__\/\/get usernames of the filtered rows    __},{__row__:__690__,__code__:__    __},{__row__:__691__,__code__:__amp;gt; [this.emailColumn] -- We check if emailColumn is set if not we do nothing    __},{__row__:__692__,__code__:__    __},{__row__:__693__,__code__:__amp;lt;filteredRows.length; i++){     __},{__row__:__694__,__code__:__if(typeof filteredRows[i][emailColumn] !=='undefined'){__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","a5dff894","Completed visible email functionality.","2019-08-29T10:04:19Z","sortableTable.js","SortableTableLibrary","[{__row__:__695__,__code__:__amp;gt;0) filteredUsernames+=;;    __},{__row__:__696__,__code__:__\t\t\t\t\t\t\t\tfilteredUsernames+=filteredRows[i][emailColumn];__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","6e242373","Nearly finished email function","2019-08-29T09:02:46Z","sortableTable.js","SortableTableLibrary","[{__row__:__697__,__code__:__\t\t\t\t\t\t\t}    __},{__row__:__698__,__code__:__\t\t\t\t\t}__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","a5dff894","Completed visible email functionality.","2019-08-29T10:04:19Z","sortableTable.js","SortableTableLibrary","[{__row__:__699__,__code__:__amp;body=+encodeURIComponent(bodytext);__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","6e242373","Nearly finished email function","2019-08-29T09:02:46Z","sortableTable.js","SortableTableLibrary","[{__row__:__700__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","a5dff894","Completed visible email functionality.","2019-08-29T10:04:19Z","sortableTable.js","SortableTableLibrary","[{__row__:__701__,__code__:__window.location.assign(mailto:?bcc=+filteredUsernames+data);__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","6e242373","Nearly finished email function","2019-08-29T09:02:46Z","sortableTable.js","SortableTableLibrary","[{__row__:__702__,__code__:__\t\t\t}    __},{__row__:__703__,__code__:__\t\t}    __},{__row__:__704__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","7c844f5f","Added simple pagination and pre/post render callbacks","2019-08-21T08:13:02Z","sortableTable.js","SortableTableLibrary","[{__row__:__705__,__code__:__this.renderPagination=function()    __},{__row__:__706__,__code__:__    {    __},{__row__:__707__,__code__:__amp;gt;0){    __},{__row__:__708__,__code__:__let str=;    __},{__row__:__709__,__code__:__let cls=;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","6e242373","Nearly finished email function","2019-08-29T09:02:46Z","sortableTable.js","SortableTableLibrary","[{__row__:__710__,__code__:__let pages=Math.ceil(filteredRows.length\/this.rowsPerPage)__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","a97marbr","7c844f5f","Added simple pagination and pre/post render callbacks","2019-08-21T08:13:02Z","sortableTable.js","SortableTableLibrary","[{__row__:__711__,__code__:__amp;lt;=pages;i++){    __},{__row__:__712__,__code__:__if(i===this.selectedPage){    __},{__row__:__713__,__code__:__                    cls=pagination-btn pagination-btn-selected;    __},{__row__:__714__,__code__:__                }else{    __},{__row__:__715__,__code__:__                    cls=pagination-btn;    __},{__row__:__716__,__code__:__                }    __},{__row__:__717__,__code__:__amp;gt;;    __},{__row__:__718__,__code__:__            }    __},{__row__:__719__,__code__:__if(document.getElementById(this.tableid+-number-of-pages)===null){    __},{__row__:__720__,__code__:__amp;gt;'+document.getElementById(this.tableid).outerHTML;    __},{__row__:__721__,__code__:__            }       __},{__row__:__722__,__code__:__if(document.getElementById(this.tableid+-number-of-pages-bottom)===null){    __},{__row__:__723__,__code__:__amp;gt;';    __},{__row__:__724__,__code__:__            }       __},{__row__:__725__,__code__:__    __},{__row__:__726__,__code__:__document.getElementById(this.tableid+-number-of-pages).innerHTML=str;    __},{__row__:__727__,__code__:__document.getElementById(this.tableid+-number-of-pages-bottom).innerHTML=str;    __},{__row__:__728__,__code__:__        }    __},{__row__:__729__,__code__:__    }    __},{__row__:__730__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("sortableTable.js","HGustavs","46176820","Readability of gnarly delimiter code","2018-10-23T21:31:47Z","sortableTable.js","SortableTableLibrary","[{__row__:__731__,__code__:__}__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","40f8698c","Create shaker.js","2015-04-27T09:09:46Z","shaker.js","shaker.js","[{__row__:__1__,__code__:__\/*    __},{__row__:__2__,__code__:__    __},{__row__:__3__,__code__:__                ----========############========----    __},{__row__:__4__,__code__:__                             Shaker.js     __},{__row__:__5__,__code__:__                ----========############========----    __},{__row__:__6__,__code__:__    __},{__row__:__7__,__code__:__Copyright:    __},{__row__:__8__,__code__:__    __},{__row__:__9__,__code__:__Henrik Gustavsson     __},{__row__:__10__,__code__:__henrik.gustavsson@his.se    __},{__row__:__11__,__code__:__    __},{__row__:__12__,__code__:__Marcus Brohede    __},{__row__:__13__,__code__:__marcus.brohede@his.se    __},{__row__:__14__,__code__:__    __},{__row__:__15__,__code__:__Inspired By    __},{__row__:__16__,__code__:__---------------------------------    __},{__row__:__17__,__code__:__amp;gt;    __},{__row__:__18__,__code__:__\t\t\t\t\tshake.js http:\/\/alxgbsn.co.uk\/ by Alex Gibson    __},{__row__:__19__,__code__:__\t\t\t\t\thammer.js http:\/\/eightmedia.github.io\/hammer.js    __},{__row__:__20__,__code__:__\t\t\t\t\thtml5rocks A Simple Trip Meter using the Geolocation API by Michael Mahemoff     __},{__row__:__21__,__code__:__\t\t\t\t\tMoveable Type Scripts - http:\/\/www.movable-type.co.uk\/scripts\/latlong.html    __},{__row__:__22__,__code__:__    __},{__row__:__23__,__code__:__Events supported    __},{__row__:__24__,__code__:__------------------    __},{__row__:__25__,__code__:__          shake          (Device Shake)    __},{__row__:__26__,__code__:__             shakeX    __},{__row__:__27__,__code__:__             shakeY    __},{__row__:__28__,__code__:__             shakeZ    __},{__row__:__29__,__code__:__          step           (Device Jolt i.e. Accelerometer Change)    __},{__row__:__30__,__code__:__             stepX    __},{__row__:__31__,__code__:__             stepY    __},{__row__:__32__,__code__:__             stepZ    __},{__row__:__33__,__code__:__          orient         (Device Orientation change)    __},{__row__:__34__,__code__:__          reorient       (Device Reorientation)    __},{__row__:__35__,__code__:__             reorientX    __},{__row__:__36__,__code__:__             reorientY    __},{__row__:__37__,__code__:__             reorientZ    __},{__row__:__38__,__code__:__    __},{__row__:__39__,__code__:__Properties supported    __},{__row__:__40__,__code__:__----------------------    __},{__row__:__41__,__code__:__          steptreshold      (jolt sensitivity treshold)    __},{__row__:__42__,__code__:__          stepinterval      (jolt timing interval)    __},{__row__:__43__,__code__:__          shaketreshold     (shake sensitivity treshold)    __},{__row__:__44__,__code__:__          shakeinterval     (shake timing interval)    __},{__row__:__45__,__code__:__    __},{__row__:__46__,__code__:__          orienttreshold    (orientation sensitivity treshold)    __},{__row__:__47__,__code__:__          shakelength       (time before forgetting shake)    __},{__row__:__48__,__code__:__    __},{__row__:__49__,__code__:__How to use    __},{__row__:__50__,__code__:__-----------------------    __},{__row__:__51__,__code__:__    __},{__row__:__52__,__code__:__amp;gt;    __},{__row__:__53__,__code__:__    __},{__row__:__54__,__code__:__amp;gt;    __},{__row__:__55__,__code__:__  shaker.startTracking(function(o) {    __},{__row__:__56__,__code__:__    \/\/ o.x, o.y, o.z for accelerometer    __},{__row__:__57__,__code__:__    \/\/ o.alpha, o.beta, o.gamma for gyro    __},{__row__:__58__,__code__:__  });    __},{__row__:__59__,__code__:__amp;gt;    __},{__row__:__60__,__code__:__    __},{__row__:__61__,__code__:__    __},{__row__:__62__,__code__:__Fixed Bugs:    __},{__row__:__63__,__code__:__-----------------------    __},{__row__:__64__,__code__:__* Shake detection does not work if step events are not defined. This now works by enabling step if we enable shake.    __},{__row__:__65__,__code__:__* Too many events too often - only define new events if variable is null    __},{__row__:__66__,__code__:__* Step counts not updated if no callback was defined.    __},{__row__:__67__,__code__:__    __},{__row__:__68__,__code__:__    __},{__row__:__69__,__code__:__-------------------------------------------------------------------------------------------    __},{__row__:__70__,__code__:__The MIT License (MIT)    __},{__row__:__71__,__code__:__-------------------------------------------------------------------------------------------    __},{__row__:__72__,__code__:__    __},{__row__:__73__,__code__:__Copyright (c) 2014 Henrik Gustavsson    __},{__row__:__74__,__code__:__    __},{__row__:__75__,__code__:__Permission is hereby granted, free of charge, to any person obtaining a copy    __},{__row__:__76__,__code__:__of this software and associated documentation files (the Software), to deal    __},{__row__:__77__,__code__:__in the Software without restriction, including without limitation the rights    __},{__row__:__78__,__code__:__to use, copy, modify, merge, publish, distribute, sublicense, and\/or sell    __},{__row__:__79__,__code__:__copies of the Software, and to permit persons to whom the Software is    __},{__row__:__80__,__code__:__furnished to do so, subject to the following conditions:    __},{__row__:__81__,__code__:__    __},{__row__:__82__,__code__:__The above copyright notice and this permission notice shall be included in    __},{__row__:__83__,__code__:__all copies or substantial portions of the Software.    __},{__row__:__84__,__code__:__    __},{__row__:__85__,__code__:__THE SOFTWARE IS PROVIDED AS IS, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR    __},{__row__:__86__,__code__:__IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,    __},{__row__:__87__,__code__:__FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE    __},{__row__:__88__,__code__:__AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER    __},{__row__:__89__,__code__:__LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,    __},{__row__:__90__,__code__:__OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN    __},{__row__:__91__,__code__:__THE SOFTWARE.    __},{__row__:__92__,__code__:__    __},{__row__:__93__,__code__:__*\/    __},{__row__:__94__,__code__:__    __},{__row__:__95__,__code__:__\/\/ We base our code on the window,document Self-Executing Anonymous Function pattern    __},{__row__:__96__,__code__:__    __},{__row__:__97__,__code__:__    __},{__row__:__98__,__code__:__(function (window, document) {    __},{__row__:__99__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","a97marbr","9fc72018","Shows a button that if pressed enables motion sensor and orientation ","2020-03-03T07:13:04Z","shaker.js","shaker.js","[{__row__:__100__,__code__:__var measurements = {    __},{__row__:__101__,__code__:__\/\/ Basics    __},{__row__:__102__,__code__:__            x:null,    __},{__row__:__103__,__code__:__            y:null,    __},{__row__:__104__,__code__:__            z:null,    __},{__row__:__105__,__code__:__            alpha:null,    __},{__row__:__106__,__code__:__            beta:null,__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","40f8698c","Create shaker.js","2015-04-27T09:09:46Z","shaker.js","shaker.js","[{__row__:__107__,__code__:__\t\t\t\tgamma:null,    __},{__row__:__108__,__code__:__    __},{__row__:__109__,__code__:__\/\/ Navigation    __},{__row__:__110__,__code__:__\t\t\t\tcumulativedist:null,    __},{__row__:__111__,__code__:__\t\t\t\tstartdist:null,    __},{__row__:__112__,__code__:__\t\t\t\tkmh :null,    __},{__row__:__113__,__code__:__\t\t\t\tkmhtot :null,    __},{__row__:__114__,__code__:__\t\t\t\ttimetot :null,    __},{__row__:__115__,__code__:__    __},{__row__:__116__,__code__:__\/\/ Positioning    __},{__row__:__117__,__code__:__\t\t\t\tlatitude:null,    __},{__row__:__118__,__code__:__\t\t\t\tlongitude:null,    __},{__row__:__119__,__code__:__\t\t\t\tpositioncount:null,    __},{__row__:__120__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","53253c82","Orientation events update. Car Example added.","2015-04-27T18:45:05Z","shaker.js","shaker.js","[{__row__:__121__,__code__:__\/\/ Shake Deltas__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","40f8698c","Create shaker.js","2015-04-27T09:09:46Z","shaker.js","shaker.js","[{__row__:__122__,__code__:__\t\t\t\tdx:null,    __},{__row__:__123__,__code__:__\t\t\t\tdy:null,    __},{__row__:__124__,__code__:__\t\t\t\tdz:null,__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","72db4a67","Updated example with tilt Events","2015-04-27T10:42:05Z","shaker.js","shaker.js","[{__row__:__125__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","53253c82","Orientation events update. Car Example added.","2015-04-27T18:45:05Z","shaker.js","shaker.js","[{__row__:__126__,__code__:__\/\/ Orientation Deltas__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","72db4a67","Updated example with tilt Events","2015-04-27T10:42:05Z","shaker.js","shaker.js","[{__row__:__127__,__code__:__\t\t\t\tda:null,    __},{__row__:__128__,__code__:__\t\t\t\tdb:null,    __},{__row__:__129__,__code__:__\t\t\t\tdg:null,__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","40f8698c","Create shaker.js","2015-04-27T09:09:46Z","shaker.js","shaker.js","[{__row__:__130__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","53253c82","Orientation events update. Car Example added.","2015-04-27T18:45:05Z","shaker.js","shaker.js","[{__row__:__131__,__code__:__\/\/ Orientation Accumilated    __},{__row__:__132__,__code__:__\t\t\t\toaccA:0,    __},{__row__:__133__,__code__:__\t\t\t\toaccB:0,__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","eb1225f5","shaker fix and ball example.","2015-04-27T19:40:57Z","shaker.js","shaker.js","[{__row__:__134__,__code__:__\t\t\t\toaccG:0,\t\t\t__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","53253c82","Orientation events update. Car Example added.","2015-04-27T18:45:05Z","shaker.js","shaker.js","[{__row__:__135__,__code__:__    __},{__row__:__136__,__code__:__\/\/ Shake Data__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","40f8698c","Create shaker.js","2015-04-27T09:09:46Z","shaker.js","shaker.js","[{__row__:__137__,__code__:__\t\t\t\tshakes:null,    __},{__row__:__138__,__code__:__\t\t\t\tshakesX:null,    __},{__row__:__139__,__code__:__\t\t\t\tshakesY:null,    __},{__row__:__140__,__code__:__\t\t\t\tshakesZ:null,    __},{__row__:__141__,__code__:__    __},{__row__:__142__,__code__:__\t\t\t\tshakecnt:null,    __},{__row__:__143__,__code__:__\t\t\t\tshakeXcnt:null,    __},{__row__:__144__,__code__:__\t\t\t\tshakeYcnt:null,__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","38e9a53b","Bug fixes and Orientation Event Support","2015-05-01T22:07:20Z","shaker.js","shaker.js","[{__row__:__145__,__code__:__\t\t\t\tshakeZcnt:null,    __},{__row__:__146__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","40f8698c","Create shaker.js","2015-04-27T09:09:46Z","shaker.js","shaker.js","[{__row__:__147__,__code__:__\t\t\t},    __},{__row__:__148__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","a97marbr","9fc72018","Shows a button that if pressed enables motion sensor and orientation ","2020-03-03T07:13:04Z","shaker.js","shaker.js","[{__row__:__149__,__code__:__        lastmeasure = {    __},{__row__:__150__,__code__:__            x:0,__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","40f8698c","Create shaker.js","2015-04-27T09:09:46Z","shaker.js","shaker.js","[{__row__:__151__,__code__:__\t\t\t\ty:0,    __},{__row__:__152__,__code__:__\t\t\t\tz:0,    __},{__row__:__153__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","72db4a67","Updated example with tilt Events","2015-04-27T10:42:05Z","shaker.js","shaker.js","[{__row__:__154__,__code__:__\t\t\t\talpha:0,    __},{__row__:__155__,__code__:__\t\t\t\tbeta:0,    __},{__row__:__156__,__code__:__\t\t\t\tgamma:0,    __},{__row__:__157__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","40f8698c","Create shaker.js","2015-04-27T09:09:46Z","shaker.js","shaker.js","[{__row__:__158__,__code__:__\t\t\t\tshaked:0,    __},{__row__:__159__,__code__:__\t\t\t\tshakedX:0,    __},{__row__:__160__,__code__:__\t\t\t\tshakedY:0,    __},{__row__:__161__,__code__:__\t\t\t\tshakedZ:0,    __},{__row__:__162__,__code__:__    __},{__row__:__163__,__code__:__\t\t\t\tshakedstart:0,    __},{__row__:__164__,__code__:__\t\t\t\tshakedXstart:0,    __},{__row__:__165__,__code__:__\t\t\t\tshakedYstart:0,    __},{__row__:__166__,__code__:__\t\t\t\tshakedZstart:0,    __},{__row__:__167__,__code__:__    __},{__row__:__168__,__code__:__\t\t\t\tshakecnt:0,    __},{__row__:__169__,__code__:__\t\t\t\tshakeXcnt:0,    __},{__row__:__170__,__code__:__\t\t\t\tshakeYcnt:0,    __},{__row__:__171__,__code__:__\t\t\t\tshakeZcnt:0,    __},{__row__:__172__,__code__:__\t\t\t\tisShaking:0,    __},{__row__:__173__,__code__:__    __},{__row__:__174__,__code__:__\t\t\t\tcumulativedist:null    __},{__row__:__175__,__code__:__\t\t};    __},{__row__:__176__,__code__:__    __},{__row__:__177__,__code__:__var navigated=false;    __},{__row__:__178__,__code__:__    __},{__row__:__179__,__code__:__var doprintout=true;    __},{__row__:__180__,__code__:__    __},{__row__:__181__,__code__:__\/\/ Distance from startingpoint, cumulative distance, and last time    __},{__row__:__182__,__code__:__var startPos =null;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","a97marbr","9fc72018","Shows a button that if pressed enables motion sensor and orientation ","2020-03-03T07:13:04Z","shaker.js","shaker.js","[{__row__:__183__,__code__:__var lastPos =null;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","40f8698c","Create shaker.js","2015-04-27T09:09:46Z","shaker.js","shaker.js","[{__row__:__184__,__code__:__    __},{__row__:__185__,__code__:__var lastTime =null;    __},{__row__:__186__,__code__:__    __},{__row__:__187__,__code__:__var\tshakeinterval =null;    __},{__row__:__188__,__code__:__var geointerval =null;    __},{__row__:__189__,__code__:__var stepinterval =null;    __},{__row__:__190__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","a97marbr","9fc72018","Shows a button that if pressed enables motion sensor and orientation ","2020-03-03T07:13:04Z","shaker.js","shaker.js","[{__row__:__191__,__code__:__var shakecallback =null;    __},{__row__:__192__,__code__:__var shakecallbackX =null;    __},{__row__:__193__,__code__:__var shakecallbackY =null;    __},{__row__:__194__,__code__:__var shakecallbackZ =null;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","40f8698c","Create shaker.js","2015-04-27T09:09:46Z","shaker.js","shaker.js","[{__row__:__195__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","a97marbr","9fc72018","Shows a button that if pressed enables motion sensor and orientation ","2020-03-03T07:13:04Z","shaker.js","shaker.js","[{__row__:__196__,__code__:__var stepcallback =null;    __},{__row__:__197__,__code__:__var stepcallbackX =null;    __},{__row__:__198__,__code__:__var stepcallbackY =null;    __},{__row__:__199__,__code__:__var stepcallbackZ =null;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","5af7cc6d","Orientation and example bug fixes.","2015-04-27T21:04:37Z","shaker.js","shaker.js","[{__row__:__200__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","a97marbr","9fc72018","Shows a button that if pressed enables motion sensor and orientation ","2020-03-03T07:13:04Z","shaker.js","shaker.js","[{__row__:__201__,__code__:__var tiltcallback =null;    __},{__row__:__202__,__code__:__var tiltcallbackA =null;    __},{__row__:__203__,__code__:__var tiltcallbackB =null;    __},{__row__:__204__,__code__:__var tiltcallbackG =null;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","38e9a53b","Bug fixes and Orientation Event Support","2015-05-01T22:07:20Z","shaker.js","shaker.js","[{__row__:__205__,__code__:__    __},{__row__:__206__,__code__:__var statecallback =null;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","40f8698c","Create shaker.js","2015-04-27T09:09:46Z","shaker.js","shaker.js","[{__row__:__207__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","38e9a53b","Bug fixes and Orientation Event Support","2015-05-01T22:07:20Z","shaker.js","shaker.js","[{__row__:__208__,__code__:__var\toldstate =;    __},{__row__:__209__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","40f8698c","Create shaker.js","2015-04-27T09:09:46Z","shaker.js","shaker.js","[{__row__:__210__,__code__:__window.shaker={}    __},{__row__:__211__,__code__:__    __},{__row__:__212__,__code__:__shaker.shaketreshold=4;    __},{__row__:__213__,__code__:__shaker.stepfrequency=500; __}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","a97marbr","9fc72018","Shows a button that if pressed enables motion sensor and orientation ","2020-03-03T07:13:04Z","shaker.js","shaker.js","[{__row__:__214__,__code__:__shaker.shakefrequency=1500;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","40f8698c","Create shaker.js","2015-04-27T09:09:46Z","shaker.js","shaker.js","[{__row__:__215__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","a97marbr","9fc72018","Shows a button that if pressed enables motion sensor and orientation ","2020-03-03T07:13:04Z","shaker.js","shaker.js","[{__row__:__216__,__code__:__shaker.hasGeoLocation=false;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","40f8698c","Create shaker.js","2015-04-27T09:09:46Z","shaker.js","shaker.js","[{__row__:__217__,__code__:__shaker.geolocationcallback=null;    __},{__row__:__218__,__code__:__shaker.geofrequency=30000;\t\t\t\t    __},{__row__:__219__,__code__:__    __},{__row__:__220__,__code__:__shaker.on=function(eventkind,callback)    __},{__row__:__221__,__code__:__\t\t{    __},{__row__:__222__,__code__:__if(eventkind==shake){    __},{__row__:__223__,__code__:__\t\t\t\t\t\tshakecallback=callback;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","5af7cc6d","Orientation and example bug fixes.","2015-04-27T21:04:37Z","shaker.js","shaker.js","[{__row__:__224__,__code__:__\t\t\t\t}elseif(eventkind==tilt){    __},{__row__:__225__,__code__:__\t\t\t\t\t\ttiltcallback=callback;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","38e9a53b","Bug fixes and Orientation Event Support","2015-05-01T22:07:20Z","shaker.js","shaker.js","[{__row__:__226__,__code__:__\t\t\t\t}elseif(eventkind==state){    __},{__row__:__227__,__code__:__\t\t\t\t\t\tstatecallback=callback;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","72db4a67","Updated example with tilt Events","2015-04-27T10:42:05Z","shaker.js","shaker.js","[{__row__:__228__,__code__:__\t\t\t\t}elseif(eventkind==tiltA){    __},{__row__:__229__,__code__:__\t\t\t\t\t\ttiltcallbackA=callback;    __},{__row__:__230__,__code__:__\t\t\t\t}elseif(eventkind==tiltB){    __},{__row__:__231__,__code__:__\t\t\t\t\t\ttiltcallbackB=callback;    __},{__row__:__232__,__code__:__\t\t\t\t}elseif(eventkind==tiltG){    __},{__row__:__233__,__code__:__\t\t\t\t\t\ttiltcallbackG=callback;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","40f8698c","Create shaker.js","2015-04-27T09:09:46Z","shaker.js","shaker.js","[{__row__:__234__,__code__:__\t\t\t\t}elseif(eventkind==shakeX){    __},{__row__:__235__,__code__:__\t\t\t\t\t\tshakecallbackX=callback;    __},{__row__:__236__,__code__:__\t\t\t\t}elseif(eventkind==shakeY){    __},{__row__:__237__,__code__:__\t\t\t\t\t\tshakecallbackY=callback;    __},{__row__:__238__,__code__:__\t\t\t\t}elseif(eventkind==shakeZ){    __},{__row__:__239__,__code__:__\t\t\t\t\t\tshakecallbackZ=callback;    __},{__row__:__240__,__code__:__\t\t\t\t}elseif(eventkind==step){    __},{__row__:__241__,__code__:__\t\t\t\t\t\tstepcallback=callback;    __},{__row__:__242__,__code__:__\t\t\t\t}elseif(eventkind==stepX){    __},{__row__:__243__,__code__:__\t\t\t\t\t\tstepcallbackX=callback;    __},{__row__:__244__,__code__:__\t\t\t\t}elseif(eventkind==stepY){    __},{__row__:__245__,__code__:__\t\t\t\t\t\tstepcallbackY=callback;    __},{__row__:__246__,__code__:__\t\t\t\t}elseif(eventkind==stepZ){    __},{__row__:__247__,__code__:__\t\t\t\t\t\tstepcallbackZ=callback;    __},{__row__:__248__,__code__:__\t\t\t\t}elseif(eventkind==geolocation){    __},{__row__:__249__,__code__:__\t\t\t\t\t\tgeolocationcallback=callback;    __},{__row__:__250__,__code__:__\t\t\t\t\t\tgeointerval =setInterval(function() { evalgeo(); }, shaker.geofrequency);    __},{__row__:__251__,__code__:__\t\t\t\t}else{    __},{__row__:__252__,__code__:__alert('Unknown Shaker Event: '+eventkind);    __},{__row__:__253__,__code__:__\t\t\t\t}    __},{__row__:__254__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","38e9a53b","Bug fixes and Orientation Event Support","2015-05-01T22:07:20Z","shaker.js","shaker.js","[{__row__:__255__,__code__:__if(eventkind==state||eventkind==step||eventkind==tilt||eventkind==stepX||eventkind==stepY||eventkind==stepZ||eventkind==shake||eventkind==shakeX||eventkind==shakeY||eventkind==shakeZ||eventkind==tiltA||eventkind==tiltB||eventkind==tiltG){__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","40f8698c","Create shaker.js","2015-04-27T09:09:46Z","shaker.js","shaker.js","[{__row__:__256__,__code__:__if(stepinterval==null){    __},{__row__:__257__,__code__:__\t\t\t\t\t\t\t\tstepinterval =setInterval(function() { evalstep(); }, shaker.stepfrequency);    __},{__row__:__258__,__code__:__shaker.shakecnt=0;    __},{__row__:__259__,__code__:__shaker.shakecntX=0;    __},{__row__:__260__,__code__:__shaker.shakecntY=0;    __},{__row__:__261__,__code__:__shaker.shakecntZ=0;\t\t\t\t\t\t    __},{__row__:__262__,__code__:__\t\t\t\t\t\t}    __},{__row__:__263__,__code__:__\t\t\t\t}    __},{__row__:__264__,__code__:__if(eventkind==shake||eventkind==shakeX||eventkind==shakeY||eventkind==shakeZ){    __},{__row__:__265__,__code__:__if(shakeinterval==null){    __},{__row__:__266__,__code__:__\t\t\t\t\t\t\t\tshakeinterval =setInterval(function() { evalshake(); }, shaker.shakefrequency);    __},{__row__:__267__,__code__:__\t\t\t\t\t\t}    __},{__row__:__268__,__code__:__\t\t\t\t}    __},{__row__:__269__,__code__:__    __},{__row__:__270__,__code__:__\t\t}    __},{__row__:__271__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","53253c82","Orientation events update. Car Example added.","2015-04-27T18:45:05Z","shaker.js","shaker.js","[{__row__:__272__,__code__:__shaker.calibrateOrientation=function() {    __},{__row__:__273__,__code__:__measurements.oaccA=0;    __},{__row__:__274__,__code__:__measurements.oaccB=0;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","eb1225f5","shaker fix and ball example.","2015-04-27T19:40:57Z","shaker.js","shaker.js","[{__row__:__275__,__code__:__measurements.oaccG=0;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","53253c82","Orientation events update. Car Example added.","2015-04-27T18:45:05Z","shaker.js","shaker.js","[{__row__:__276__,__code__:__\t\t};    __},{__row__:__277__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","40f8698c","Create shaker.js","2015-04-27T09:09:46Z","shaker.js","shaker.js","[{__row__:__278__,__code__:__shaker.getOrientation=function() {    __},{__row__:__279__,__code__:__return measurements;    __},{__row__:__280__,__code__:__\t\t};    __},{__row__:__281__,__code__:__    __},{__row__:__282__,__code__:__shaker.stopTracking=function() {    __},{__row__:__283__,__code__:__if(shakeinterval!=null) clearInterval(shakeinterval);    __},{__row__:__284__,__code__:__if(stepinterval!=null) clearInterval(stepinterval);    __},{__row__:__285__,__code__:__if(geointerval!=null) clearInterval(geointerval);    __},{__row__:__286__,__code__:__\t\t};    __},{__row__:__287__,__code__:__    __},{__row__:__288__,__code__:__shaker.startGeolocation=function()    __},{__row__:__289__,__code__:__\t\t{    __},{__row__:__290__,__code__:__if (navigator.geolocation) {\t\t\t\t\t    __},{__row__:__291__,__code__:__    __},{__row__:__292__,__code__:__navigator.geolocation.getCurrentPosition(    __},{__row__:__293__,__code__:__function(pos){    __},{__row__:__294__,__code__:__\/\/ Geolocation - startPos == start position lastPos == last cumulative measurement    __},{__row__:__295__,__code__:__\t\t\t\t\t      startPos = pos;    __},{__row__:__296__,__code__:__\t\t\t\t\t      lastPos = pos;    __},{__row__:__297__,__code__:__measurements.cumulativedist=0;    __},{__row__:__298__,__code__:__\t\t\t\t\t\t\t\tlastTime =newDate().getTime();    __},{__row__:__299__,__code__:__shaker.hasGeoLocation=true;    __},{__row__:__300__,__code__:__measurements.positioncount=0;    __},{__row__:__301__,__code__:__measurements.timetot=0;    __},{__row__:__302__,__code__:__    __},{__row__:__303__,__code__:__if(doprintout) document.getElementById(printout).innerHTML+=Start Position!+pos.coords.latitude++pos.coords.longitude+n;    __},{__row__:__304__,__code__:__\t\t\t\t\t    }, function(error) {    __},{__row__:__305__,__code__:__shaker.hasGeoLocation=false;    __},{__row__:__306__,__code__:__if(doprintout) document.getElementById(printout).innerHTML+=Position Error!+error.code+n;    __},{__row__:__307__,__code__:__\t\t\t\t\t    });    __},{__row__:__308__,__code__:__    __},{__row__:__309__,__code__:__functionerror(err) {__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","a97marbr","9fc72018","Shows a button that if pressed enables motion sensor and orientation ","2020-03-03T07:13:04Z","shaker.js","shaker.js","[{__row__:__310__,__code__:__console.warn('ERROR('+err.code+'): '+err.message);    __},{__row__:__311__,__code__:__            };__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","40f8698c","Create shaker.js","2015-04-27T09:09:46Z","shaker.js","shaker.js","[{__row__:__312__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","a97marbr","9fc72018","Shows a button that if pressed enables motion sensor and orientation ","2020-03-03T07:13:04Z","shaker.js","shaker.js","[{__row__:__313__,__code__:__            options = {    __},{__row__:__314__,__code__:__                enableHighAccuracy:false,    __},{__row__:__315__,__code__:__                timeout:8000,    __},{__row__:__316__,__code__:__                maximumAge:0    __},{__row__:__317__,__code__:__            };__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","40f8698c","Create shaker.js","2015-04-27T09:09:46Z","shaker.js","shaker.js","[{__row__:__318__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","a97marbr","9fc72018","Shows a button that if pressed enables motion sensor and orientation ","2020-03-03T07:13:04Z","shaker.js","shaker.js","[{__row__:__319__,__code__:__navigator.geolocation.watchPosition(successNavigation, error, options);__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","40f8698c","Create shaker.js","2015-04-27T09:09:46Z","shaker.js","shaker.js","[{__row__:__320__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","a97marbr","9fc72018","Shows a button that if pressed enables motion sensor and orientation ","2020-03-03T07:13:04Z","shaker.js","shaker.js","[{__row__:__321__,__code__:__        }    __},{__row__:__322__,__code__:__    }    __},{__row__:__323__,__code__:__    __},{__row__:__324__,__code__:__functionrequestSensors() {    __},{__row__:__325__,__code__:__amp;typeof (DeviceMotionEvent.requestPermission) ==='function') {    __},{__row__:__326__,__code__:__    __},{__row__:__327__,__code__:__DeviceMotionEvent.requestPermission()    __},{__row__:__328__,__code__:__amp;gt; {    __},{__row__:__329__,__code__:__alert('Orientation tracking '+ response);    __},{__row__:__330__,__code__:__    __},{__row__:__331__,__code__:__if (response =='granted') {__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","a97marbr","12bdcde6","Bug fix and a more obtrusive turn on sensors button","2020-03-03T15:02:42Z","shaker.js","shaker.js","[{__row__:__332__,__code__:__document.getElementById('request-sensors-container').style.display='none';    __},{__row__:__333__,__code__:__amp;gt; {__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","a97marbr","9fc72018","Shows a button that if pressed enables motion sensor and orientation ","2020-03-03T07:13:04Z","shaker.js","shaker.js","[{__row__:__334__,__code__:__window.addEventListener('devicemotion', function (e) {    __},{__row__:__335__,__code__:__measurements.x=e.accelerationIncludingGravity.x;    __},{__row__:__336__,__code__:__measurements.y=e.accelerationIncludingGravity.y;    __},{__row__:__337__,__code__:__measurements.z=e.accelerationIncludingGravity.z;    __},{__row__:__338__,__code__:__    __},{__row__:__339__,__code__:__if (measurements.shakecnt==null) {    __},{__row__:__340__,__code__:__measurements.shakecnt=0;    __},{__row__:__341__,__code__:__measurements.shakeXcnt=0;    __},{__row__:__342__,__code__:__measurements.shakeYcnt=0;    __},{__row__:__343__,__code__:__measurements.shakeZcnt=0;    __},{__row__:__344__,__code__:__                                }    __},{__row__:__345__,__code__:__    __},{__row__:__346__,__code__:__                            }, true);    __},{__row__:__347__,__code__:__                        })    __},{__row__:__348__,__code__:__                    }    __},{__row__:__349__,__code__:__                })    __},{__row__:__350__,__code__:__                .catch(console.error)    __},{__row__:__351__,__code__:__        } else {    __},{__row__:__352__,__code__:__alert('DeviceMotionEvent is not defined');    __},{__row__:__353__,__code__:__        }    __},{__row__:__354__,__code__:__    __},{__row__:__355__,__code__:__if (typeofDeviceOrientationEvent.requestPermission==='function') {__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","a97marbr","12bdcde6","Bug fix and a more obtrusive turn on sensors button","2020-03-03T15:02:42Z","shaker.js","shaker.js","[{__row__:__356__,__code__:__amp;gt; {__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","a97marbr","9fc72018","Shows a button that if pressed enables motion sensor and orientation ","2020-03-03T07:13:04Z","shaker.js","shaker.js","[{__row__:__357__,__code__:__if (permissionState ==='granted') {__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","a97marbr","12bdcde6","Bug fix and a more obtrusive turn on sensors button","2020-03-03T15:02:42Z","shaker.js","shaker.js","[{__row__:__358__,__code__:__document.getElementById('request-sensors-container').style.display='none';    __},{__row__:__359__,__code__:__window.addEventListener('deviceorientation', function (e) {__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","a97marbr","9fc72018","Shows a button that if pressed enables motion sensor and orientation ","2020-03-03T07:13:04Z","shaker.js","shaker.js","[{__row__:__360__,__code__:__measurements.alpha=e.alpha;    __},{__row__:__361__,__code__:__measurements.beta=e.beta;    __},{__row__:__362__,__code__:__measurements.gamma=e.gamma;    __},{__row__:__363__,__code__:__                    }, true);    __},{__row__:__364__,__code__:__                }    __},{__row__:__365__,__code__:__            });    __},{__row__:__366__,__code__:__        }            __},{__row__:__367__,__code__:__    }    __},{__row__:__368__,__code__:__    __},{__row__:__369__,__code__:__amp;window.addEventListener) {    __},{__row__:__370__,__code__:__    __},{__row__:__371__,__code__:__amp; doprintout) document.getElementById(printout).innerHTML+=Listeners Setup!;    __},{__row__:__372__,__code__:__    __},{__row__:__373__,__code__:__\/\/ These listeners update the internal on-demand variables in Shaker    __},{__row__:__374__,__code__:__    __},{__row__:__375__,__code__:__functionsetupListeners() {__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","a97marbr","12bdcde6","Bug fix and a more obtrusive turn on sensors button","2020-03-03T15:02:42Z","shaker.js","shaker.js","[{__row__:__376__,__code__:__\/*__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","a97marbr","9fc72018","Shows a button that if pressed enables motion sensor and orientation ","2020-03-03T07:13:04Z","shaker.js","shaker.js","[{__row__:__377__,__code__:__            if (typeof DeviceMotionEvent.requestPermission === 'function') {    __},{__row__:__378__,__code__:__amp;gt; {    __},{__row__:__379__,__code__:__                    if (permissionState === 'granted') {    __},{__row__:__380__,__code__:__\t\t\t\t\t\t\t\t\t\t\t\tdocument.getElementById(request-sensors-btn).style.display=none;    __},{__row__:__381__,__code__:__                        window.addEventListener('devicemotion', function (e) {    __},{__row__:__382__,__code__:__                            measurements.x = e.accelerationIncludingGravity.x;    __},{__row__:__383__,__code__:__                            measurements.y = e.accelerationIncludingGravity.y;    __},{__row__:__384__,__code__:__                            measurements.z = e.accelerationIncludingGravity.z;    __},{__row__:__385__,__code__:__    __},{__row__:__386__,__code__:__                            if (measurements.shakecnt == null) {    __},{__row__:__387__,__code__:__                                measurements.shakecnt = 0;    __},{__row__:__388__,__code__:__                                measurements.shakeXcnt = 0;    __},{__row__:__389__,__code__:__                                measurements.shakeYcnt = 0;    __},{__row__:__390__,__code__:__                                measurements.shakeZcnt = 0;    __},{__row__:__391__,__code__:__                            }    __},{__row__:__392__,__code__:__    __},{__row__:__393__,__code__:__                        }, true);    __},{__row__:__394__,__code__:__                    }    __},{__row__:__395__,__code__:__                });    __},{__row__:__396__,__code__:__                if (typeof DeviceOrientationEvent.requestPermission === 'function') {    __},{__row__:__397__,__code__:__amp;gt; {    __},{__row__:__398__,__code__:__                        if (permissionState === 'granted') {    __},{__row__:__399__,__code__:__\t\t\t\t\t\t\t\t\t\t\t\t\t\tdocument.getElementById(request-sensors-btn).style.display=none;    __},{__row__:__400__,__code__:__                            window.addEventListener('deviceorientation', function (e) {    __},{__row__:__401__,__code__:__                                measurements.alpha = e.alpha;    __},{__row__:__402__,__code__:__                                measurements.beta = e.beta;    __},{__row__:__403__,__code__:__                                measurements.gamma = e.gamma;    __},{__row__:__404__,__code__:__                            }, true);    __},{__row__:__405__,__code__:__                        }    __},{__row__:__406__,__code__:__                    });    __},{__row__:__407__,__code__:__                }    __},{__row__:__408__,__code__:__            } else {__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","a97marbr","12bdcde6","Bug fix and a more obtrusive turn on sensors button","2020-03-03T15:02:42Z","shaker.js","shaker.js","[{__row__:__409__,__code__:__*\/__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","a97marbr","9fc72018","Shows a button that if pressed enables motion sensor and orientation ","2020-03-03T07:13:04Z","shaker.js","shaker.js","[{__row__:__410__,__code__:__window.addEventListener('MozOrientation', function (e) {    __},{__row__:__411__,__code__:__measurements.x=e.x;    __},{__row__:__412__,__code__:__measurements.y=e.y;    __},{__row__:__413__,__code__:__measurements.z=e.z;    __},{__row__:__414__,__code__:__                }, true);    __},{__row__:__415__,__code__:__window.addEventListener('devicemotion', function (e) {    __},{__row__:__416__,__code__:__measurements.x=e.accelerationIncludingGravity.x;    __},{__row__:__417__,__code__:__measurements.y=e.accelerationIncludingGravity.y;    __},{__row__:__418__,__code__:__measurements.z=e.accelerationIncludingGravity.z;    __},{__row__:__419__,__code__:__    __},{__row__:__420__,__code__:__if (measurements.shakecnt==null) {    __},{__row__:__421__,__code__:__measurements.shakecnt=0;    __},{__row__:__422__,__code__:__measurements.shakeXcnt=0;    __},{__row__:__423__,__code__:__measurements.shakeYcnt=0;    __},{__row__:__424__,__code__:__measurements.shakeZcnt=0;    __},{__row__:__425__,__code__:__                    }    __},{__row__:__426__,__code__:__    __},{__row__:__427__,__code__:__                }, true);    __},{__row__:__428__,__code__:__window.addEventListener('deviceorientation', function (e) {    __},{__row__:__429__,__code__:__measurements.alpha=e.alpha;    __},{__row__:__430__,__code__:__measurements.beta=e.beta;    __},{__row__:__431__,__code__:__measurements.gamma=e.gamma;    __},{__row__:__432__,__code__:__                }, true);    __},{__row__:__433__,__code__:__            }    __},{__row__:__434__,__code__:__window.addEventListener('load', function (e) {    __},{__row__:__435__,__code__:__\/\/ Add button to ask for permission to use motion sensors if on ios13+    __},{__row__:__436__,__code__:__var match = (navigator.appVersion).match(\/OS (d+)_(d+)_?(d+)?\/),    __},{__row__:__437__,__code__:__                    version;    __},{__row__:__438__,__code__:__    __},{__row__:__439__,__code__:__amp; match !==null) {    __},{__row__:__440__,__code__:__                    version = [    __},{__row__:__441__,__code__:__parseInt(match[1], 10),    __},{__row__:__442__,__code__:__parseInt(match[2], 10),    __},{__row__:__443__,__code__:__parseInt(match[3] ||0, 10)    __},{__row__:__444__,__code__:__                    ];    __},{__row__:__445__,__code__:__                    ver =parseFloat(version.join('.'));    __},{__row__:__446__,__code__:__amp;gt;=13) {__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","a97marbr","12bdcde6","Bug fix and a more obtrusive turn on sensors button","2020-03-03T15:02:42Z","shaker.js","shaker.js","[{__row__:__447__,__code__:__amp;gt;;    __},{__row__:__448__,__code__:__document.body.innerHTML+= str;    __},{__row__:__449__,__code__:__document.getElementById(request-sensors-btn).onclick= requestSensors;    __},{__row__:__450__,__code__:__\t\t\t\t\t\t\t\t\t\t}    __},{__row__:__451__,__code__:__\t\t\t\t\t\t\t\t}    __},{__row__:__452__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","a97marbr","9fc72018","Shows a button that if pressed enables motion sensor and orientation ","2020-03-03T07:13:04Z","shaker.js","shaker.js","[{__row__:__453__,__code__:__    __},{__row__:__454__,__code__:__            }, true);__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","a97marbr","12bdcde6","Bug fix and a more obtrusive turn on sensors button","2020-03-03T15:02:42Z","shaker.js","shaker.js","[{__row__:__455__,__code__:__\/\/}__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","a97marbr","9fc72018","Shows a button that if pressed enables motion sensor and orientation ","2020-03-03T07:13:04Z","shaker.js","shaker.js","[{__row__:__456__,__code__:__    __},{__row__:__457__,__code__:__setupListeners();    __},{__row__:__458__,__code__:__    }__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","efabbaf7","Updated?","2020-02-27T14:28:40Z","shaker.js","shaker.js","[{__row__:__459__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","a97marbr","32f9ee79","Revert Shows a button that if pressed activates motion sensor and de","2020-03-03T07:07:56Z","shaker.js","shaker.js","[{__row__:__460__,__code__:__functiongetDist(lat1, lon1, lat2, lon2) {__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","40f8698c","Create shaker.js","2015-04-27T09:09:46Z","shaker.js","shaker.js","[{__row__:__461__,__code__:__varR=6371; \/\/ km    __},{__row__:__462__,__code__:__    __},{__row__:__463__,__code__:__var dLat =toRad(lat2-lat1);    __},{__row__:__464__,__code__:__var dLon =toRad(lon2-lon1);    __},{__row__:__465__,__code__:__    __},{__row__:__466__,__code__:__var a =Math.sin(dLat\/2) *Math.sin(dLat\/2) +    __},{__row__:__467__,__code__:__Math.cos(toRad(lat1)) *Math.cos(toRad(lat2)) *    __},{__row__:__468__,__code__:__Math.sin(dLon\/2) *Math.sin(dLon\/2);    __},{__row__:__469__,__code__:__var c =2*Math.atan2(Math.sqrt(a), Math.sqrt(1-a));    __},{__row__:__470__,__code__:__var d =R* c;    __},{__row__:__471__,__code__:__return d;    __},{__row__:__472__,__code__:__    }__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","a97marbr","9fc72018","Shows a button that if pressed enables motion sensor and orientation ","2020-03-03T07:13:04Z","shaker.js","shaker.js","[{__row__:__473__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","40f8698c","Create shaker.js","2015-04-27T09:09:46Z","shaker.js","shaker.js","[{__row__:__474__,__code__:__functiontoRad(num) {    __},{__row__:__475__,__code__:__return num *Math.PI\/180;    __},{__row__:__476__,__code__:__    }      __},{__row__:__477__,__code__:__    __},{__row__:__478__,__code__:__functionerrorCallback(){    __},{__row__:__479__,__code__:__alert(NAVIGATION ERROR!);    __},{__row__:__480__,__code__:__\t\t}    __},{__row__:__481__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","1188d735","Compass Example","2015-04-28T11:09:25Z","shaker.js","shaker.js","[{__row__:__482__,__code__:__functiondist3D(X,Y,Z,XGoal,YGoal,ZGoal)    __},{__row__:__483__,__code__:__\t\t{    __},{__row__:__484__,__code__:__var dX=XGoal-X;    __},{__row__:__485__,__code__:__var dY=YGoal-Y;    __},{__row__:__486__,__code__:__var dZ=ZGoal-Z;    __},{__row__:__487__,__code__:__    __},{__row__:__488__,__code__:__returnMath.sqrt((dX*dX)+(dY*dY)+(dZ*dZ));    __},{__row__:__489__,__code__:__\t\t}    __},{__row__:__490__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","40f8698c","Create shaker.js","2015-04-27T09:09:46Z","shaker.js","shaker.js","[{__row__:__491__,__code__:__functionsuccessNavigation(pos) {    __},{__row__:__492__,__code__:__if(startPos!=null){    __},{__row__:__493__,__code__:__\/\/ Update simple geolocation variables    __},{__row__:__494__,__code__:__measurements.startdist=getDist(startPos.coords.latitude, startPos.coords.longitude, pos.coords.latitude, pos.coords.longitude);    __},{__row__:__495__,__code__:__measurements.latitude=pos.coords.latitude;\t\t\t\t\t\t\t\t\t\t    __},{__row__:__496__,__code__:__measurements.longitude=pos.coords.longitude;    __},{__row__:__497__,__code__:__measurements.positioncount++;    __},{__row__:__498__,__code__:__    __},{__row__:__499__,__code__:__var currdist=getDist(lastPos.coords.latitude, lastPos.coords.longitude, pos.coords.latitude, pos.coords.longitude);    __},{__row__:__500__,__code__:__    __},{__row__:__501__,__code__:__if(doprintout) document.getElementById(printout).innerHTML+=Distdelta:+currdist+n;    __},{__row__:__502__,__code__:__    __},{__row__:__503__,__code__:__amp;gt; 70m    __},{__row__:__504__,__code__:__amp;gt;0.07){    __},{__row__:__505__,__code__:__\/\/ Update current measuring position    __},{__row__:__506__,__code__:__\t\t\t\t\t\t\t\tlastPos=pos;    __},{__row__:__507__,__code__:__measurements.cumulativedist+=currdist;    __},{__row__:__508__,__code__:__    __},{__row__:__509__,__code__:__var newTime =newDate().getTime();    __},{__row__:__510__,__code__:__\t\t\t\t\t\t\t\ttimedelta=(newTime-lastTime)\/1000;    __},{__row__:__511__,__code__:__    __},{__row__:__512__,__code__:__measurements.timetot+=timedelta;    __},{__row__:__513__,__code__:__    __},{__row__:__514__,__code__:__measurements.kmh=currdist\/(timedelta\/3600);    __},{__row__:__515__,__code__:__measurements.kmhtot=measurements.cumulativedist\/(measurements.timetot\/3600);    __},{__row__:__516__,__code__:__    __},{__row__:__517__,__code__:__\t\t\t\t\t\t\t\tlastTime=newTime;    __},{__row__:__518__,__code__:__\t\t\t\t\t\t}    __},{__row__:__519__,__code__:__\t\t\t\t\t}else{    __},{__row__:__520__,__code__:__console.log(Startpos null!);    __},{__row__:__521__,__code__:__\t\t\t\t\t}    __},{__row__:__522__,__code__:__\t\t\t\t\tnavigated=true;    __},{__row__:__523__,__code__:__\t\t};    __},{__row__:__524__,__code__:__    __},{__row__:__525__,__code__:__functionevalgeo() {    __},{__row__:__526__,__code__:__if(navigated){    __},{__row__:__527__,__code__:__var ddist=lastmeasure.cumulativedist-measurements.cumulativedist;    __},{__row__:__528__,__code__:__amp;gt;0){    __},{__row__:__529__,__code__:__geolocationcallback(measurements);    __},{__row__:__530__,__code__:__\t\t\t\t\t\t}    __},{__row__:__531__,__code__:__lastmeasure.cumulativedist=measurements.cumulativedist;    __},{__row__:__532__,__code__:__\t\t\t\t}else{    __},{__row__:__533__,__code__:__navigator.geolocation.getCurrentPosition(function(pos) {    __},{__row__:__534__,__code__:__successNavigation(pos);    __},{__row__:__535__,__code__:__\t\t\t\t\t\t});    __},{__row__:__536__,__code__:__\t\t\t\t}    __},{__row__:__537__,__code__:__    __},{__row__:__538__,__code__:__\t\t\t\tnavigated=false;    __},{__row__:__539__,__code__:__\t\t};__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","53253c82","Orientation events update. Car Example added.","2015-04-27T18:45:05Z","shaker.js","shaker.js","[{__row__:__540__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","40f8698c","Create shaker.js","2015-04-27T09:09:46Z","shaker.js","shaker.js","[{__row__:__541__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","a97marbr","9fc72018","Shows a button that if pressed enables motion sensor and orientation ","2020-03-03T07:13:04Z","shaker.js","shaker.js","[{__row__:__542__,__code__:__\/********************************************************************************    __},{__row__:__543__,__code__:__       evalshake    __},{__row__:__544__,__code__:__    __},{__row__:__545__,__code__:__       evalshake is called to evaluate if the last set of steps constitute a shake    __},{__row__:__546__,__code__:__       event or not.    __},{__row__:__547__,__code__:__    __},{__row__:__548__,__code__:__    *********************************************************************************\/__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","53253c82","Orientation events update. Car Example added.","2015-04-27T18:45:05Z","shaker.js","shaker.js","[{__row__:__549__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","40f8698c","Create shaker.js","2015-04-27T09:09:46Z","shaker.js","shaker.js","[{__row__:__550__,__code__:__functionevalshake() {    __},{__row__:__551__,__code__:__    __},{__row__:__552__,__code__:__var shaked=0;    __},{__row__:__553__,__code__:__var shakedX=0;    __},{__row__:__554__,__code__:__    __},{__row__:__555__,__code__:__if(lastmeasure.shakecnt!=null){    __},{__row__:__556__,__code__:__\t\t\t\t\t\tshaked=measurements.shakecnt-lastmeasure.shakecnt;\t\t\t\t\t\t    __},{__row__:__557__,__code__:__amp;lastmeasure.shaked==0){    __},{__row__:__558__,__code__:__lastmeasure.shakedstart=lastmeasure.shakecnt;    __},{__row__:__559__,__code__:__amp;gt;0){    __},{__row__:__560__,__code__:__var shakedss=measurements.shakecnt-lastmeasure.shakedstart;    __},{__row__:__561__,__code__:__amp;gt;=shaker.shaketreshold){    __},{__row__:__562__,__code__:__measurements.shakes=shakedss;    __},{__row__:__563__,__code__:__if(shakecallback!=null) shakecallback(measurements);\t\t    __},{__row__:__564__,__code__:__\t\t\t\t\t\t\t\t\t}    __},{__row__:__565__,__code__:__\t\t\t\t\t\t}    __},{__row__:__566__,__code__:__    __},{__row__:__567__,__code__:__\t\t\t\t\t\tshakedX=measurements.shakeXcnt-lastmeasure.shakeXcnt;    __},{__row__:__568__,__code__:__amp;lastmeasure.shakedX==0){    __},{__row__:__569__,__code__:__lastmeasure.shakedXstart=lastmeasure.shakeXcnt;    __},{__row__:__570__,__code__:__amp;gt;0){    __},{__row__:__571__,__code__:__var shakedss=measurements.shakeXcnt-lastmeasure.shakedXstart;    __},{__row__:__572__,__code__:__amp;gt;=shaker.shaketreshold){    __},{__row__:__573__,__code__:__measurements.shakes=shakedss;    __},{__row__:__574__,__code__:__if(shakecallbackX!=null) shakecallbackX(measurements);\t\t    __},{__row__:__575__,__code__:__\t\t\t\t\t\t\t\t\t}    __},{__row__:__576__,__code__:__\t\t\t\t\t\t}    __},{__row__:__577__,__code__:__    __},{__row__:__578__,__code__:__\t\t\t\t\t\tshakedY=measurements.shakeYcnt-lastmeasure.shakeYcnt;    __},{__row__:__579__,__code__:__amp;lastmeasure.shakedY==0){    __},{__row__:__580__,__code__:__lastmeasure.shakedYstart=lastmeasure.shakeYcnt;    __},{__row__:__581__,__code__:__amp;gt;0){    __},{__row__:__582__,__code__:__var shakedss=measurements.shakeYcnt-lastmeasure.shakedYstart;    __},{__row__:__583__,__code__:__amp;gt;=shaker.shaketreshold){    __},{__row__:__584__,__code__:__measurements.shakes=shakedss;    __},{__row__:__585__,__code__:__if(shakecallbackY!=null) shakecallbackY(measurements);\t\t    __},{__row__:__586__,__code__:__\t\t\t\t\t\t\t\t\t}    __},{__row__:__587__,__code__:__\t\t\t\t\t\t}    __},{__row__:__588__,__code__:__    __},{__row__:__589__,__code__:__\t\t\t\t\t\tshakedZ=measurements.shakeZcnt-lastmeasure.shakeZcnt;    __},{__row__:__590__,__code__:__amp;lastmeasure.shakedZ==0){    __},{__row__:__591__,__code__:__lastmeasure.shakedZstart=lastmeasure.shakeZcnt;    __},{__row__:__592__,__code__:__amp;gt;0){    __},{__row__:__593__,__code__:__var shakedss=measurements.shakeZcnt-lastmeasure.shakedZstart;    __},{__row__:__594__,__code__:__amp;gt;=shaker.shaketreshold){    __},{__row__:__595__,__code__:__measurements.shakes=shakedss;    __},{__row__:__596__,__code__:__if(shakecallbackZ!=null) shakecallbackZ(measurements);\t\t    __},{__row__:__597__,__code__:__\t\t\t\t\t\t\t\t\t}    __},{__row__:__598__,__code__:__\t\t\t\t\t\t}    __},{__row__:__599__,__code__:__    __},{__row__:__600__,__code__:__\t\t\t\t}    __},{__row__:__601__,__code__:__lastmeasure.shakecnt=measurements.shakecnt;    __},{__row__:__602__,__code__:__lastmeasure.shaked=shaked;    __},{__row__:__603__,__code__:__    __},{__row__:__604__,__code__:__lastmeasure.shakeXcnt=measurements.shakeXcnt;    __},{__row__:__605__,__code__:__lastmeasure.shakedX=shakedX;    __},{__row__:__606__,__code__:__    __},{__row__:__607__,__code__:__lastmeasure.shakeYcnt=measurements.shakeYcnt;    __},{__row__:__608__,__code__:__lastmeasure.shakedY=shakedY;    __},{__row__:__609__,__code__:__    __},{__row__:__610__,__code__:__lastmeasure.shakeZcnt=measurements.shakeZcnt;    __},{__row__:__611__,__code__:__lastmeasure.shakedZ=shakedZ;    __},{__row__:__612__,__code__:__\t\t}    __},{__row__:__613__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","72db4a67","Updated example with tilt Events","2015-04-27T10:42:05Z","shaker.js","shaker.js","[{__row__:__614__,__code__:__\/********************************************************************************__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","a97marbr","9fc72018","Shows a button that if pressed enables motion sensor and orientation ","2020-03-03T07:13:04Z","shaker.js","shaker.js","[{__row__:__615__,__code__:__       evalstep    __},{__row__:__616__,__code__:__    __},{__row__:__617__,__code__:__       evalstep is called at a set interval, for evaluating when to send callback events for     __},{__row__:__618__,__code__:__       shaking and orientation changes.    __},{__row__:__619__,__code__:__    __},{__row__:__620__,__code__:__    *********************************************************************************\/__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","72db4a67","Updated example with tilt Events","2015-04-27T10:42:05Z","shaker.js","shaker.js","[{__row__:__621__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","40f8698c","Create shaker.js","2015-04-27T09:09:46Z","shaker.js","shaker.js","[{__row__:__622__,__code__:__functionevalstep() {    __},{__row__:__623__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","72db4a67","Updated example with tilt Events","2015-04-27T10:42:05Z","shaker.js","shaker.js","[{__row__:__624__,__code__:__\/\/ If there is a shake\/step measurement to evaluate__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","40f8698c","Create shaker.js","2015-04-27T09:09:46Z","shaker.js","shaker.js","[{__row__:__625__,__code__:__if(lastmeasure.x!=null){    __},{__row__:__626__,__code__:__\t\t\t\t\t\tdx=lastmeasure.x-measurements.x;    __},{__row__:__627__,__code__:__\t\t\t\t\t\tdy=lastmeasure.y-measurements.y;    __},{__row__:__628__,__code__:__\t\t\t\t\t\tdz=lastmeasure.z-measurements.z;    __},{__row__:__629__,__code__:__\t\t\t\t\t\td=Math.sqrt((dx*dx)+(dy*dy)+(dz*dz));    __},{__row__:__630__,__code__:__    __},{__row__:__631__,__code__:__measurements.d=d;    __},{__row__:__632__,__code__:__measurements.dx=dx;    __},{__row__:__633__,__code__:__measurements.dy=dy;\t\t    __},{__row__:__634__,__code__:__measurements.dz=dz;    __},{__row__:__635__,__code__:__    __},{__row__:__636__,__code__:__\/\/ if we detect a step, increase step counts    __},{__row__:__637__,__code__:__amp;gt;3){    __},{__row__:__638__,__code__:__if(stepcallbackX!=null) stepcallbackX(measurements);    __},{__row__:__639__,__code__:__measurements.shakeXcnt++;    __},{__row__:__640__,__code__:__\t\t\t\t\t\t}    __},{__row__:__641__,__code__:__amp;gt;3){    __},{__row__:__642__,__code__:__if(stepcallbackY!=null) stepcallbackY(measurements);\t\t\t\t    __},{__row__:__643__,__code__:__measurements.shakeYcnt++;    __},{__row__:__644__,__code__:__\t\t\t\t\t\t}    __},{__row__:__645__,__code__:__amp;gt;3){    __},{__row__:__646__,__code__:__if(stepcallbackZ!=null) stepcallbackZ(measurements);    __},{__row__:__647__,__code__:__measurements.shakeZcnt++;    __},{__row__:__648__,__code__:__\t\t\t\t\t\t}     __},{__row__:__649__,__code__:__amp;gt;3){    __},{__row__:__650__,__code__:__if(stepcallback!=null) stepcallback(measurements);    __},{__row__:__651__,__code__:__measurements.shakecnt++;    __},{__row__:__652__,__code__:__\t\t\t\t\t\t} \t\t\t\t    __},{__row__:__653__,__code__:__\t\t\t\t}    __},{__row__:__654__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","72db4a67","Updated example with tilt Events","2015-04-27T10:42:05Z","shaker.js","shaker.js","[{__row__:__655__,__code__:__if(lastmeasure.alpha!=null||lastmeasure.beta!=null||lastmeasure.gamma!=null){    __},{__row__:__656__,__code__:__\t\t\t\t\t\tda=lastmeasure.alpha-measurements.alpha;    __},{__row__:__657__,__code__:__\t\t\t\t\t\tdb=lastmeasure.beta-measurements.beta;    __},{__row__:__658__,__code__:__\t\t\t\t\t\tdg=lastmeasure.gamma-measurements.gamma;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","53253c82","Orientation events update. Car Example added.","2015-04-27T18:45:05Z","shaker.js","shaker.js","[{__row__:__659__,__code__:__    __},{__row__:__660__,__code__:__measurements.da=da;    __},{__row__:__661__,__code__:__measurements.db=db;\t\t    __},{__row__:__662__,__code__:__measurements.dg=dg;    __},{__row__:__663__,__code__:__    __},{__row__:__664__,__code__:__measurements.oaccA+=da;    __},{__row__:__665__,__code__:__measurements.oaccB+=db;    __},{__row__:__666__,__code__:__measurements.oaccG+=dg;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","72db4a67","Updated example with tilt Events","2015-04-27T10:42:05Z","shaker.js","shaker.js","[{__row__:__667__,__code__:__    __},{__row__:__668__,__code__:__amp;gt;3){    __},{__row__:__669__,__code__:__if(tiltcallbackA!=null) tiltcallbackA(measurements);    __},{__row__:__670__,__code__:__\t\t\t\t\t\t}    __},{__row__:__671__,__code__:__amp;gt;3){    __},{__row__:__672__,__code__:__if(tiltcallbackB!=null) tiltcallbackB(measurements);    __},{__row__:__673__,__code__:__\t\t\t\t\t\t}    __},{__row__:__674__,__code__:__amp;gt;3){    __},{__row__:__675__,__code__:__if(tiltcallbackG!=null) tiltcallbackG(measurements);    __},{__row__:__676__,__code__:__\t\t\t\t\t\t}    __},{__row__:__677__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","38e9a53b","Bug fixes and Orientation Event Support","2015-05-01T22:07:20Z","shaker.js","shaker.js","[{__row__:__678__,__code__:__if(tiltcallback!=null) tiltcallback(measurements);__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","a866a606","Text printing example and shaker fix.","2015-04-28T09:59:36Z","shaker.js","shaker.js","[{__row__:__679__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","72db4a67","Updated example with tilt Events","2015-04-27T10:42:05Z","shaker.js","shaker.js","[{__row__:__680__,__code__:__\t\t\t\t}__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","38e9a53b","Bug fixes and Orientation Event Support","2015-05-01T22:07:20Z","shaker.js","shaker.js","[{__row__:__681__,__code__:__    __},{__row__:__682__,__code__:__var newstate=UNK;    __},{__row__:__683__,__code__:__amp;lt;120){    __},{__row__:__684__,__code__:__amp;lt;60) newstate=UP;    __},{__row__:__685__,__code__:__amp;lt;-65){    __},{__row__:__686__,__code__:__amp;lt;60) newstate=DOWN;    __},{__row__:__687__,__code__:__amp;lt;-70)){    __},{__row__:__688__,__code__:__amp;lt;20) newstate=LSIDE;    __},{__row__:__689__,__code__:__amp;lt;90)){    __},{__row__:__690__,__code__:__amp;lt;=180) newstate=LSIDE;    __},{__row__:__691__,__code__:__amp;gt;=-180) newstate=LSIDE;    __},{__row__:__692__,__code__:__amp;lt;20) newstate=RSIDE;    __},{__row__:__693__,__code__:__amp;lt;20)){    __},{__row__:__694__,__code__:__\t\t\t\t\t\tnewstate=FLAT;    __},{__row__:__695__,__code__:__\t\t\t\t}    __},{__row__:__696__,__code__:__    __},{__row__:__697__,__code__:__amp;newstate!=UNK){    __},{__row__:__698__,__code__:__if(statecallback!=null) statecallback(newstate);    __},{__row__:__699__,__code__:__\t\t\t\t}    __},{__row__:__700__,__code__:__if(newstate!=UNK) oldstate=newstate;    __},{__row__:__701__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","40f8698c","Create shaker.js","2015-04-27T09:09:46Z","shaker.js","shaker.js","[{__row__:__702__,__code__:__lastmeasure.x=measurements.x;    __},{__row__:__703__,__code__:__lastmeasure.y=measurements.y;    __},{__row__:__704__,__code__:__lastmeasure.z=measurements.z;    __},{__row__:__705__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","72db4a67","Updated example with tilt Events","2015-04-27T10:42:05Z","shaker.js","shaker.js","[{__row__:__706__,__code__:__lastmeasure.alpha=measurements.alpha;    __},{__row__:__707__,__code__:__lastmeasure.beta=measurements.beta;    __},{__row__:__708__,__code__:__lastmeasure.gamma=measurements.gamma;    __},{__row__:__709__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shaker.js","HGustavs","40f8698c","Create shaker.js","2015-04-27T09:09:46Z","shaker.js","shaker.js","[{__row__:__710__,__code__:__\t\t};    __},{__row__:__711__,__code__:__    __},{__row__:__712__,__code__:__}(window, document));    __},{__row__:__713__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shake_examples/shake_example1.html","mbrohede","109f751e","Added two examples where shake is used.","2015-05-06T13:01:57Z","shake_examples/shake_example1.html","shaker.js","[{__row__:__1__,__code__:__amp;gt;    __},{__row__:__2__,__code__:__amp;gt;    __},{__row__:__3__,__code__:__amp;gt;    __},{__row__:__4__,__code__:__amp;gt;    __},{__row__:__5__,__code__:__amp;gt;    __},{__row__:__6__,__code__:__amp;gt;    __},{__row__:__7__,__code__:__amp;gt;    __},{__row__:__8__,__code__:__functioninit(){    __},{__row__:__9__,__code__:__shaker.on(shake,function(o){    __},{__row__:__10__,__code__:__document.getElementById(printout).innerHTML+=# SHAKES: +o.shakes+n; \/\/ Print out # shakes registered    __},{__row__:__11__,__code__:__    __},{__row__:__12__,__code__:__var element =document.getElementById(content);    __},{__row__:__13__,__code__:__if (element.style.backgroundColor===rgb(255, 238, 221)){    __},{__row__:__14__,__code__:__element.style.backgroundColor=rgb(221, 238, 255);    __},{__row__:__15__,__code__:__\t\t\t\t\t} else {    __},{__row__:__16__,__code__:__element.style.backgroundColor=rgb(255, 238, 221);    __},{__row__:__17__,__code__:__\t\t\t\t\t}    __},{__row__:__18__,__code__:__    __},{__row__:__19__,__code__:__\t\t\t\t});    __},{__row__:__20__,__code__:__\t\t\t}    __},{__row__:__21__,__code__:__amp;gt;    __},{__row__:__22__,__code__:__amp;gt;    __},{__row__:__23__,__code__:__amp;gt;    __},{__row__:__24__,__code__:__amp;gt;    __},{__row__:__25__,__code__:__amp;gt;    __},{__row__:__26__,__code__:__amp;gt;    __},{__row__:__27__,__code__:__amp;gt;    __},{__row__:__28__,__code__:__amp;gt;    __},{__row__:__29__,__code__:__amp;gt;    __},{__row__:__30__,__code__:__amp;gt;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("shake_examples/shake_example2.html","mbrohede","109f751e","Added two examples where shake is used.","2015-05-06T13:01:57Z","shake_examples/shake_example2.html","shaker.js","[{__row__:__1__,__code__:__amp;gt;    __},{__row__:__2__,__code__:__amp;gt;    __},{__row__:__3__,__code__:__amp;gt;    __},{__row__:__4__,__code__:__amp;gt;    __},{__row__:__5__,__code__:__amp;gt;    __},{__row__:__6__,__code__:__amp;gt;    __},{__row__:__7__,__code__:__amp;gt;    __},{__row__:__8__,__code__:__functioninit(){    __},{__row__:__9__,__code__:__shaker.on(shake,function(o){    __},{__row__:__10__,__code__:__document.getElementById(printout).innerHTML+=# SHAKES: +o.shakes+n; \/\/ Print out # shakes registered    __},{__row__:__11__,__code__:__document.getElementById(form1).reset(); \/\/ reset form    __},{__row__:__12__,__code__:__\t\t\t\t});    __},{__row__:__13__,__code__:__\t\t\t}    __},{__row__:__14__,__code__:__amp;gt;    __},{__row__:__15__,__code__:__amp;gt;    __},{__row__:__16__,__code__:__amp;gt;    __},{__row__:__17__,__code__:__amp;gt;    __},{__row__:__18__,__code__:__amp;gt;    __},{__row__:__19__,__code__:__amp;gt;    __},{__row__:__20__,__code__:__amp;gt;    __},{__row__:__21__,__code__:__amp;gt;Some text input    __},{__row__:__22__,__code__:__amp;gt;Some more input    __},{__row__:__23__,__code__:__amp;gt;Password    __},{__row__:__24__,__code__:__amp;gt;Even more text    __},{__row__:__25__,__code__:__amp;gt;    __},{__row__:__26__,__code__:__amp;gt;    __},{__row__:__27__,__code__:__amp;gt;    __},{__row__:__28__,__code__:__amp;gt;    __},{__row__:__29__,__code__:__amp;gt;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","a97marbr","ef161ad2","Removed alert-statements and added some comments","2014-09-11T09:53:19Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__1__,__code__:__\/\/    __},{__row__:__2__,__code__:__\/\/ use the included function generate_sentence() to generate random sentences    __},{__row__:__3__,__code__:__\/\/__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","HGustavs","e0b32ac6","Seed v1.1 of Context Free Grammar","2014-09-05T17:43:57Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__4__,__code__:__var determiner=newArray(another,other,different,a,the,zero,one,two,a million,a gazillion,fifty,infinite,many,much,few,little,a couple of,several,most,this,that,these,those,which,either,neither,each,every,any,whichever,the same,such,that,so,some,any,which,what,whichever,whatever,a lot of,many,several,much,no,neither,a few,a little,some,my,your,our,his,her,all,many,several,each,any,no,enough,sufficient,plenty,the only,the,this,that,these,those,all,both);    __},{__row__:__5__,__code__:__var conjunction=newArray(and,nor,but,or,yet,both,equally);    __},{__row__:__6__,__code__:__var modal=newArray(ed,s,does,did,can,shall,will,may,could,should,would,might,had,must,did);    __},{__row__:__7__,__code__:__var verb=new Array(warn,encourage,arrange,obtain,skip,spot,treat,spray,disagree,stay,check,claim,tame,welcome,yawn,phone,strip,wriggle,drop,expect,pray,strap,place,soak,delight,reject,empty,stroke,program,paint,concentrate,untidy,snore,deliver,hand,wish,crush,carve,offer,stop,bathe,decay,rush,avoid,tip,crack,brush,sneeze,license,squeal,water,trouble,hang,rejoice,fancy,waste,inject,harass,reproduce,overflow,repair,sip,slip,realise,sound,roll,interest,post,clip,permit,shave,unpack,need,puncture,smile,hum,moor,sigh,frame,tease,employ,bare,knit,accept,greet,drip,fool,satisfy,sin,interrupt,reply,memorise,pour,whine,reflect,delay,brake,move,fry,report,communicate,pine,end,grab,notice,stare,fasten,prepare,fade,mate,own,excuse,suck,scold,practise,support,count,confess,concern,radiate,pause,squeak,balance,heal,explain,whisper,branch,wreck,fill,explode,weigh,travel,time,paddle,order,scrape,enjoy,challenge,discover,vanish,punish,describe,curl,colour,coil,dislike,desert,admire,long,mine,store,subtract,saw,charge,squeeze,print,command,chew,scratch,head,queue,plan,lighten,cry,receive,stuff,lock,mix,haunt,bruise,irritate,guarantee,bow,arrive,suit,marry,handle,pat,produce,appreciate,doubt,repeat,deserve,escape,wail,glue,signal,film,gather,complain,man,rot,mug,fit,mess up,exist,curve,tickle,allow,cheer,alert,mourn,whirl,touch,reign,applaud,stretch,observe,rain,hover,bury,use,obey,serve,lick,impress,milk,guess,shock,dress,love,dam,join,pretend,close,slow,name,wobble,beam,groan,improve,telephone,blush,confuse,rule,prick,calculate,return,snow,march,trace,disapprove,tremble,melt,land,stitch,identify,turn,suspect,crawl,rob,bomb,intend,pack,chop,blot,peel,shelter,remove,glow,flash,continue,hunt,share,belong,ruin,grate,pinch,consist,remember,breathe,squash,poke,embarrass,trot,grease,cheat,terrify,like,offend,trade,pedal,warm,request,lie,undress,tire,jam,bang,rinse,include,care,change,rely,follow,grin,train,enter,shade,matter,drum,moan,heat,prevent,open,spill,argue,present,crash,seal,step,suspend,contain,decorate,suggest,fold,complete,preach,spare,wave,form,ban,excite,educate,afford,beg,fail,attach,annoy,face,zoom,force,compete,fetch,surprise,scare,kill,switch,apologise,approve,develop,push,bump,prefer,sparkle,cause,shiver,talk,paste,transport,wonder,bolt,tow,succeed,multiply,nail,snatch,sail,burn,disappear,preserve,spell,knot,refuse,invite,flood,fix,stir,meddle,x-ray,scrub,introduce,sniff,peck,start,search,promise,wander,suppose,blink,murder,trip,scatter,supply,record,park,ski,instruct,visit,number,heap,strengthen,grip,coach,buzz,plug,sign,surround,wipe,wink,ignore,part,help,flap,amuse,float,gaze,whip,load,clean,taste,list,harm,cover,dust,jail,type,perform,attack,wrestle,damage,drown,drain,inform,hammer,examine,appear,slap,shop,announce,soothe,box,play,blind,recognise,tie,muddle,depend,wait,agree,kiss,judge,disarm,punch,boast,guide,interfere,relax,increase,look,polish,mark,point,remind,injure,rock,dare,advise,analyse,unlock,settle,smoke,chase,match,dry,tick,want,occur,measure,decide,mend,object,hope,precede,double,trust,unfasten,replace,book,regret,pump,release,bore,race,miss,jog,tour,destroy,reach,laugh,provide,hate,battle,influence,fire,live,shrug,smash,back,separate,possess,remain,twist,extend,rhyme,flower,arrest,attend,trick,copy,walk,spark,correct,whistle,sack,file,pick,stain,hook,fear,invent,drag,unite,hop,last,frighten,yell,answer,cross,connect,knock,found,watch,add,entertain,retire,exercise,rescue,divide,bleach,trap,cure,bounce,save,rub,worry,smell,fax,zip,comb,dream,attempt,question,plant,spoil,tug,compare,fence,itch,scorch,try,listen,behave,choke,please,kneel,manage,detect,scribble,bake,test,clap,guard,tumble,suffer,joke,pop,reduce,bat,scream,hurry,owe,carry,wash,launch,nest,ask,flow,camp,thaw,risk,bless,sprout,note,pass,hug,pull,work,earn,protect,press,happen,dance,tap,wrap,cycle,imagine,stamp,expand,juggle,raise,deceive,bubble,nod,consider,collect,jump,borrow,peep,attract,boil,cough,learn,kick,thank,call,clear,admit,steer,tempt,label,screw,level);    __},{__row__:__8__,__code__:__var noun=new Array(bedroom,song,structure,pickle,nut,plane,room,dust,carpenter,camp,office,grape,fuel,cap,minister,pest,morning,scarecrow,trip,test,stream,month,summer,tub,baseball,cast,dime,arm,rake,money,hen,straw,head,cobweb,geese,cat,glove,edge,actor,daughter,space,substance,flower,self,sound,fang,fight,toe,fork,kitten,rabbit,bean,swing,oranges,mitten,fog,class,nose,pleasure,flesh,feather,river,celery,van,scale,badge,robin,sweater,gate,mountain,alarm,pollution,cake,donkey,wealth,oatmeal,cherry,joke,faucet,summer,airplane,reward,scissors,believe,rain,lettuce,zipper,club,songs,kite,kiss,kick,sea,grandmother,jam,moon,veil,juice,stomach,frame,hill,fruit,queen,boundary,pig,drug,giraffe,shape,limit,fiction,loaf,face,toothache,tramp,rate,railway,sponge,flag,hope,education,beginner,boy,creature,notebook,voice,meeting,bird,coach,team,hose,riddle,linen,wrist,grim reaper,mint,plantation,fifth,quicksand,library,family,cat,brick,value,help,recess,parent,soda,icicle,son,stove,street,wing,flock,deer,winter,sea,railway,sack,mongrel,pan,pail,show,apparel,governor,ladybug,wool,lift,weather,afterthought,achieve,meal,hook,note,step,acoustics,shop,water,grandmother,umbrella,grandfather,man,island,hope,zoo,history,day,pie,line,volleyball,beam,anger,cellar,interest,rat,owner,holiday,order,faucet,pot,swim,chin,sweater,celery,sugar,lunch,space,road,wilderness,garden,Steve Jobs,linen,pencil,feet,meal,name,sun,trail,passenger,rifle,arithmetic,toothpaste,screw,milk,volcano,hen,able,ball,rock,cabbage,hobbies,judge,friends,cellar,zebra,spiders,opinion,cub,front,grain,foot,town,surprise,bed,offer,furniture,hairspray,bead,sofa,fog,magic,spade,suit,cattle,hall,nest,station,ghost,brother,week,knot,haircut,vein,beggar,beast,bushes,galley,vegetable,year,eye,balloon,pear,underwear,book,Ipad,income,thread,cars,secretary,hill,zephyr,glue,lawyer,horn,death,brush,hole,water,approval,view,kitty,stream,smoke,sister,wish,underwear,thrill,reaction,metal,girls,grandfather,appliance,language,fold,liquid,grain,food,soup,mother,battle,flower,stranger,hydrant,soda,children,moon,carpenter,stench,owl,veil,book,hate,corn,ache,government,gate,feast,crate,lettuce,plot,wrench,caption,clover,cause,animal,force,furniture,volcano,wheel,farm,friction,crowd,pail,grade,argument,throne,number,slave,elbow,governor,route,sidewalk,stranger,kite,crayon,education,reason,carriage,servant,morning,glass,answer,tent,straw,beetle,heart,horn,father,dirt,food,playground,beef,advice,sheet,jellyfish,throat,motion,aftermath,bread,apple,cream,police,scent,texture,map,cactus,breakfast,popcorn,visitor,suit,patch,doctor,afternoon,sink,lumber,bath,lamp,dad,sail,great uncle,cats,arch,effect,kettle,cart,measure,cave,kiss,cemetery,spark,volleyball,game,story,ocean,plant,good-bye,oven,writer,insurance,yard,seed,range,circle,sock,horse,frog,game,table,digestion,trick,oatmeal,title,meat,bun,unit,swing,cable,dust,snake,giants,cannon,sofa,health,notebook,monkey,system,cracker,arithmetic,feeling,font,holiday,basket,dress,cent,stocking,goldfish,can,girl,brain,oil,tank,key,rainstorm,instrument,apple,home,jar,bike,invention,development,calculator,heat,string,action,channel,jeans,string,spark,frame,rainstorm,lizard,hearing,territory,dog,coil,jail,zinc,stone,level,girl,scene,soap,butter,spy,bomb,light,guide,mom,toes,doll,selection,cow,vase,earthquake,hot,elbow,car,pet,rain,fear,stew,lightning bolt,mailbox,receipt,bucket,vest,dock,park,bubble,geese,wood,niece,finger,goose,cattle,turkey,seat,fuel,lunchroom,stove,seashore,lake,hobbies,hook,pear,birthday,shoe,spoon,temper,boot,banana,vacation,tiger,knife,summer,snow,winter,throne,squirrel,crown,bat,fowl,ray,song,form,treatment,owl,goldfish,farmer,friction,knowledge,toothbrush,stage,goose,feather,desk,lace,stretch,crook,heat,son,giraffe,flavor,mother,clam,earthquake,airport,downtown,sense,plastic,aunt,van,chicken,operation,friend,organization,flowers,mice,music,basketball,cloth,creator,voyage,branch,hair,rat,orange,pancake,umbrella,laborer,heart,partner,scarf,sun,wren,list,fly,calendar,cup,marble,twig,home,coast,grade,eggnog,dinner,skate,field,activity,feet,seashore,boy,bait,kite,locket,seed,insect,maid,mountain,scale,tree,ornament,cemetery,guitar,rake,crow,frog,spot,rose,support,health,honey,society,crib,army,light,sort,north,poison,border,street,quiet,tray,drum,pinkie,month,vest,quilt,science,recess,cast,vegetable,vase,use,feast,picture,rail,honey,lock,pocket,hat,reading,pen,ghost,toad,uncle,memory,star,lip,fang,grass,voyage,gun,visitor,fan,knee,idea,goose,stealth yacht,cave,mask,sleet,number,snail,observation,ocean,fireman,mother);    __},{__row__:__9__,__code__:__var adjective=new Array(squalid,misty,woozy,ignorant,damaged,wretched,invincible,smart,earthy,elastic,soft,dizzy,round,excellent,alluring,stupid,diligent,easy,vacuous,grotesque,flaky,prickly,tender,telling,imaginary,mute,cloistered,frequent,quickest,profuse,measly,puffy,wacky,auspicious,obedient,deeply,ragged,poised,steadfast,determined,accurate,lame,inconclusive,dull,humdrum,exciting,romantic,secret,innocent,narrow,cheap,truthful,instinctive,evanescent,elated,befitting,joyous,neighborly,imperfect,jobless,defeated,thin,boiling,ruddy,low,shaky,troubled,blue,charming,needless,intelligent,scarce,uppity,damaging,rhetorical,extra-large,trite,lamentable,present,disturbed,stingy,disastrous,curious,oafish,abounding,bewildered,miniature,wanting,unknown,fancy,five,berserk,worthless,tidy,gruesome,dark,elegant,icy,far,certain,long-term,educated,eight,rich,serious,thankful,husky,loutish,ill-informed,broad,slippery,different,well-groomed,materialistic,rabid,fixed,overjoyed,mean,earsplitting,gaping,wide-eyed,concerned,unsightly,quaint,polite,previous,black,regular,adaptable,ultra,good,repulsive,teeny,thirsty,distinct,unhealthy,absurd,ripe,yellow,questionable,well-off,efficacious,adventurous,flat,solid,military,rigid,rough,separate,protective,finicky,scrawny,glistening,acid,nine,uncovered,small,nimble,maddening,like,juvenile,wry,red,juicy,rainy,closed,material,horrible,cute,doubtful,mixed,electric,sharp,light,dysfunctional,high,slow,funny,callous,nervous,proud,perfect,incompetent,bawdy,envious,somber,absent,little,abusive,hesitant,lethal,undesirable,friendly,daffy,fortunate,ruthless,smelly,vast,miscreant,healthy,unkempt,handsome,handsomely,frantic,warlike,clammy,shrill,ludicrous,abortive,pink,strong,scared,divergent,witty,yummy,longing,damp,aromatic,second,tall,chivalrous,periodic,dependent,uneven,ajar,overconfident,acoustic,simplistic,acceptable,peaceful,naughty,petite,plain,craven,unwieldy,incandescent,frightened,phobic,useless,tedious,absorbed,abject,brawny,black-and-white,able,abrupt,kindhearted,minor,sassy,screeching,talented,ethereal,lumpy,coherent,obese,uttermost,unused,languid,slim,elderly,ancient,nutty,impolite,brown,permissible,fascinated,oval,bustling,delightful,pleasant,flimsy,steep,icky,imminent,clean,curly,brief,adjoining,abashed,parched,powerful,torpid,overrated,apathetic,statuesque,amused,muddled,many,dreary,painful,eatable,inexpensive,yielding,recondite,familiar,obtainable,available,temporary,majestic,supreme,bored,bent,industrious,wet,outgoing,salty,jazzy,lackadaisical,knotty,bloody,psychedelic,odd,new,shaggy,fluffy,crooked,bite-sized,abandoned,cruel,momentous,shiny,left,rebel,nice,standing,ablaze,internal,ill-fated,testy,glamorous,probable,scary,boorish,malicious,robust,fanatical,heavy,wooden,sordid,learned,jumpy,unbecoming,ashamed,wholesale,right,adhesive,natural,ubiquitous,long,splendid,faulty,curvy,astonishing,knowing,full,detailed,keen,childlike,incredible,adamant,guttural,late,frightening,selective,marked,beneficial,futuristic,ritzy,scandalous,sturdy,kaput,erect,complex,addicted,one,assorted,irate,old-fashioned,upbeat,lively,super,jittery,two,grumpy,swanky,glib,dry,jumbled,boundless,dear,spotless,equable,hysterical,purple,foolish,belligerent,eager,hard,deafening,ten,possessive,sweet,waiting,terrible,special,tested,general,loud,possible,hellish,cut,free,,fair,fresh,rustic,meek,premium,silent,demonic,tranquil,watery,thoughtless,colossal,tremendous,productive,equal,perpetual,plucky,puny,precious,obsequious,needy,axiomatic,pathetic,teeny-tiny,false,legal,unnatural,satisfying,happy,reflective,aback,gray,untidy,unequal,quirky,next,beautiful,fat,extra-small,dirty,young,lopsided,six,womanly,observant,pumped,picayune,exotic,aggressive,synonymous,encouraging,far-flung,unadvised,future,dusty,plant,puzzling,hypnotic,unbiased,stale,unaccountable,wise,tangible,disgusted,economic,fast,thick,old,habitual,roasted,towering,tacit,breakable,ugly,wicked,level,tacky,wrong,nonchalant,cumbersome,nebulous,glorious,aspiring,scientific,chubby,accidental,therapeutic,defiant,awful,gentle,tightfisted,grouchy,festive,well-made,wandering,sophisticated,gratis,brainy,gusty,frail,willing,useful,delirious,deadpan,empty,erratic,labored,vague,helpful,broken,royal,wrathful,dynamic,alcoholic,absorbing,hissing,roomy,impossible,placid,coordinated,amuck,weary,drunk,tame,abiding,annoying,adorable,true,versed,venomous,cheerful,ordinary,nippy,lying,moaning,wasteful,gigantic,even,tense,colorful,grateful,bad,moldy,tiny,responsible,nasty,lewd,private,smiling,uninterested,sudden,curved,guarded,dangerous,giddy,smoggy,murky,warm,hurt,orange,innate,weak,onerous,macabre,tricky,tawdry,evasive,stupendous,normal,ceaseless,high-pitched,ambitious,thundering,discreet,fuzzy,gabby,combative,jagged,spotted,tangy,physical,entertaining,melted,imported,hollow,brash,ambiguous,neat,silent,drab,zealous,zippy,wary,four,clumsy,seemly,silly,complete,shallow,safe,cool,opposite,efficient,creepy,aware,ill,male,mundane,exuberant,bumpy,spectacular,fierce,highfalutin,endurable,tough,remarkable,unique,guiltless,infamous,quizzical,blue-eyed,mighty,judicious,nondescript,decisive,piquant,amusing,flagrant,naive,rare,confused,nappy,understood,handy,delicious,dazzling,youthful,impartial,nauseating,modern,violent,relieved,slimy,dapper,magical,pricey,zany,abundant,steady,shocking,hushed,oceanic,grubby,likeable,enchanted,soggy,noxious,lean,cowardly,unequaled,acidic,political,pastoral,messy,early,gorgeous,paltry,tense,crazy,outrageous,bitter,trashy,fallacious,strange,illegal,sneaky,tearful,lavish,delicate,whole,capable,mellow,chilly,luxuriant,magenta,half,woebegone,substantial,unarmed,worried,domineering,better,shut,ad hoc,goofy,aloof,deranged,wonderful,bright,automatic,sable,eminent,fearful,hanging,capricious,skinny,garrulous,inquisitive,halting,famous,huge,wide,accessible,hard-to-find,utopian,mindless,merciful,mountainous,hospitable,hulking,fertile,depressed,groovy,billowy,known,mysterious,spiteful,tasteless,grandiose,loving,idiotic,grieving,clear,utter,alleged,freezing,secretive,toothsome,taboo,conscious,verdant,ratty,agreeable,changeable,sulky,silky,cluttered,chunky,exclusive,disgusting,vivacious,dispensable,helpless,large,cooing,volatile,direful,simple,heady,purring,hapless,arrogant,sloppy,literate,wiggly,psychotic,tasteful,animated,thirsty,abnormal,careful,symptomatic,deep,illustrious,whimsical,heavenly,acrid,striped,three,redundant,macho,energetic,attractive,selfish,faded,average,waggish,dramatic,historical,gaudy,graceful,obscene,victorious,whispering,descriptive,spiritual,difficult,filthy,spiky,functional,sweltering,hilarious,daily,lyrical,upset,white,foamy,ready,threatening,tasty,rightful,last,reminiscent,rude,brave,angry,harmonious,furry,obsolete,wiry,kind,sad,hot,lucky,crabby,tart,debonair,outstanding,sincere,enormous,courageous,vulgar W,same,cautious,truculent,jolly,raspy,lovely,savory,gullible,obnoxious,second-hand,heartbreaking,puzzled,glossy,magnificent,defective,terrific,painstaking,parallel,chief,windy,nutritious,married,fumbling,zonked,clever,real,lacking,stiff,faithful,agonizing,nifty,vagabond,dashing,kindly,limping,zesty,quiet,voracious,shy,receptive,ugliest,pointless,straight,makeshift,quack,gamy,lively,racial,superb,spurious,homeless,flashy,holistic,sparkling,optimal,hungry,important,irritating,rural,sour,plausible,busy,numberless,plastic,noisy,madly,greedy,sore,third,calm,devilish,rampant,smooth,cultured,actually,spotty,wakeful,caring,fearless,mere,sore,stimulating,lowly,staking,spooky,crowded,loose,jaded,overwrought,uptight,used,unable,gifted,bashful,tiresome,wealthy,cold,enchanting,omniscient,thinkable,common,ahead,quixotic,tired,rapid,scintillating,marvelous,offbeat,condemned,flowery,afraid,subdued,aboriginal,wild,fragile,wistful,hallowed,righteous,elite,petite,tenuous,cloudy,motionless,noiseless,snotty,alert,aboard,lazy,bright,nonstop,quarrelsome,cynical,decorous,squealing,few,blushing,thoughtful,draconian,nostalgic,cute,flippant,milky,mammoth,lush,tan,knowledgeable,calculating,open,voiceless,burly,bizarre,numerous,disillusioned,massive,null,fluttering,stereotyped,unwritten,quick,sticky,homely,short,sick,bouncy,didactic,barbarous,harsh,interesting,square,alive,melodic,rambunctious,nosy,annoyed,honorable,elfin,workable,aberrant,medical,scattered,spicy,jealous,abhorrent,squeamish,organic,first,mature,abaft,spiffy,superficial,anxious,foregoing,necessary,resonant,overt,public,cuddly,godly,successful,careless,grey,vengeful,feeble,gleaming,abrasive,hurried,penitent,disagreeable,cagey,best,shivering,unusual,sleepy,various,fantastic,past,immense,panoramic,tight,living,exultant,expensive,parsimonious,swift,mushy,fabulous,snobbish,amazing,valuable,giant,skillful,abstracted,lonely,subsequent,pretty,sedate,flawless,near,hideous,chemical,embarrassed,classy,poor,comfortable,deserted,ossified,resolute,typical,great,panicky,succinct,hateful,pushy,green,aquatic,maniacal,feigned,itchy,dusty,violet,stormy,unsuitable,forgetful,rotten,meaty,boring,greasy,dead,fretful,excited,insidious,breezy,unruly,alike,humorous,faint,enthusiastic,big,awake,well-to-do,vigorous,laughable,gainful,cooperative,awesome,obeisant,fine,furtive,pale,female);    __},{__row__:__10__,__code__:__var adverb=new Array(grossly,incoherently,well,inevitably,bluntly,supposedly,richly,entirely,furthermore,princely,deleteriously,forcefully,seemingly,rancorously,yesterday,ultimately,presumably,variably,superbly,decently,obliquely,peacefully,sadistically,savagely,deceptively,snobbishly,debatably,quickly,impersonally,frightfully,flexibly,later,unreservedly,magnetically,deferentially,unwisely,blatantly,irrationally,insistently,spectacularly,slightly,dependently,ponderously,steadfastly,jocularly,inconsistently,stirringly,gaily,unsuccessfully,fiercely,exceptionally,spitefully,robustly,obsequiously,clearly,provisionally,sweetly,kingly,devotedly,politically,hungrily,stunningly,suddenly,yearly,hectically,testily,temperamentally,expressly,unexpectedly,leisurely,curvaceously,insatiably,miserably,jubilantly,consentingly,reliantly,categorically,evidently,kindly,faintly,ideally,dangerously,dramatically,ungraciously,brusquely,menacingly,gloriously,impulsively,perfectly,strictly,staunchly,queenly,wretchedly,enjoyably,squalidly,fanatically,bravely,quirkily,deeply,minutely,fitfully,chiefly,initially,dauntlessly,prodigiously,painstakingly,awry,courteously,memorably,excitedly,romantically,justifiably,esoterically,inscrutably,commendably,positively,brilliantly,neglectfully,gaudily,lazily,meritoriously,pivotally,soberly,ferociously,possibly,competently,satanically,indubitably,oddly,immensely,purely,ignorantly,previously,fatally,brutally,customarily,fantastically,profoundly,sleepily,exorbitantly,between,sublimely,carnally,courageously,melodramatically,scarcely,handsomely,trivially,extraordinarily,specially,obsessively,limply,timidly,sloppily,hopefully,spontaneously,pompously,infectiously,discriminately,systematically,nonchalantly,diligently,senselessly,harmfully,idiotically,disastrously,boorishly,inordinately,unlikely,unerringly,decidedly,licentiously,sensationally,helpfully,wickedly,fiendishly,saucily,directly,nicely,lively,safely,exquisitely,vacantly,blandly,autocratically,considerably,solidly,eminently,expectantly,shabbily,stimulatingly,unintentionally,drunkenly,only,spotlessly,whimsically,tamely,unmannerly,disorderly,loosely,faultlessly,correspondingly,hellishly,deliberately,zealously,jointly,playfully,influentially,quixotically,perpetually,indisputably,inanely,enterprisingly,impudently,jealously,sexually,sizably,slyly,uniquely,timely,vulnerably,sturdily,even,ceremonially,mildly,intrinsically,nimbly,pardonably,preposterously,persuasively,cliquishly,mistakenly,disgracefully,sinisterly,densely,modestly,dissolutely,merrily,unduly,impertinently,profitably,watchfully,ravenously,originally,tolerantly,inherently,lackadaisically,imperfectly,roughly,flamboyantly,despondently,severely,indiscriminately,laboriously,suitably,insultingly,truthfully,unnaturally,explicitly,strenuously,delightfully,pleasingly,unscrupulously,irritably,restlessly,impatiently,tenderly,pointlessly,incidentally,manifestly,coherently,glamorously,briskly,nervously,separately,pictorially,tentatively,authoritatively,joyously,certainly,glumly,tenaciously,unreliably,joyfully,churlishly,fastidiously,successfully,neatly,undeniably,worthily,financially,luxuriantly,fondly,dreadfully,nearby,infrequently,warily,preliminarily,overly,lawlessly,callously,lamely,unflinchingly,conventionally,harmoniously,dismally,independently,frailly,bountifully,partially,coarsely,strikingly,dryly,magnanimously,subtly,mostly,horribly,truly,enviably,unshakably,liberally,restfully,consciously,lucidly,variously,skillfully,goodly,virtuously,stupidly,morbidly,caustically,far,temporally,potently,intermittently,ordinarily,uncaringly,regretfully,extensively,privately,unendingly,closely,rashly,obviously,prickly,contentiously,thirstily,rudely,easily,selectively,notably,mercifully,rarely,tensely,importantly,intensely,thoughtfully,decreasingly,unrealistically,undoubtedly,avidly,doubtfully,repeatedly,heedlessly,less,definitely,voluntarily,recklessly,speedily,timelessly,methodically,tremendously,conceptually,lasciviously,capriciously,rearward,sacredly,unwittingly,lovingly,preciously,excessively,interminably,away,onerously,gladly,succinctly,intricately,hilariously,promptly,scathingly,distressingly,suavely,crossly,swiftly,productively,cheerfully,ostentatiously,outwardly,understandably,moodily,credulously,shrewdly,proportionally,brazenly,ridiculously,expediently,obtrusively,mockingly,unrestrainedly,brashly,hideously,handily,impartially,snidely,unremittingly,monumentally,virtually,unbearably,worshipfully,reluctantly,fashionably,negatively,sooner,laudably,evasively,jauntily,electrifyingly,socially,dynamically,totally,foully,meticulously,mutinously,cravenly,sensually,woodenly,unwaveringly,uniformly,sentimentally,plausibly,infinitely,verbosely,ritualistically,buoyantly,knowingly,freshly,resoundingly,dubiously,painfully,uncivilly,charmingly,enviously,mundanely,sympathetically,ostensibly,defiantly,excruciatingly,urbanely,evermore,obscenely,putridly,stiffly,derisively,reverentially,exuberantly,vacuously,distinctly,unruly,tyrannically,guardedly,vicariously,thoroughly,cogently,indecently,seldom,shrilly,heinously,precariously,selfishly,lustfully,powerfully,inadvertently,purposely,treacherously,serenely,delicately,negligibly,deceitfully,voraciously,brightly,informally,presently,responsively,meekly,statically,tangibly,grimly,theatrically,widely,behind,practically,extrovertly,dearly,frugally,changeably,lightly,crudely,disproportionally,climatically,once,surly,uselessly,stately,falsely,wisely,euphorically,frantically,voluminously,rigorously,prominently,constantly,destructively,resentfully,backwards,invariably,spinelessly,freely,gruelingly,bitterly,strangely,immoderately,leniently,unsophisticatedly,poignantly,voluptuously,impolitely,gentlemanly,ingeniously,immaculately,profusely,deftly,carelessly,comically,hesitantly,tiredly,utterly,torpidly,desolately,forgetfully,broadly,specifically,consequently,erratically,tactfully,exceedingly,unequivocally,mournfully,rebelliously,left,traumatically,warmly,daintily,stylishly,greedily,lethargically,probably,never,unfriendly,frivolously,heavily,eventually,numerically,very,ungentlemanly,ominously,hardly,confidently,precisely,violently,naively,hugely,tediously,smartly,contemporaneously,vividly,potentially,stubbornly,candidly,fancifully,idiomatically,venomously,injudiciously,eagerly,shyly,perennially,legitimately,newly,eternally,hotly,spryly,fervently,proficiently,sternly,smoothly,disparagingly,horrendously,principally,irresponsibly,early,unselfishly,hollowly,suggestively,singly,concisely,longingly,clumsily,provocatively,immodestly,ungainly,increasingly,unassailably,unreasonably,correctly,poorly,benevolently,plainly,daily,overconfidently,murderously,supremely,backward,sullenly,seductively,upright,forward,furiously,earlier,uneasily,coolly,providentially,sharply,questionably,impetuously,somberly,unquestionably,cunningly,grotesquely,tumultuously,effeminately,civilly,glaringly,momentarily,shockingly,outlandishly,disdainfully,awfully,tightly,grievously,perilously,awkwardly,badly,insanely,flagrantly,routinely,barely,speculatively,erroneously,fully,straight,insolently,cryptically,permissively,gently,formally,glibly,haggardly,unhesitatingly,sadly,recently,fortunately,innocently,heavenly,imperiously,forever,propitiously,lavishly,uncontrollably,unfortunately,gruffly,tirelessly,illustriously,rapaciously,intelligibly,nearly,morosely,heroically,latently,inquisitively,effectively,tempestuously,rowdily,logically,gracefully,pointedly,riotously,buxomly,woefully,vaguely,regularly,flowerily,not,dictatorially,now,often,frenetically,fortuitously,developmentally,jokingly,unusually,irascibly,intrepidly,ludicrously,uneventfully,resolutely,confidentially,shortly,unevenly,shakily,gigantically,radically,fluently,discreetly,unfashionably,visibly,finely,conceitedly,enticingly,crucially,wily,thunderously,inaccurately,publicly,neighborly,frigidly,irrefutably,monstrously,mannerly,substantially,beneficially,scandalously,invigoratingly,unemotionally,insufferably,palatably,pessimistically,enthusiastically,marvelously,unequally,ghastly,diplomatically,fatefully,vastly,parsimoniously,singularly,viciously,dimly,ignominiously,nakedly,intelligently,ironically,rightfully,cordially,faithfully,blindly,unintelligently,centrally,more,normally,punctually,ruthlessly,fast,obligingly,sassily,extremely,copiously,deadly,placidly,hypnotically,favorably,wildly,foolishly,especially,politely,lately,ineffectually,valiantly,unfairly,properly,spaciously,vitally,erotically,monthly,habitually,wrongly,excellently,ravenously,sparingly,drastically,gratuitously,uncommonly,verifiably,beforehand,soon,steadily,hourly,locally,smugly,furtively,continually,capably,keenly,obnoxiously,objectively,immorally,willingly,tranquilly,fleetingly,cruelly,lewdly,extravagantly,unconsciously,before,grandly,indefinitely,conspicuously,victoriously,inadequately,sheepishly,fraudulently,tersely,indulgently,gleefully,insincerely,authentically,malevolently,childishly,soothingly,passionately,plentifully,generously,feebly,conscientiously,officially,vulgarly,crookedly,randomly,bleakly,briefly,sporadically,listlessly,reverently,indistinctly,symmetrically,forlornly,wobbly,covertly,sprightly,urgently,spiritually,slowly,reasonably,unpleasantly,superficially,immovably,incorrectly,resiliently,expertly,costly,thoughtlessly,obediently,naturally,endlessly,unstintingly,relentlessly,calmly,conclusively,passively,highly,curtly,mindfully,opulently,justly,industriously,tolerably,mysteriously,shamelessly,noisily,vainly,elsewhere,surreptitiously,drolly,haphazardly,blithely,secularly,diabolically,unceasingly,humorously,malignantly,incessantly,dogmatically,then,quietly,discourteously,sarcastically,corruptly,unambiguously,splendidly,considerately,unfathomably,tastefully,culturally,spasmodically,simply,loudly,congenially,weakly,out,petulantly,irregularly,righteously,solemnly,forth,egotistically,oppressively,incredibly,masterly,skeptically,energetically,shamefully,on,terribly,sedately,paradoxically,lowly,sorrowfully,basically,vivaciously,graciously,superlatively,rapidly,pensively,maliciously,scholarly,tearfully,slovenly,harshly,humanely,vilely,respectively,drably,neurotically,exactly,silently,obscurely,really,equally,usually,essentially,eloquently,beside,terrifically,infamously,summarily,patently,outward,unconditionally,busily,crisply,peculiarly,hysterically,surprisingly,prematurely,pleasantly,innately,monotonously,boastfully,mortally,emphatically,evenly,materially,gallantly,tragically,intentionally,orderly,supernaturally,mainly,beguilingly,pornographically,fairly,remotely,collectively,frankly,scornfully,hygienically,optimistically,madly,stealthily,particularly,divinely,too,unseemly,judiciously,dazzlingly,pertly,steeply,heartlessly,unspeakably,boldly,studiously,factually,completely,profanely,cautiously,thickly,ornamentally,exhilaratingly,flatly,famously,openly,typically,uncertainly,weekly,primarily,fearfully,loquaciously,unforgivably,hastily,thrillingly,timorously,prudently,somewhat,cheaply,ornately,seemly,strongly,staunchly,laconically,monetarily,unclearly,ecstatically,elegantly,deviously,compassionately,sourly,popularly,honestly,phenomenally,graphically,frequently,vehemently,flippantly,racially,worldly,rationally,traditionally,wholly,wantonly,presumptuously,conveniently,suspiciously,consensually,casually,enormously,seriously,fundamentally,gravely,tomorrow,fraternally,hedonistically,sometimes,critically,impeccably,massively,rigidly,wholesomely,grudgingly,cleverly,right,cataclysmically,wearily,securely,opaquely,softly,pathetically,professionally,firmly,lustily,elaborately,onward,carefully,queerly,happily,sickly,tortuously,thinly,bashfully,vociferously,cowardly,dully,vigorously,further,ineptly,emotionally,eerily,psychedelically,luckily);\t    __},{__row__:__11__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","a97marbr","ef161ad2","Removed alert-statements and added some comments","2014-09-11T09:53:19Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__12__,__code__:__\/\/ Returns a random integer between min (included) and max (excluded)    __},{__row__:__13__,__code__:__\/\/ Using Math.round() will give you a non-uniform distribution!    __},{__row__:__14__,__code__:__functiongetRandomInt(min, max) {    __},{__row__:__15__,__code__:__returnMath.floor(Math.random() * (max - min)) + min;    __},{__row__:__16__,__code__:__}    __},{__row__:__17__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","HGustavs","e0b32ac6","Seed v1.1 of Context Free Grammar","2014-09-05T17:43:57Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__18__,__code__:__functionedify(word){    __},{__row__:__19__,__code__:__var subs=word.slice(-1);    __},{__row__:__20__,__code__:__if(subs!=e){    __},{__row__:__21__,__code__:__returned;    __},{__row__:__22__,__code__:__\t}else{    __},{__row__:__23__,__code__:__returnd;    __},{__row__:__24__,__code__:__\t}    __},{__row__:__25__,__code__:__}    __},{__row__:__26__,__code__:__    __},{__row__:__27__,__code__:__functionrandomword(list,distribution){__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","a97marbr","ef161ad2","Removed alert-statements and added some comments","2014-09-11T09:53:19Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__28__,__code__:__if(distribution){    __},{__row__:__29__,__code__:__var r =getRandomInt(0,list.length+1);    __},{__row__:__30__,__code__:__return list[r];\t\t\t    __},{__row__:__31__,__code__:__\t} else {    __},{__row__:__32__,__code__:__    __},{__row__:__33__,__code__:__var ret=getRandomInt(0,list.length+1);    __},{__row__:__34__,__code__:__\t\tret =getRandomInt(0,ret);    __},{__row__:__35__,__code__:__return list[ret];    __},{__row__:__36__,__code__:__\t}__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","HGustavs","e0b32ac6","Seed v1.1 of Context Free Grammar","2014-09-05T17:43:57Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__37__,__code__:__}    __},{__row__:__38__,__code__:__    __},{__row__:__39__,__code__:__\/*__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","a97marbr","ef161ad2","Removed alert-statements and added some comments","2014-09-11T09:53:19Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__40__,__code__:__ * function replacen(search, replace, subject, n)    __},{__row__:__41__,__code__:__ *    __},{__row__:__42__,__code__:__ * Replaces term search with replace at the first occurrence after position n in string subject__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","HGustavs","e0b32ac6","Seed v1.1 of Context Free Grammar","2014-09-05T17:43:57Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__43__,__code__:__*\/    __},{__row__:__44__,__code__:__functionreplacen(search,replace,subject,n){    __},{__row__:__45__,__code__:__var foundpos=0;\t    __},{__row__:__46__,__code__:__var beforestr=;    __},{__row__:__47__,__code__:__var afterstr=;    __},{__row__:__48__,__code__:__    __},{__row__:__49__,__code__:__\/\/ TODO: make sure we start from n    __},{__row__:__50__,__code__:__    __},{__row__:__51__,__code__:__\tfoundpos=subject.indexOf(search);    __},{__row__:__52__,__code__:__    __},{__row__:__53__,__code__:__if (foundpos !=-1){    __},{__row__:__54__,__code__:__\t\tbeforestr =subject.substr(0, foundpos);    __},{__row__:__55__,__code__:__\t\tafterstr =subject.substr(foundpos+search.length);    __},{__row__:__56__,__code__:__\t\tsubject = beforestr + replace + afterstr;    __},{__row__:__57__,__code__:__\t}    __},{__row__:__58__,__code__:__    __},{__row__:__59__,__code__:__return subject;    __},{__row__:__60__,__code__:__    __},{__row__:__61__,__code__:__}    __},{__row__:__62__,__code__:__    __},{__row__:__63__,__code__:__functioncountfinds(search,subject){    __},{__row__:__64__,__code__:__    __},{__row__:__65__,__code__:__var n =0;    __},{__row__:__66__,__code__:__var count =0;    __},{__row__:__67__,__code__:__var index =0;    __},{__row__:__68__,__code__:__amp;gt;=0){    __},{__row__:__69__,__code__:__\t\tn =subject.indexOf(search, index);    __},{__row__:__70__,__code__:__if (n !=-1) count++;    __},{__row__:__71__,__code__:__\t\tindex = n +search.length;    __},{__row__:__72__,__code__:__\t}    __},{__row__:__73__,__code__:__return count;    __},{__row__:__74__,__code__:__    __},{__row__:__75__,__code__:__}\t    __},{__row__:__76__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","a97marbr","ef161ad2","Removed alert-statements and added some comments","2014-09-11T09:53:19Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__77__,__code__:__\/*    __},{__row__:__78__,__code__:__ * function replacerandom(placeholder, set, distribution, sentence)    __},{__row__:__79__,__code__:__ *    __},{__row__:__80__,__code__:__ * replace term placeholder with a random word from set using the distribution distribution in string sentence    __},{__row__:__81__,__code__:__ *    __},{__row__:__82__,__code__:__*\/__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","HGustavs","e0b32ac6","Seed v1.1 of Context Free Grammar","2014-09-05T17:43:57Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__83__,__code__:__functionreplacerandom(placeholder,set,distribution,sentence){__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","a97marbr","ef161ad2","Removed alert-statements and added some comments","2014-09-11T09:53:19Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__84__,__code__:__var found=countfinds(placeholder,sentence);\t\t\t    __},{__row__:__85__,__code__:__amp;lt;found;i++){    __},{__row__:__86__,__code__:__\t\tsentence=replacen(placeholder,randomword(set,distribution),sentence,0);\t\t\t\t\t    __},{__row__:__87__,__code__:__\t}    __},{__row__:__88__,__code__:__return sentence;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","HGustavs","e0b32ac6","Seed v1.1 of Context Free Grammar","2014-09-05T17:43:57Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__89__,__code__:__}__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","a97marbr","ef161ad2","Removed alert-statements and added some comments","2014-09-11T09:53:19Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__90__,__code__:__    __},{__row__:__91__,__code__:__    __},{__row__:__92__,__code__:__    __},{__row__:__93__,__code__:__\/*    __},{__row__:__94__,__code__:__ * Then major function in the library. This is the most likely function to use.    __},{__row__:__95__,__code__:__ *    __},{__row__:__96__,__code__:__ * generate_sentence(probnounphrase,     __},{__row__:__97__,__code__:__ *                   probverbphrase,    __},{__row__:__98__,__code__:__ *                   probdualajdectives,    __},{__row__:__99__,__code__:__ *                   probstartadj,    __},{__row__:__100__,__code__:__ *                   distributionnouns,    __},{__row__:__101__,__code__:__ *                   distributionverbs,    __},{__row__:__102__,__code__:__ *                   distributionadjectives,    __},{__row__:__103__,__code__:__ *                   distributionadverbs,    __},{__row__:__104__,__code__:__ *                   distributiondeterminers,    __},{__row__:__105__,__code__:__ *                   distributionconjunctions,    __},{__row__:__106__,__code__:__ *                   distributionmodals)    __},{__row__:__107__,__code__:__ *    __},{__row__:__108__,__code__:__ *    __},{__row__:__109__,__code__:__ * The various distributions Normal distribution aka Gaussian distribution. This means that words in the middle of the arrays are more likely to occur.    __},{__row__:__110__,__code__:__ * The second distribution you can use is a distribution where we select randomly from the normal distribution. This distribution makes it more likely to     __},{__row__:__111__,__code__:__ *    find words from the beginning of the arrays.    __},{__row__:__112__,__code__:__ *     __},{__row__:__113__,__code__:__ * To get normal distribution, set parameter to true    __},{__row__:__114__,__code__:__ * To get normal distribution squared, set parameter to null    __},{__row__:__115__,__code__:__ * TODO: Add a Beta Prime distribution.    __},{__row__:__116__,__code__:__*\/__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","HGustavs","e0b32ac6","Seed v1.1 of Context Free Grammar","2014-09-05T17:43:57Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__117__,__code__:__functiongenerate_sentence(probnounphrase,probverbphrase,probdualajdectives,probstartadj,distributionnouns,distributionverbs,distributionadjectives,distributionadverbs,distributiondeterminers,distributionconjunctions,distributionmodals) {    __},{__row__:__118__,__code__:__    __},{__row__:__119__,__code__:__\/\/\t\tvar noun,verb,determiner,adjective,adverb,conjunction,modal;    __},{__row__:__120__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","a97marbr","7b309eec","Removed unneeded random function in JS port","2014-09-11T10:07:19Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__121__,__code__:__var sentence=[subject] [verbphrase] [object];__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","HGustavs","e0b32ac6","Seed v1.1 of Context Free Grammar","2014-09-05T17:43:57Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__122__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","a97marbr","7b309eec","Removed unneeded random function in JS port","2014-09-11T10:07:19Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__123__,__code__:__\tsentence=sentence.replace([subject],[nounphrase]);    __},{__row__:__124__,__code__:__\tsentence=sentence.replace([object],[nounphrase]);__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","HGustavs","e0b32ac6","Seed v1.1 of Context Free Grammar","2014-09-05T17:43:57Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__125__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","a97marbr","7b309eec","Removed unneeded random function in JS port","2014-09-11T10:07:19Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__126__,__code__:__\/\/ Replace all nounphrases with delimiter noun or delimiter adjective noun    __},{__row__:__127__,__code__:__\/\/ Also add determiners and plural s    __},{__row__:__128__,__code__:__    __},{__row__:__129__,__code__:__var nonounphrases=countfinds([nounphrase],sentence);\t    __},{__row__:__130__,__code__:__amp;lt;nonounphrases;i++){__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","HGustavs","bc0c77ed","Update contextfreegrammar.js","2019-09-13T13:25:15Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__131__,__code__:__amp;gt;=probnounphrase){__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","HGustavs","e0b32ac6","Seed v1.1 of Context Free Grammar","2014-09-05T17:43:57Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__132__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","a97marbr","7b309eec","Removed unneeded random function in JS port","2014-09-11T10:07:19Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__133__,__code__:__var replacestring=randomword(determiner,distributiondeterminers);__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","HGustavs","e0b32ac6","Seed v1.1 of Context Free Grammar","2014-09-05T17:43:57Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__134__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","a97marbr","7b309eec","Removed unneeded random function in JS port","2014-09-11T10:07:19Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__135__,__code__:__if(replacestring==another||replacestring==a||replacestring==the||replacestring==one||replacestring==this||replacestring==that||replacestring==which||replacestring==either||replacestring==neither||replacestring==each||replacestring==every||replacestring==any||replacestring==whichever||replacestring==the same||replacestring==which||replacestring==whatever||replacestring==no||replacestring==my||replacestring==your||replacestring==our||replacestring==his||replacestring==her||replacestring==each||replacestring==the only||replacestring==the||replacestring==this||replacestring==that){    __},{__row__:__136__,__code__:__\t\t\t\t\t\treplacestring=+ replacestring + [noun];\t    __},{__row__:__137__,__code__:__\t\t\t\t}else{    __},{__row__:__138__,__code__:__\t\t\t\t\t\treplacestring=+ replacestring + [noun]s;\t\t\t\t    __},{__row__:__139__,__code__:__\t\t\t\t}__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","HGustavs","e0b32ac6","Seed v1.1 of Context Free Grammar","2014-09-05T17:43:57Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__140__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","a97marbr","7b309eec","Removed unneeded random function in JS port","2014-09-11T10:07:19Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__141__,__code__:__\t\t\t\tsentence=replacen([nounphrase],replacestring,sentence,0);    __},{__row__:__142__,__code__:__    __},{__row__:__143__,__code__:__\t\t}else{    __},{__row__:__144__,__code__:__\t\t\t\treplacestring=randomword(determiner,distributiondeterminers);__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","HGustavs","e0b32ac6","Seed v1.1 of Context Free Grammar","2014-09-05T17:43:57Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__145__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","a97marbr","7b309eec","Removed unneeded random function in JS port","2014-09-11T10:07:19Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__146__,__code__:__if(replacestring==another||replacestring==a||replacestring==the||replacestring==one||replacestring==this||replacestring==that||replacestring==which||replacestring==either||replacestring==neither||replacestring==each||replacestring==every||replacestring==any||replacestring==whichever||replacestring==the same||replacestring==which||replacestring==whatever||replacestring==no||replacestring==my||replacestring==your||replacestring==our||replacestring==his||replacestring==her||replacestring==each||replacestring==the only||replacestring==the||replacestring==this||replacestring==that){    __},{__row__:__147__,__code__:__\t\t\t\t\t\treplacestring=+ replacestring + [adjective] [noun];\t    __},{__row__:__148__,__code__:__\t\t\t\t}else{    __},{__row__:__149__,__code__:__\t\t\t\t\t\treplacestring=+ replacestring + [adjective] [noun]s;\t\t\t\t    __},{__row__:__150__,__code__:__\t\t\t\t}__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","HGustavs","e0b32ac6","Seed v1.1 of Context Free Grammar","2014-09-05T17:43:57Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__151__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","a97marbr","7b309eec","Removed unneeded random function in JS port","2014-09-11T10:07:19Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__152__,__code__:__\t\t\t\tsentence=replacen([nounphrase], replacestring, sentence,0);    __},{__row__:__153__,__code__:__\t\t}\t\t\t    __},{__row__:__154__,__code__:__\t}    __},{__row__:__155__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","HGustavs","e0b32ac6","Seed v1.1 of Context Free Grammar","2014-09-05T17:43:57Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__156__,__code__:__    __},{__row__:__157__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","a97marbr","7b309eec","Removed unneeded random function in JS port","2014-09-11T10:07:19Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__158__,__code__:__\/\/ Replace all noun determiners with a random determiner\t\t\t    __},{__row__:__159__,__code__:__\tfound=countfinds([determiner] [noun],sentence);    __},{__row__:__160__,__code__:__    __},{__row__:__161__,__code__:__amp;lt;found;i++){__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","HGustavs","e0b32ac6","Seed v1.1 of Context Free Grammar","2014-09-05T17:43:57Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__162__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","a97marbr","7b309eec","Removed unneeded random function in JS port","2014-09-11T10:07:19Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__163__,__code__:__\/\/console.log(FOO+ sentence +found);    __},{__row__:__164__,__code__:__var replacestring=randomword(determiner,distributiondeterminers);    __},{__row__:__165__,__code__:__    __},{__row__:__166__,__code__:__if(replacestring==another||replacestring==a||replacestring==the||replacestring==one||replacestring==much||replacestring==this||replacestring==that||replacestring==which||replacestring==either||replacestring==neither||replacestring==each||replacestring==every||replacestring==any||replacestring==whichever||replacestring==the same||replacestring==which||replacestring==whatever||replacestring==no||replacestring==my||replacestring==your||replacestring==our||replacestring==his||replacestring==her||replacestring==each||replacestring==the only||replacestring==the||replacestring==this||replacestring==that){    __},{__row__:__167__,__code__:__\t\t\treplacestring=+replacestring+ [noun];\t    __},{__row__:__168__,__code__:__\t\t} else {    __},{__row__:__169__,__code__:__\t\t\treplacestring=+replacestring+ [noun]s;\t\t\t\t__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","HGustavs","e0b32ac6","Seed v1.1 of Context Free Grammar","2014-09-05T17:43:57Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__170__,__code__:__\t\t}    __},{__row__:__171__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","a97marbr","7b309eec","Removed unneeded random function in JS port","2014-09-11T10:07:19Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__172__,__code__:__\t\tsentence=replacen([determiner] [noun],replacestring,sentence,0);\t\t\t\t    __},{__row__:__173__,__code__:__\t}    __},{__row__:__174__,__code__:__    __},{__row__:__175__,__code__:__\/\/ Replace all verbphrases with verb or adverb verb\t\t\t    __},{__row__:__176__,__code__:__\tnonounphrases=countfinds([verbphrase],sentence);\t\t\t    __},{__row__:__177__,__code__:__amp;lt;nonounphrases;i++){__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","HGustavs","bc0c77ed","Update contextfreegrammar.js","2019-09-13T13:25:15Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__178__,__code__:__amp;gt;=probverbphrase){__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","a97marbr","7b309eec","Removed unneeded random function in JS port","2014-09-11T10:07:19Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__179__,__code__:__\t\t\t\tsentence=replacen([verbphrase],[verb],sentence,0);\t\t\t\t\t    __},{__row__:__180__,__code__:__\t\t}else{    __},{__row__:__181__,__code__:__\t\t\t\tsentence=replacen([verbphrase],[adverb] [verb],sentence,0);\t\t\t\t\t\t\t    __},{__row__:__182__,__code__:__\t\t}\t\t\t    __},{__row__:__183__,__code__:__\t}    __},{__row__:__184__,__code__:__    __},{__row__:__185__,__code__:__\/\/ Replace some adjectives with two adjectives    __},{__row__:__186__,__code__:__\tadjectives=countfinds([adjective],sentence);\t\t\t    __},{__row__:__187__,__code__:__amp;lt;adjectives;i++){__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","HGustavs","bc0c77ed","Update contextfreegrammar.js","2019-09-13T13:25:15Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__188__,__code__:__amp;gt;=probdualajdectives){__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","a97marbr","7b309eec","Removed unneeded random function in JS port","2014-09-11T10:07:19Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__189__,__code__:__\t\t\tsentence=replacen([adjective],[dual adjective],sentence,0);\t\t\t\t\t    __},{__row__:__190__,__code__:__\t\t}\t\t\t    __},{__row__:__191__,__code__:__\t}    __},{__row__:__192__,__code__:__    __},{__row__:__193__,__code__:__\/\/ Replace all dual adjectives with two adjectives    __},{__row__:__194__,__code__:__\/\/ One alternative to this is to insert an and between the two adjectives    __},{__row__:__195__,__code__:__\tdualadjectives=countfinds([dual adjective],sentence);\t\t\t    __},{__row__:__196__,__code__:__amp;lt;dualadjectives;i++){    __},{__row__:__197__,__code__:__\t\tsentence=replacen([dual adjective],[adjective] [conjunction] [adjective],sentence,0);\t\t\t\t\t    __},{__row__:__198__,__code__:__\t}    __},{__row__:__199__,__code__:__    __},{__row__:__200__,__code__:__\/\/ Replace all conjunctions with a random conjunction\t\t\t    __},{__row__:__201__,__code__:__var conjunctions=countfinds([adjective] [conjunction] [adjective],sentence);\t\t    __},{__row__:__202__,__code__:__\/\/console.log(Before conjunction loop: [+found+]  + sentence);    __},{__row__:__203__,__code__:__amp;lt;conjunctions;i++){    __},{__row__:__204__,__code__:__\/\/console.log(Before conjunction: +sentence);\t\t\t    __},{__row__:__205__,__code__:__\t\treplacestring=randomword(conjunction,distributionconjunctions);    __},{__row__:__206__,__code__:__if(replacestring==or){    __},{__row__:__207__,__code__:__\t\t\treplacestring=either [adjective] or [adjective];    __},{__row__:__208__,__code__:__\t\t} elseif (replacestring==nor){    __},{__row__:__209__,__code__:__\t\t\treplacestring=neither [adjective] nor [adjective];\t\t\t\t\t    __},{__row__:__210__,__code__:__\t\t} elseif (replacestring==both){\t\t\t\t\t\t\t\t\t    __},{__row__:__211__,__code__:__\t\t\treplacestring=both [adjective] and [adjective];    __},{__row__:__212__,__code__:__\t\t} elseif (replacestring==equally){\t\t\t\t\t\t\t\t\t    __},{__row__:__213__,__code__:__\t\t\treplacestring=equally [adjective] and [adjective];    __},{__row__:__214__,__code__:__\t\t} else {    __},{__row__:__215__,__code__:__\t\t\treplacestring=[adjective] + replacestring+ [adjective];__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","HGustavs","e0b32ac6","Seed v1.1 of Context Free Grammar","2014-09-05T17:43:57Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__216__,__code__:__\t\t}__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","a97marbr","7b309eec","Removed unneeded random function in JS port","2014-09-11T10:07:19Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__217__,__code__:__\t\tsentence=replacen([adjective] [conjunction] [adjective],replacestring,sentence,0);\t\t\t\t\t\t\t    __},{__row__:__218__,__code__:__\t}__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","HGustavs","e0b32ac6","Seed v1.1 of Context Free Grammar","2014-09-05T17:43:57Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__219__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","a97marbr","7b309eec","Removed unneeded random function in JS port","2014-09-11T10:07:19Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__220__,__code__:__\/\/ Replace all nouns with a random noun    __},{__row__:__221__,__code__:__\tsentence=replacerandom([noun],noun,distributionnouns,sentence);\t\t\t__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","HGustavs","e0b32ac6","Seed v1.1 of Context Free Grammar","2014-09-05T17:43:57Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__222__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","a97marbr","7b309eec","Removed unneeded random function in JS port","2014-09-11T10:07:19Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__223__,__code__:__\/\/ Replace all verbs with a random verb    __},{__row__:__224__,__code__:__\/\/ Verbs have modals    __},{__row__:__225__,__code__:__    __},{__row__:__226__,__code__:__var found=countfinds([verb],sentence);\t\t\t    __},{__row__:__227__,__code__:__amp;lt;found;i++){    __},{__row__:__228__,__code__:__\t\treplacestring=randomword(verb,distributionverbs);    __},{__row__:__229__,__code__:__\t\tamodal=randomword(modal,distributionmodals);__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","HGustavs","e0b32ac6","Seed v1.1 of Context Free Grammar","2014-09-05T17:43:57Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__230__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","a97marbr","7b309eec","Removed unneeded random function in JS port","2014-09-11T10:07:19Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__231__,__code__:__if(amodal==s){    __},{__row__:__232__,__code__:__\t\t\treplacestring+=s;    __},{__row__:__233__,__code__:__\t\t} elseif (amodal==ed){    __},{__row__:__234__,__code__:__\t\t\treplacestring+=edify(replacestring);\t    __},{__row__:__235__,__code__:__\t\t} elseif (amodal==had){    __},{__row__:__236__,__code__:__\t\t\treplacestring=amodal++replacestring+edify(replacestring);\t\t\t\t\t    __},{__row__:__237__,__code__:__\t\t} else {    __},{__row__:__238__,__code__:__\/\/ All others such as can shall will did etc    __},{__row__:__239__,__code__:__\t\t\treplacestring=amodal++replacestring;\t\t\t\t__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","HGustavs","e0b32ac6","Seed v1.1 of Context Free Grammar","2014-09-05T17:43:57Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__240__,__code__:__\t\t}__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","a97marbr","7b309eec","Removed unneeded random function in JS port","2014-09-11T10:07:19Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__241__,__code__:__    __},{__row__:__242__,__code__:__\t\tsentence=replacen([verb],replacestring,sentence,0);\t\t\t\t    __},{__row__:__243__,__code__:__\t}__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","HGustavs","e0b32ac6","Seed v1.1 of Context Free Grammar","2014-09-05T17:43:57Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__244__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","a97marbr","7b309eec","Removed unneeded random function in JS port","2014-09-11T10:07:19Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__245__,__code__:__\/\/ Replace all adverbs with a random adverb\t\t\t    __},{__row__:__246__,__code__:__\tsentence=replacerandom([adverb],adverb,distributionadverbs,sentence);\t\t\t__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","HGustavs","e0b32ac6","Seed v1.1 of Context Free Grammar","2014-09-05T17:43:57Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__247__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","a97marbr","7b309eec","Removed unneeded random function in JS port","2014-09-11T10:07:19Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__248__,__code__:__\/\/ Replace all adjectives with a random adjective\t\t\t    __},{__row__:__249__,__code__:__\tsentence=replacerandom([adjective],adjective,distributionadjectives,sentence);\t    __},{__row__:__250__,__code__:__    __},{__row__:__251__,__code__:__\/\/ Remove starting space and add period and make first letter capital.\t\t    __},{__row__:__252__,__code__:__\tsentence =sentence.substr(1);    __},{__row__:__253__,__code__:__\/\/ remove double spaces    __},{__row__:__254__,__code__:__\tsentence =sentence.replace(\/\/g, );__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","HGustavs","e0b32ac6","Seed v1.1 of Context Free Grammar","2014-09-05T17:43:57Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__255__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","a97marbr","7b309eec","Removed unneeded random function in JS port","2014-09-11T10:07:19Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__256__,__code__:__returnsentence.charAt(0).toUpperCase() +sentence.slice(1) +. ;__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","HGustavs","e0b32ac6","Seed v1.1 of Context Free Grammar","2014-09-05T17:43:57Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__257__}]");
INSERT INTO SECTION(filename,author,commitid,message,timestamp,fullname,repo,lines) VALUES("js/contextfreegrammar.js","HGustavs","428c4a03","Update contextfreegrammar.js","2019-09-13T13:14:27Z","js/contextfreegrammar.js","ContextFreeLib","[{__row__:__258__,__code__:__}__}]");

INSERT INTO REPO(name,url,files) VALUES("shaker.js","https://github.com/HGustavs/Shaker.js","[{__type__:__file__,__fullname__:__LICENSE__,__name__:__LICENSE__,__url__:__https://raw.githack.com/HGustavs/Shaker.js/master/LICENSE__,__subdirectory__:[]},{__type__:__file__,__fullname__:__README.md__,__name__:__README.md__,__url__:__https://raw.githack.com/HGustavs/Shaker.js/master/README.md__,__subdirectory__:[]},{__type__:__directory__,__fullname__:__gyro_examples__,__name__:__gyro_examples__,__subdirectory__:[{__type__:__file__,__fullname__:__gyro_examples/gyro_example_ball1.html__,__name__:__gyro_example_ball1.html__,__url__:__https://raw.githack.com/HGustavs/Shaker.js/master/gyro_examples/gyro_example_ball1.html__,__subdirectory__:[]},{__type__:__file__,__fullname__:__gyro_examples/gyro_example_ball2.html__,__name__:__gyro_example_ball2.html__,__url__:__https://raw.githack.com/HGustavs/Shaker.js/master/gyro_examples/gyro_example_ball2.html__,__subdirectory__:[]},{__type__:__file__,__fullname__:__gyro_examples/gyro_example_ball2.html__,__name__:__gyro_example_compass.html__,__url__:__https://raw.githack.com/HGustavs/Shaker.js/master/gyro_examples/gyro_example_compass.html__,__subdirectory__:[]},{__type__:__file__,__fullname__:__gyro_examples/gyro_example_ball2.html__,__name__:__gyro_example_gyro.html__,__url__:__https://raw.githack.com/HGustavs/Shaker.js/master/gyro_examples/gyro_example_gyro.html__,__subdirectory__:[]},{__type__:__file__,__fullname__:__gyro_examples/gyro_example_ball2.html__,__name__:__gyro_example_supercar.html__,__url__:__https://raw.githack.com/HGustavs/Shaker.js/master/gyro_examples/gyro_example_supercar.html__,__subdirectory__:[]},{__type__:__directory__,__fullname__:__gyro_examples/images__,__orientation_examplesname__:__images__,__subdirectory__:[{__type__:__file__,__fullname__:__gyro_examples/images/Ballsy.svg__,__name__:__Ballsy.svg__,__url__:__https://raw.githack.com/HGustavs/Shaker.js/master/gyro_examples/images/Ballsy.svg__,__subdirectory__:[]},{__type__:__file__,__fullname__:__gyro_examples/images/gyroc.svg__,__name__:__gyroc.svg__,__url__:__https://raw.githack.com/HGustavs/Shaker.js/master/gyro_examples/images/gyroc.svg__,__subdirectory__:[]},{__type__:__file__,__fullname__:__gyro_examples/images/starz.svg__,__name__:__starz.svg__,__url__:__https://raw.githack.com/HGustavs/Shaker.js/master/gyro_examples/images/starz.svg__,__subdirectory__:[]},{__type__:__file__,__fullname__:__gyro_examples/images/starzc.svg__,__name__:__starzc.svg__,__url__:__https://raw.githack.com/HGustavs/Shaker.js/master/gyro_examples/images/starzc.svg__,__subdirectory__:[]}]}]},{__type__:__directory__,__fullname__:__orientation_examples__,__name__:__orientation_examples__,__subdirectory__:[{__type__:__file__,__fullname__:__orientation_examples/orientation_example1.html__,__name__:__orientation_example1.html__,__url__:__https://raw.githack.com/HGustavs/Shaker.js/master/orientation_examples/orientation_example1.html__,__subdirectory__:[]},{__type__:__file__,__fullname__:__orientation_examples/orientation_example2.html__,__name__:__orientation_example2.html__,__url__:__https://raw.githack.com/HGustavs/Shaker.js/master/orientation_examples/orientation_example2.html__,__subdirectory__:[]}]},{__type__:__directory__,__fullname__:__shake_examples__,__name__:__shake_examples__,__subdirectory__:[{__tracked__:__true__,__type__:__file__,__fullname__:__shake_examples/shake_example1.html__,__name__:__shake_example1.html__,__url__:__https://raw.githack.com/HGustavs/Shaker.js/master/shake_examples/shake_example1.html__,__subdirectory__:[]},{__tracked__:__true__,__type__:__file__,__fullname__:__shake_examples/shake_example2.html__,__name__:__shake_example2.html__,__url__:__https://raw.githack.com/HGustavs/Shaker.js/master/shake_examples/shake_example1.html__,__subdirectory__:[]}]},{__tracked__:__true__,__type__:__file__,__fullname__:__shaker.js__,__name__:__shaker.js__,__url__:__https://raw.githack.com/HGustavs/Shaker.js/master/shaker.js__,__subdirectory__:[]}]");
INSERT INTO REPO(name,url,files) VALUES("ContextFreeLib","https://github.com/HGustavs/ContextFreeLib","[{__type__:__file__,__fullname__:__LICENSE__,__name__:__LICENSE__,__url__:__https://raw.githack.com/HGustavs/ContextFreeLib/master/LICENSE.md__,__subdirectory__:[]},{__type__:__file__,__fullname__:__README.md__,__name__:__README.md__,__url__:__https://raw.githack.com/HGustavs/ContextFreeLib/master/README.md__,__subdirectory__:[]},{__type__:__directory__,__name__:__js__,__fullname__:__js__,__subdirectory__:[{__tracked__:__true__,__type__:__file__,__fullname__:__js/contextfreegrammar.js__,__name__:__contextfreegrammar.js__,__url__:__https://raw.githack.com/HGustavs/ContextFreeLib/master/js/contextfreegrammar.js__,__subdirectory__:[]},{__type__:__file__,__fullname__:__js/testgrammar.html__,__name__:__testgrammar.html__,__url__:__https://raw.githack.com/HGustavs/ContextFreeLib/master/js/testgrammar.html__,__subdirectory__:[]}]},{__type__:__directory__,__fullname__:__php__,__name__:__php__,__subdirectory__:[{__type__:__file__,__fullname__:__php/orientation_example1.html__,__name__:__orientation_example1.html__,__url__:__https://raw.githack.com/HGustavs/ContextFreeLib/master/php/ContextFreeGrammar.php__,__subdirectory__:[]},{__type__:__file__,__fullname__:__php/orientation_example2.html__,__name__:__orientation_example2.html__,__url__:__https://raw.githack.com/HGustavs/ContextFreeLib/master/php/convertwords.php__,__subdirectory__:[]},{__type__:__file__,__fullname__:__php/orientation_example2.html__,__name__:__orientation_example2.html__,__url__:__https://raw.githack.com/HGustavs/ContextFreeLib/master/php/wordlists.php__,__subdirectory__:[]}]}]");
INSERT INTO REPO(name,url,files) VALUES("SchedSYS","https://github.com/HGustavs/SchedSYS","[{__type__:__file__,__fullname__:__README.md__,__name__:__README.md__,__url__:__https://raw.githack.com/HGustavs/SchedSYS/master/README.md__,__subdirectory__:[]},{__type__:__file__,__fullname__:__config.php__,__name__:__config.php__,__url__:__https://raw.githack.com/HGustavs/SchedSYS/master/config.php__,__subdirectory__:[]},{__type__:__file__,__fullname__:__admin.php__,__name__:__admin.php__,__url__:__https://raw.githack.com/HGustavs/SchedSYS/master/admin.php__,__subdirectory__:[]},{__type__:__file__,__fullname__:__adminlogin.php__,__name__:__adminlogin.php__,__url__:__https://raw.githack.com/HGustavs/SchedSYS/master/adminlogin.php__,__subdirectory__:[]},{__type__:__file__,__fullname__:__canvas.js__,__name__:__canvas.js__,__url__:__https://raw.githack.com/HGustavs/SchedSYS/master/canvas.js__,__subdirectory__:[]},{__type__:__file__,__fullname__:__confsched_service_new.php__,__url__:__https://raw.githack.com/HGustavs/SchedSYS/master/confsched_service_new.php__,__subdirectory__:[]},{__type__:__file__,__fullname__:__coursedata.js__,__url__:__https://raw.githack.com/HGustavs/SchedSYS/master/coursedata.js__,__subdirectory__:[]},{__type__:__file__,__fullname__:__gindex.php__,__name__:__gindex.php__,__url__:__https://raw.githack.com/HGustavs/SchedSYS/master/gindex.php__,__subdirectory__:[]},{__type__:__file__,__fullname__:__json_export_ical.php__,__name__:__json_export_ical.php__,__url__:__https://raw.githack.com/HGustavs/SchedSYS/master/json_export_ical.php__,__subdirectory__:[]},{__type__:__file__,__fullname__:__json_export_sign.php__,__name__:__json_export_sign.php__,__url__:__https://raw.githack.com/HGustavs/SchedSYS/master/json_export_sign.php__,__subdirectory__:[]},{__type__:__file__,__fullname__:__json_export_xml.php__,__name__:__json_export_xml.php__,__url__:__https://raw.githack.com/HGustavs/SchedSYS/master/json_export_xml.php__,__subdirectory__:[]},{__type__:__file__,__fullname__:__lineback.svg__,__name__:__lineback.svg__,__url__:__https://raw.githack.com/HGustavs/SchedSYS/master/lineback.svg__,__subdirectory__:[]},{__type__:__file__,__fullname__:__showcourses_demo.js__,__name__:__showcourses_demo.js__,__url__:__https://raw.githack.com/HGustavs/SchedSYS/master/showcourses_demo.js__,__subdirectory__:[]},{__type__:__file__,__fullname__:__showcourses_demo.html__,__name__:__showcourses_demo.html__,__url__:__https://raw.githack.com/HGustavs/SchedSYS/master/showcourses_demo.html__,__subdirectory__:[]},{__type__:__file__,__fullname__:__showsched.js__,__name__:__showsched.js__,__url__:__https://raw.githack.com/HGustavs/SchedSYS/master/showsched.js__,__subdirectory__:[]},{__type__:__file__,__fullname__:__showsched.php__,__name__:__showsched.php__,__url__:__https://raw.githack.com/HGustavs/SchedSYS/master/showsched.php__,__subdirectory__:[]},{__type__:__file__,__fullname__:__showsched_demo.js__,__name__:__showsched_demo.js__,__url__:__https://raw.githack.com/HGustavs/SchedSYS/master/showsched_demo.js__,__subdirectory__:[]},{__type__:__file__,__fullname__:__showsched_demo.php__,__name__:__showsched_demo.php__,__url__:__https://raw.githack.com/HGustavs/SchedSYS/master/showsched_demo.php__,__subdirectory__:[]},{__type__:__file__,__fullname__:__showsched_service_new.php__,__name__:__showsched_service_new.php__,__url__:__https://raw.githack.com/HGustavs/SchedSYS/master/showsched_service_new.php__,__subdirectory__:[]}]");
INSERT INTO REPO(name,url,files) VALUES("SortableTableLibrary","https://github.com/HGustavs/SortableTableLibrary","[{__type__:__file__,__fullame__:__Icon_Cross.svg__,__name__:__Icon_Cross.svg__,__url__:__https://raw.githack.com/HGustavs/SortableTableLibrary/master/Icon_Cross.svg__,__subdirectory__:[]},{__type__:__file__,__fullfname__:__Icon_Tick.svg__,__name__:__Icon_Tick.svg__,__url__:__https://raw.githack.com/HGustavs/SortableTableLibrary/master/Icon_Tick.svg__,__subdirectory__:[]},{__type__:__file__,__fullname__:__LICENSE__,__name__:__LICENSE__,__url__:__https://raw.githack.com/HGustavs/SortableTableLibrary/master/LICENSE__,__subdirectory__:[]},{__type__:__file__,__fullname__:__TickAndX.svg__,__name__:__TickAndX.svg__,__url__:__https://raw.githack.com/HGustavs/SortableTableLibrary/master/TickAndX.svg__,__subdirectory__:[]},{__type__:__file__,__fullname__:__db_service.php__,__name__:__db_service.php__,__url__:__https://raw.githack.com/HGustavs/SortableTableLibrary/master/db_service.php__,__subdirectory__:[]},{__type__:__file__,__fullname__:__fixedtest.html__,__name__:__fixedtest.html__,__ame__:__fixedtest.html__,__url__:__https://raw.githack.com/HGustavs/SortableTableLibrary/master/fixedtest.html__,__subdirectory__:[]},{__tracked__:__true__,__type__:__file__,__fullname__:__sortableTable.js__,__name__:__sortableTable.js__,__url__:__https://raw.githack.com/HGustavs/SortableTableLibrary/master/sortableTable.js__,__subdirectory__:[]},{__type__:__file__,__fullname__:__sortableTableDemo.html__,__name__:__sortableTableDemo.html__,__url__:__https://raw.githack.com/HGustavs/SortableTableLibrary/master/sortableTableDemo.html__,__subdirectory__:[]},{__type__:__file__,__fullname__:__sortableTableDemo_changeColumnOrder.html__,__name__:__sortableTableDemo_changeColumnOrder.html__,__url__:__https://raw.githack.com/HGustavs/SortableTableLibrary/master/sortableTableDemo_changeColumnOrder.html__,__subdirectory__:[]},{__type__:__file__,__fullname__:__sortableTableDemo_columnfilter.html__,__name__:__sortableTableDemo_columnfilter.html__,__url__:__https://raw.githack.com/HGustavs/SortableTableLibrary/master/sortableTableDemo_columnfilter.html__,__subdirectory__:[]},{__type__:__file__,__fullname__:__sortableTableDemo_edit.html__,__name__:__sortableTableDemo_edit.html__,__url__:__https://raw.githack.com/HGustavs/SortableTableLibrary/master/sortableTableDemo_edit.html__,__subdirectory__:[]},{__type__:__file__,__fnullame__:__sortableTableDemo_highlight.html__,__name__:__sortableTableDemo_highlight.html__,__url__:__https://raw.githack.com/HGustavs/SortableTableLibrary/master/sortableTableDemo_highlight.html__,__subdirectory__:[]},{__type__:__file__,__fullname__:__sortableTableDemo_highlight_adv.html__,__name__:__sortableTableDemo_highlight_adv.html__,__url__:__https://raw.githack.com/HGustavs/SortableTableLibrary/master/sortableTableDemo_highlight_adv.html__,__subdirectory__:[]},{__type__:__file__,__fullname__:__sortableTableDemo_rowfilter.html__,__name__:__sortableTableDemo_rowfilter.html__,__url__:__https://raw.githack.com/HGustavs/SortableTableLibrary/master/sortableTableDemo_rowfilter.html__,__subdirectory__:[]},{__type__:__file__,__fullname__:__sortableTableDemo_rowsum_advanced.html__,__name__:__sortableTableDemo_rowsum_advanced.html__,__url__:__https://raw.githack.com/HGustavs/SortableTableLibrary/master/sortableTableDemo_rowsum_advanced.html__,__subdirectory__:[]},{__type__:__file__,__fullname__:__sortableTableDemo_rowsum_multiple.html__,__name__:__sortableTableDemo_rowsum_multiple.html__,__url__:__https://raw.githack.com/HGustavs/SortableTableLibrary/master/sortableTableDemo_rowsum_multiple.html__,__subdirectory__:[]},{__type__:__file__,__fullname__:__sortableTableDemo_rowsum_simple.html__,__name__:__sortableTableDemo_rowsum_simple.html__,__url__:__https://raw.githack.com/HGustavs/SortableTableLibrary/master/sortableTableDemo_rowsum_simple.html__,__subdirectory__:[]},{__type__:__file__,__fullname__:__sortableTableDemo_rowsum_simple.html__,__name__:__sortableTableDemo_rowsum_simple.html__,__url__:__https://raw.githack.com/HGustavs/SortableTableLibrary/master/sortableTableDemo_rowsum_simple.html__,__subdirectory__:[]},{__type__:__file__,__fullname__:__sortableTableDemo_simplest.html__,__name__:__sortableTableDemo_simplest.html__,__url__:__https://raw.githack.com/HGustavs/SortableTableLibrary/master/sortableTableDemo_simplest.html__,__subdirectory__:[]},{__type__:__file__,__fullname__:__sortableTableDemo_simplest_w_magich.html__,__name__:__sortableTableDemo_simplest_w_magich.html__,__url__:__https://raw.githack.com/HGustavs/SortableTableLibrary/master/sortableTableDemo_simplest_w_magich.html__,__subdirectory__:[]},{__type__:__file__,__fullname__:__sortableTableDemo_sortadvanced.html__,__name__:__sortableTableDemo_sortadvanced.html__,__url__:__https://raw.githack.com/HGustavs/SortableTableLibrary/master/sortableTableDemo_sortadvanced.html__,__subdirectory__:[]},{__type__:__file__,__fullname__:__sortableTableDemo_sortsimple.html__,__name__:__sortableTableDemo_sortsimple.html__,__url__:__https://raw.githack.com/HGustavs/SortableTableLibrary/master/sortableTableDemo_sortsimple.html__,__subdirectory__:[]},{__type__:__file__,__fullname__:__style.css__,__name__:__style.css__,__url__:__https://raw.githack.com/HGustavs/SortableTableLibrary/master/style.css__,__subdirectory__:[]},{__type__:__file__,__fullname__:__wingette.png__,__name__:__wingette.png__,__url__:__https://raw.githack.com/HGustavs/SortableTableLibrary/master/wingette.png__,__subdirectory__:[]}]");
INSERT INTO REPO(name,url,files) VALUES("SurveySYS","https://github.com/HGustavs/SurveySYS","[{__type__:__file__,__fullame__:__LICENSE__,__name__:__LICENSE__,__url__:__https://raw.githack.com/HGustavs/SurveySYS/master/LICENSE__,__subdirectory__:[]},{__type__:__file__,__fullame__:__README.md__,__name__:__README.md__,__url__:__https://raw.githack.com/HGustavs/SurveySYS/master/README.md__,__subdirectory__:[]},{__type__:__file__,__fullame__:__createSurvey.php__,__name__:__createSurvey.php__,__url__:__https://raw.githack.com/HGustavs/SurveySYS/master/createSurvey.php__,__subdirectory__:[]},{__type__:__file__,__fullame__:__doSurvey.php__,__name__:__doSurvey.php__,__url__:__https://raw.githack.com/HGustavs/SurveySYS/master/doSurvey.php__,__subdirectory__:[]},{__type__:__file__,__fullame__:__editSurvey.php__,__name__:__editSurvey.php__,__url__:__https://raw.githack.com/HGustavs/SurveySYS/master/editSurvey.php__,__subdirectory__:[]},{__type__:__file__,__fullame__:__fixdb.php__,__name__:__fixdb.php__,__url__:__https://raw.githack.com/HGustavs/SurveySYS/master/fixdb.php__,__subdirectory__:[]},{__type__:__file__,__fullame__:__saveSurvey.php__,__name__:__saveSurvey.php__,__url__:__https://raw.githack.com/HGustavs/SurveySYS/master/saveSurvey.php__,__subdirectory__:[]}]");
